{
  "address": "0xbCA09946119227C0D884D64498C26DB36EB3843a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_tags",
          "type": "string[]"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_campaignURI",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_registryAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_linkTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "Campaign__AlreadyExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "Campaign__CampaignBankrupt",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Campaign__DonatorIsCreator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donatorAddress",
          "type": "address"
        }
      ],
      "name": "Campaign__NoDonationsHere",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Campaign__NotCreator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "Campaign__NotWithrawable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Campaign__PayoutFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Campaign__RefundFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Campaign__UpkeepNotNeeded",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignExpired",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignSuccessful",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CreatorPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "currentBalance",
          "type": "uint256"
        }
      ],
      "name": "FundingRecieved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "campaignURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "category",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "donations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "duration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCampaignDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "tags",
              "type": "string[]"
            },
            {
              "internalType": "uint256",
              "name": "goalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentBalance",
              "type": "uint256"
            },
            {
              "internalType": "enum Campaign.State",
              "name": "currentState",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "nowRefundable",
              "type": "bool"
            }
          ],
          "internalType": "struct Campaign.CampaignObject",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCampaignState",
      "outputs": [
        {
          "internalType": "enum Campaign.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "getDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNowRefundable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "goalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nowPayable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nowRefundable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Campaign.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tags",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "title",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_campaignURI",
          "type": "string"
        }
      ],
      "name": "updateCampaignURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_additionalTime",
          "type": "uint256"
        }
      ],
      "name": "updateDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newGoalAmount",
          "type": "uint256"
        }
      ],
      "name": "updateGoalAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x75066788cf9b65fb70b72a1552539dcd22fb4c548bbf42e846fd2f8ccf270738",
  "receipt": {
    "to": null,
    "from": "0x4B5a2B7b5438A79797698570AC9D45155D3Bb0e3",
    "contractAddress": "0xbCA09946119227C0D884D64498C26DB36EB3843a",
    "transactionIndex": 43,
    "gasUsed": "3206234",
    "logsBloom": "0x
    "blockHash": "0x5be28c48675aa0c914316fc4b99e3de7c2e09b10da0d55226d6bc6ac60edc33f",
    "transactionHash": "0x75066788cf9b65fb70b72a1552539dcd22fb4c548bbf42e846fd2f8ccf270738",
    "logs": [],
    "blockNumber": 8566440,
    "cumulativeGasUsed": "5518735",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4B5a2B7b5438A79797698570AC9D45155D3Bb0e3",
    "Furry Mittens",
    "Making mittens furry.",
    "Cooking",
    [
      "cooking",
      "household",
      "culinary"
    ],
    2,
    "1296000",
    "ipfs://campaignuri",
    "0x02777053d6764996e594c3E88AF1D58D5363a2e6",
    "0x326C977E6efc84E512bB9C30f76E30c160eD06FB"
  ],
  "numDeployments": 1,
  "solcInputHash": "e435685e78bceece60c9d0331bd38d7e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_tags\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_campaignURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_registryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_linkTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"Campaign__AlreadyExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"Campaign__CampaignBankrupt\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Campaign__DonatorIsCreator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donatorAddress\",\"type\":\"address\"}],\"name\":\"Campaign__NoDonationsHere\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Campaign__NotCreator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"Campaign__NotWithrawable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Campaign__PayoutFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Campaign__RefundFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Campaign__UpkeepNotNeeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CreatorPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"}],\"name\":\"FundingRecieved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"campaignURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"category\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"donations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaignDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"tags\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"enum Campaign.State\",\"name\":\"currentState\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"nowRefundable\",\"type\":\"bool\"}],\"internalType\":\"struct Campaign.CampaignObject\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaignState\",\"outputs\":[{\"internalType\":\"enum Campaign.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"getDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNowRefundable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nowPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nowRefundable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum Campaign.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tags\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"title\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_campaignURI\",\"type\":\"string\"}],\"name\":\"updateCampaignURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_additionalTime\",\"type\":\"uint256\"}],\"name\":\"updateDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newGoalAmount\",\"type\":\"uint256\"}],\"name\":\"updateGoalAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"this is the function chainlink keepers calls chekupkeep returns true to trigger the action after the interval has passed\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Campaign.sol\":\"Campaign\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Campaign.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\nimport \\\"./UpkeepCreator.sol\\\";\\r\\n\\r\\n// errors\\r\\nerror Campaign__NotInState();\\r\\nerror Campaign__NotCreator(address _address);\\r\\nerror Campaign__DonatorIsCreator(address _address);\\r\\nerror Campaign__PayoutFailed();\\r\\nerror Campaign__NoDonationsHere(address _donatorAddress);\\r\\nerror Campaign__RefundFailed();\\r\\nerror Campaign__UpkeepNotNeeded();\\r\\nerror Campaign__NotWithrawable(address _campaignAddress);\\r\\nerror Campaign__AlreadyExpired(address _campaignAddress);\\r\\nerror Campaign__NotRefundable(address _campaignAddress);\\r\\nerror Campaign__CampaignBankrupt(address _campaignAddress);\\r\\n\\r\\n\\r\\ncontract Campaign is KeeperCompatibleInterface{\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  // enums\\r\\n  enum State {\\r\\n    Fundraising,\\r\\n    Expired\\r\\n  }\\r\\n\\r\\n\\r\\n  // state variables\\r\\n  address payable public creator;\\r\\n  string public title;\\r\\n  string public description;\\r\\n  string public category;\\r\\n  string[] public tags;\\r\\n  uint256 public goalAmount;\\r\\n  uint256 public duration;\\r\\n  string public campaignURI;\\r\\n  uint256 public currentBalance;\\r\\n  uint256 private s_lastTimeStamp;\\r\\n  uint256 private maxTimeStamp;\\r\\n  State public state = State.Fundraising; // default state\\r\\n  mapping (address => uint256) public donations;\\r\\n  bool public nowPayable;\\r\\n  bool public nowRefundable;\\r\\n\\r\\n\\r\\n  struct CampaignObject {\\r\\n    address creator;\\r\\n    string title;\\r\\n    string description;\\r\\n    string category;\\r\\n    string[] tags;\\r\\n    uint256 goalAmount;\\r\\n    uint256 duration;\\r\\n    uint256 currentBalance;\\r\\n    State currentState;\\r\\n    bool nowRefundable;\\r\\n  }\\r\\n\\r\\n\\r\\n  // events\\r\\n  event FundingRecieved (\\r\\n    address indexed contributor,\\r\\n    uint256 amount,\\r\\n    uint256 currentBalance\\r\\n  );\\r\\n  event CreatorPaid(address creator, address campaignAddress);\\r\\n  event CampaignSuccessful(address campaignAddress);\\r\\n  event CampaignExpired(address campaignAddress);\\r\\n\\r\\n\\r\\n  // modifiers\\r\\n  modifier isCreator() {\\r\\n    if(msg.sender != creator){revert Campaign__NotCreator(msg.sender);}\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  constructor (\\r\\n    address _creator,\\r\\n    string memory _title,\\r\\n    string memory _description,\\r\\n    string memory _category,\\r\\n    string[] memory _tags,\\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration,\\r\\n    string memory _campaignURI,\\r\\n    address _registryAddress,\\r\\n    address _linkTokenAddress\\r\\n  ) {\\r\\n    creator = payable(_creator);\\r\\n    title = _title;\\r\\n    description = _description;\\r\\n    category = _category;\\r\\n    tags = _tags;\\r\\n    goalAmount = _goalAmount;\\r\\n    s_lastTimeStamp = block.timestamp;\\r\\n    maxTimeStamp = s_lastTimeStamp + 2592000; // 30days\\r\\n    if(_duration > (maxTimeStamp.sub(s_lastTimeStamp))){\\r\\n      duration = maxTimeStamp.sub(s_lastTimeStamp);\\r\\n    }else{\\r\\n      duration = _duration;\\r\\n    }\\r\\n    campaignURI = _campaignURI;\\r\\n    currentBalance = 0;\\r\\n    nowPayable = false;\\r\\n    nowRefundable = true;\\r\\n\\r\\n    UpkeepCreator newUpkeepCreator = new UpkeepCreator(_registryAddress, _linkTokenAddress);\\r\\n    ILinkToken ERC677Linker = ILinkToken(_linkTokenAddress);\\r\\n    // ERC677Linker.approve(msg.sender, 8000000000000000000);\\r\\n    // ERC677Linker.transferFrom(msg.sender, address(newUpkeepCreator), 8000000000000000000);\\r\\n    // newUpkeepCreator.createUpkeep(address(this), title, 500000);\\r\\n  }\\r\\n\\r\\n  function donate() external payable {\\r\\n    if(state != State.Fundraising){revert Campaign__AlreadyExpired(address(this));}\\r\\n    if (msg.sender == creator){revert Campaign__DonatorIsCreator(msg.sender);}\\r\\n    donations[msg.sender] = donations[msg.sender].add(msg.value);\\r\\n    currentBalance = currentBalance.add(msg.value);\\r\\n    emit FundingRecieved(msg.sender, msg.value, currentBalance);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev this is the function chainlink keepers calls\\r\\n    chekupkeep returns true to trigger the action after the interval has passed\\r\\n   */\\r\\n  function checkUpkeep(bytes memory /**checkData */) public view override\\r\\n  returns (bool upkeepNeeded, bytes memory /**performData */) \\r\\n  {\\r\\n    bool isOpen = state == State.Fundraising;\\r\\n    bool timePassed = ((block.timestamp - s_lastTimeStamp) > duration);\\r\\n    bool hasBalance = address(this).balance > 0;\\r\\n    upkeepNeeded = (timePassed && isOpen && hasBalance) ;\\r\\n    return (upkeepNeeded, \\\"0x0\\\");\\r\\n  }\\r\\n\\r\\n  function performUpkeep(bytes calldata /**performData */) external override {\\r\\n    (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n    if(!upkeepNeeded){revert Campaign__UpkeepNotNeeded();}\\r\\n\\r\\n    // allow creator withdraw funds\\r\\n    nowPayable = true;\\r\\n    nowRefundable = false;\\r\\n    state = State.Expired;\\r\\n    emit CampaignExpired(address(this));\\r\\n    if(currentBalance >= goalAmount){\\r\\n      emit CampaignSuccessful(address(this));\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function payout() public isCreator {\\r\\n    if(!nowPayable){revert Campaign__NotWithrawable(address(this));}\\r\\n    uint256 totalRaised = currentBalance;\\r\\n    currentBalance = 0;\\r\\n    (bool success, ) = creator.call{value: totalRaised}(\\\"\\\");\\r\\n    if(success){\\r\\n      nowRefundable = false;\\r\\n      emit CreatorPaid(creator, address(this));\\r\\n    }\\r\\n    else{revert Campaign__PayoutFailed();}\\r\\n  }\\r\\n\\r\\n  function refund(address _donator) public {\\r\\n    if(state == State.Expired){revert Campaign__AlreadyExpired(address(this));}\\r\\n    if(donations[_donator] <= 0){revert Campaign__NoDonationsHere(_donator);}\\r\\n    uint256 amountToRefund = donations[_donator];\\r\\n    donations[_donator] = 0;\\r\\n    if(currentBalance < amountToRefund){revert Campaign__CampaignBankrupt(address(this));}\\r\\n    currentBalance = currentBalance.sub(amountToRefund);\\r\\n    (bool success, ) = payable(_donator).call{value: amountToRefund}(\\\"\\\");\\r\\n    if(!success){revert Campaign__RefundFailed();} // TODO: test if it returns value (the money) to mapping\\r\\n  }\\r\\n\\r\\n  function endCampaign() public isCreator {\\r\\n    if(state == State.Expired){revert Campaign__AlreadyExpired(address(this));}\\r\\n    state = State.Expired;\\r\\n    nowRefundable = false;\\r\\n    if(currentBalance > 0){nowPayable = true;}\\r\\n    emit CampaignExpired(address(this));\\r\\n  }\\r\\n\\r\\n  // update functions\\r\\n  // function updateTitle(string memory _newTitle) public isCreator {\\r\\n  //   title = _newTitle;\\r\\n  // }\\r\\n\\r\\n  // function updateDescription(string memory _newDescription) public isCreator {\\r\\n  //   description = _newDescription;\\r\\n  // }\\r\\n\\r\\n  // function updateCategory(string memory _newCategory) public isCreator {\\r\\n  //   category = _newCategory;\\r\\n  // }\\r\\n\\r\\n  function updateGoalAmount(uint256 _newGoalAmount) public isCreator {\\r\\n    goalAmount = _newGoalAmount;\\r\\n  }\\r\\n\\r\\n  function updateDuration(uint256 _additionalTime) public isCreator {\\r\\n    if(_additionalTime + duration > (maxTimeStamp.sub(s_lastTimeStamp))){\\r\\n      duration = maxTimeStamp.sub(s_lastTimeStamp); // 30days\\r\\n    }\\r\\n    else{\\r\\n      duration += _additionalTime;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function updateCampaignURI(string memory _campaignURI) public isCreator {\\r\\n    campaignURI = _campaignURI;\\r\\n  }\\r\\n  \\r\\n  // getter functions\\r\\n  function getCreator() public view returns(address) {\\r\\n    return creator;\\r\\n  }\\r\\n\\r\\n  function getBalance() public view returns(uint256) {\\r\\n    return currentBalance;\\r\\n  }\\r\\n\\r\\n  function getNowRefundable() public view returns(bool) {\\r\\n    return nowRefundable;\\r\\n  }\\r\\n\\r\\n  function getCampaignState() public view returns(State) {\\r\\n    return state;\\r\\n  }\\r\\n\\r\\n  function getDonations(address _donator) public view returns(uint256) {\\r\\n    return donations[_donator];\\r\\n  }\\r\\n\\r\\n  function getCampaignDetails() public view returns(CampaignObject memory) {\\r\\n    return CampaignObject(\\r\\n      creator,\\r\\n      title,\\r\\n      description,\\r\\n      category,\\r\\n      tags,\\r\\n      goalAmount,\\r\\n      duration,\\r\\n      currentBalance,\\r\\n      state,\\r\\n      nowRefundable\\r\\n    );\\r\\n  }\\r\\n}\",\"keccak256\":\"0x7d7e44eef9958bd2d19328959623c17a298aa9cb7c0a65a2dffcfd1afbe51c89\",\"license\":\"MIT\"},\"contracts/UpkeepCreator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity >=0.7.0 <0.9.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\n\\r\\ninterface ILinkToken {\\r\\n  function transferAndCall(address receiver, uint amount, bytes calldata data) external returns (bool success);\\r\\n  function balanceOf(address user) external view returns(uint);\\r\\n  function approve(address spender, uint amount) external;\\r\\n  function transfer(address _to, uint _amount) external;\\r\\n  function transferFrom(address sender, address recipient, uint amount) external returns (bool);\\r\\n}\\r\\n\\r\\ninterface KeepersRegistry {\\r\\n  function getRegistrar() external view returns(address);\\r\\n}\\r\\n\\r\\ncontract UpkeepCreator {\\r\\n\\r\\n  address public REGISTRY_ADDRESS; //goerli testnet \\r\\n  address public ERC677_LINK_ADDRESS;\\r\\n\\r\\n  constructor(address _registryAddress, address _linkTokenAddress){\\r\\n    REGISTRY_ADDRESS = _registryAddress;\\r\\n    ERC677_LINK_ADDRESS = _linkTokenAddress;\\r\\n  }\\r\\n  /*\\r\\n  register(\\r\\n    string memory name,\\r\\n    bytes calldata encryptedEmail,\\r\\n    address upkeepContract,\\r\\n    uint32 gasLimit,\\r\\n    address adminAddress,\\r\\n    bytes calldata checkData,\\r\\n    uint96 amount,\\r\\n    uint8 source\\r\\n  )\\r\\n  */\\r\\n  bytes4 private constant FUNC_SELECTOR = bytes4(keccak256(\\\"register(string,bytes,address,uint32,address,bytes,uint96,uint8)\\\"));\\r\\n  uint public minFundingAmount = 5000000000000000000; //5 LINK\\r\\n  uint8 public SOURCE = 110;\\r\\n\\r\\n  ILinkToken ERC677Link = ILinkToken(ERC677_LINK_ADDRESS);\\r\\n\\r\\n  //Note: make sure to fund this contract with LINK before calling createUpkeep\\r\\n  function createUpkeep(address contractAddressToAutomate, string memory upkeepName, uint32 gasLimit) external {\\r\\n    address registarAddress = KeepersRegistry(REGISTRY_ADDRESS).getRegistrar();\\r\\n    uint96 amount = uint96(minFundingAmount);\\r\\n    bytes memory data = abi.encodeWithSelector(FUNC_SELECTOR, upkeepName, hex\\\"\\\", contractAddressToAutomate, gasLimit, msg.sender, hex\\\"\\\", amount, SOURCE);\\r\\n    ERC677Link.transferAndCall(registarAddress, minFundingAmount, data);\\r\\n  }\\r\\n}\",\"keccak256\":\"0xd960748ae00e7e1abe99a4a5e951f4053f66429cc0bdff4a81913c4a8a00e303\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040526000600b60006101000a81548160ff021916908360018111156200002d576200002c620003e0565b5b02179055503480156200003f57600080fd5b5060405162003c7138038062003c71833981810160405281019062000065919062000748565b896000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508860019080519060200190620000bd9291906200024d565b508760029080519060200190620000d69291906200024d565b508660039080519060200190620000ef9291906200024d565b50856004908051906020019062000108929190620002de565b50846005819055504260098190555062278d006009546200012a919062000908565b600a819055506200014e600954600a546200023560201b62001a4c1790919060201c565b841115620001805762000174600954600a546200023560201b62001a4c1790919060201c565b60068190555062000188565b836006819055505b8260079080519060200190620001a09291906200024d565b5060006008819055506000600d60006101000a81548160ff0219169083151502179055506001600d60016101000a81548160ff02191690831515021790555060008282604051620001f19062000345565b620001fe92919062000976565b604051809103906000f0801580156200021b573d6000803e3d6000fd5b509050600082905050505050505050505050505062000a43565b60008183620002459190620009a3565b905092915050565b8280546200025b9062000a0d565b90600052602060002090601f0160209004810192826200027f5760008555620002cb565b82601f106200029a57805160ff1916838001178555620002cb565b82800160010185558215620002cb579182015b82811115620002ca578251825591602001919060010190620002ad565b5b509050620002da919062000353565b5090565b82805482825590600052602060002090810192821562000332579160200282015b8281111562000331578251829080519060200190620003209291906200024d565b5091602001919060010190620002ff565b5b50905062000341919062000372565b5090565b610b37806200313a83390190565b5b808211156200036e57600081600090555060010162000354565b5090565b5b808211156200039657600081816200038c91906200039a565b5060010162000373565b5090565b508054620003a89062000a0d565b6000825580601f10620003bc5750620003dd565b601f016020900490600052602060002090810190620003dc919062000353565b5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004508262000423565b9050919050565b620004628162000443565b81146200046e57600080fd5b50565b600081519050620004828162000457565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620004dd8262000492565b810181811067ffffffffffffffff82111715620004ff57620004fe620004a3565b5b80604052505050565b6000620005146200040f565b9050620005228282620004d2565b919050565b600067ffffffffffffffff821115620005455762000544620004a3565b5b620005508262000492565b9050602081019050919050565b60005b838110156200057d57808201518184015260208101905062000560565b838111156200058d576000848401525b50505050565b6000620005aa620005a48462000527565b62000508565b905082815260208101848484011115620005c957620005c86200048d565b5b620005d68482856200055d565b509392505050565b600082601f830112620005f657620005f562000488565b5b81516200060884826020860162000593565b91505092915050565b600067ffffffffffffffff8211156200062f576200062e620004a3565b5b602082029050602081019050919050565b600080fd5b60006200065c620006568462000611565b62000508565b9050808382526020820190506020840283018581111562000682576200068162000640565b5b835b81811015620006d057805167ffffffffffffffff811115620006ab57620006aa62000488565b5b808601620006ba8982620005de565b8552602085019450505060208101905062000684565b5050509392505050565b600082601f830112620006f257620006f162000488565b5b81516200070484826020860162000645565b91505092915050565b6000819050919050565b62000722816200070d565b81146200072e57600080fd5b50565b600081519050620007428162000717565b92915050565b6000806000806000806000806000806101408b8d0312156200076f576200076e62000419565b5b60006200077f8d828e0162000471565b9a505060208b015167ffffffffffffffff811115620007a357620007a26200041e565b5b620007b18d828e01620005de565b99505060408b015167ffffffffffffffff811115620007d557620007d46200041e565b5b620007e38d828e01620005de565b98505060608b015167ffffffffffffffff8111156200080757620008066200041e565b5b620008158d828e01620005de565b97505060808b015167ffffffffffffffff8111156200083957620008386200041e565b5b620008478d828e01620006da565b96505060a06200085a8d828e0162000731565b95505060c06200086d8d828e0162000731565b94505060e08b015167ffffffffffffffff8111156200089157620008906200041e565b5b6200089f8d828e01620005de565b935050610100620008b38d828e0162000471565b925050610120620008c78d828e0162000471565b9150509295989b9194979a5092959850565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000915826200070d565b915062000922836200070d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200095a5762000959620008d9565b5b828201905092915050565b620009708162000443565b82525050565b60006040820190506200098d600083018562000965565b6200099c602083018462000965565b9392505050565b6000620009b0826200070d565b9150620009bd836200070d565b925082821015620009d357620009d2620008d9565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000a2657607f821691505b6020821081141562000a3d5762000a3c620009de565b5b50919050565b6126e78062000a536000396000f3fe6080604052600436106101b75760003560e01c806363bd1d4a116100ec578063ce845d1d1161008a578063eb8b60d711610064578063eb8b60d7146105dd578063ed88c68e14610608578063ef430aa614610612578063fa89401a1461063d576101b7565b8063ce845d1d1461055e578063db912e3714610589578063ead1b1bf146105b4576101b7565b80637284e416116100c65780637284e416146104a05780637fb3761e146104cb578063c19d93fb146104f6578063cc6cb19a14610521576101b7565b806363bd1d4a146104345780636e04ff0d1461044b57806371aac7f914610489576101b7565b80631b50ad09116101595780634298b0cd116101335780634298b0cd1461038c5780634585e33b146103b75780634a79d50c146103e05780634d695bdb1461040b576101b7565b80631b50ad09146102fb57806320822abc146103245780632636b94514610361576101b7565b80630ee2cb10116101955780630ee2cb101461023d5780630fb5a6b41461026857806312065fe0146102935780631910bdc2146102be576101b7565b806302d05d3f146101bc5780630c611f24146101e75780630edd9cc214610212575b600080fd5b3480156101c857600080fd5b506101d1610666565b6040516101de9190611bd9565b60405180910390f35b3480156101f357600080fd5b506101fc61068a565b6040516102099190611f0a565b60405180910390f35b34801561021e57600080fd5b506102276109ba565b6040516102349190611f3b565b60405180910390f35b34801561024957600080fd5b506102526109cd565b60405161025f9190611f65565b60405180910390f35b34801561027457600080fd5b5061027d6109f6565b60405161028a9190611f8f565b60405180910390f35b34801561029f57600080fd5b506102a86109fc565b6040516102b59190611f8f565b60405180910390f35b3480156102ca57600080fd5b506102e560048036038101906102e09190611fea565b610a06565b6040516102f29190611f8f565b60405180910390f35b34801561030757600080fd5b50610322600480360381019061031d9190612043565b610a4f565b005b34801561033057600080fd5b5061034b60048036038101906103469190612043565b610b49565b60405161035891906120ba565b60405180910390f35b34801561036d57600080fd5b50610376610bf5565b6040516103839190611f8f565b60405180910390f35b34801561039857600080fd5b506103a1610bfb565b6040516103ae9190611f3b565b60405180910390f35b3480156103c357600080fd5b506103de60048036038101906103d99190612141565b610c0e565b005b3480156103ec57600080fd5b506103f5610d42565b60405161040291906120ba565b60405180910390f35b34801561041757600080fd5b50610432600480360381019061042d91906122be565b610dd0565b005b34801561044057600080fd5b50610449610e7a565b005b34801561045757600080fd5b50610472600480360381019061046d91906123a8565b6110ac565b604051610480929190612446565b60405180910390f35b34801561049557600080fd5b5061049e61115f565b005b3480156104ac57600080fd5b506104b561130d565b6040516104c291906120ba565b60405180910390f35b3480156104d757600080fd5b506104e061139b565b6040516104ed9190612485565b60405180910390f35b34801561050257600080fd5b5061050b6113b2565b6040516105189190612485565b60405180910390f35b34801561052d57600080fd5b5061054860048036038101906105439190611fea565b6113c5565b6040516105559190611f8f565b60405180910390f35b34801561056a57600080fd5b506105736113dd565b6040516105809190611f8f565b60405180910390f35b34801561059557600080fd5b5061059e6113e3565b6040516105ab91906120ba565b60405180910390f35b3480156105c057600080fd5b506105db60048036038101906105d69190612043565b611471565b005b3480156105e957600080fd5b506105f261150b565b6040516105ff9190611f3b565b60405180910390f35b610610611522565b005b34801561061e57600080fd5b5061062761172f565b60405161063491906120ba565b60405180910390f35b34801561064957600080fd5b50610664600480360381019061065f9190611fea565b6117bd565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610692611a78565b60405180610140016040528060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600180546106e7906124cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610713906124cf565b80156107605780601f1061073557610100808354040283529160200191610760565b820191906000526020600020905b81548152906001019060200180831161074357829003601f168201915b5050505050815260200160028054610777906124cf565b80601f01602080910402602001604051908101604052809291908181526020018280546107a3906124cf565b80156107f05780601f106107c5576101008083540402835291602001916107f0565b820191906000526020600020905b8154815290600101906020018083116107d357829003601f168201915b5050505050815260200160038054610807906124cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610833906124cf565b80156108805780601f1061085557610100808354040283529160200191610880565b820191906000526020600020905b81548152906001019060200180831161086357829003601f168201915b505050505081526020016004805480602002602001604051908101604052809291908181526020016000905b828210156109585783829060005260206000200180546108cb906124cf565b80601f01602080910402602001604051908101604052809291908181526020018280546108f7906124cf565b80156109445780601f1061091957610100808354040283529160200191610944565b820191906000526020600020905b81548152906001019060200180831161092757829003601f168201915b5050505050815260200190600101906108ac565b505050508152602001600554815260200160065481526020016008548152602001600b60009054906101000a900460ff16600181111561099b5761099a611d89565b5b8152602001600d60019054906101000a900460ff161515815250905090565b600d60019054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b6000600854905090565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610adf57336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610ad69190611f65565b60405180910390fd5b610af6600954600a54611a4c90919063ffffffff16565b60065482610b049190612530565b1115610b2c57610b21600954600a54611a4c90919063ffffffff16565b600681905550610b46565b8060066000828254610b3e9190612530565b925050819055505b50565b60048181548110610b5957600080fd5b906000526020600020016000915090508054610b74906124cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba0906124cf565b8015610bed5780601f10610bc257610100808354040283529160200191610bed565b820191906000526020600020905b815481529060010190602001808311610bd057829003601f168201915b505050505081565b60055481565b600d60009054906101000a900460ff1681565b6000610c28604051806020016040528060008152506110ac565b50905080610c62576040517f311f87a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600d60006101000a81548160ff0219169083151502179055506000600d60016101000a81548160ff0219169083151502179055506001600b60006101000a81548160ff02191690836001811115610cbe57610cbd611d89565b5b02179055507f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d30604051610cf29190611f65565b60405180910390a160055460085410610d3d577f5369558c667e962b633128a01c31764d053da51f61d17370d327ed17f77deccc30604051610d349190611f65565b60405180910390a15b505050565b60018054610d4f906124cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610d7b906124cf565b8015610dc85780601f10610d9d57610100808354040283529160200191610dc8565b820191906000526020600020905b815481529060010190602001808311610dab57829003601f168201915b505050505081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e6057336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610e579190611f65565b60405180910390fd5b8060079080519060200190610e76929190611af5565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f0a57336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610f019190611f65565b60405180910390fd5b600d60009054906101000a900460ff16610f5b57306040517f8019f726000000000000000000000000000000000000000000000000000000008152600401610f529190611f65565b60405180910390fd5b60006008549050600060088190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610fb1906125b7565b60006040518083038185875af1925050503d8060008114610fee576040519150601f19603f3d011682016040523d82523d6000602084013e610ff3565b606091505b505090508015611076576000600d60016101000a81548160ff0219169083151502179055507fba5e837743d81ad0e6deb16089dbb65b549fdda8ad802fd8d4822884d70dc8b260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163060405161106992919061262b565b60405180910390a16110a8565b6040517f11456ffb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6000606060008060018111156110c5576110c4611d89565b5b600b60009054906101000a900460ff1660018111156110e7576110e6611d89565b5b1490506000600654600954426110fd9190612654565b119050600080471190508180156111115750825b801561111a5750805b9450846040518060400160405280600381526020017f307830000000000000000000000000000000000000000000000000000000000081525094509450505050915091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111ef57336040517fef54c8170000000000000000000000000000000000000000000000000000000081526004016111e69190611f65565b60405180910390fd5b60018081111561120257611201611d89565b5b600b60009054906101000a900460ff16600181111561122457611223611d89565b5b141561126757306040517fd6d7e5c100000000000000000000000000000000000000000000000000000000815260040161125e9190611f65565b60405180910390fd5b6001600b60006101000a81548160ff0219169083600181111561128d5761128c611d89565b5b02179055506000600d60016101000a81548160ff021916908315150217905550600060085411156112d4576001600d60006101000a81548160ff0219169083151502179055505b7f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d306040516113039190611f65565b60405180910390a1565b6002805461131a906124cf565b80601f0160208091040260200160405190810160405280929190818152602001828054611346906124cf565b80156113935780601f1061136857610100808354040283529160200191611393565b820191906000526020600020905b81548152906001019060200180831161137657829003601f168201915b505050505081565b6000600b60009054906101000a900460ff16905090565b600b60009054906101000a900460ff1681565b600c6020528060005260406000206000915090505481565b60085481565b600780546113f0906124cf565b80601f016020809104026020016040519081016040528092919081815260200182805461141c906124cf565b80156114695780601f1061143e57610100808354040283529160200191611469565b820191906000526020600020905b81548152906001019060200180831161144c57829003601f168201915b505050505081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461150157336040517fef54c8170000000000000000000000000000000000000000000000000000000081526004016114f89190611f65565b60405180910390fd5b8060058190555050565b6000600d60019054906101000a900460ff16905090565b6000600181111561153657611535611d89565b5b600b60009054906101000a900460ff16600181111561155857611557611d89565b5b1461159a57306040517fd6d7e5c10000000000000000000000000000000000000000000000000000000081526004016115919190611f65565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561162b57336040517f911018950000000000000000000000000000000000000000000000000000000081526004016116229190611f65565b60405180910390fd5b61167d34600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a6290919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506116d534600854611a6290919063ffffffff16565b6008819055503373ffffffffffffffffffffffffffffffffffffffff167fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca267492355120834600854604051611725929190612688565b60405180910390a2565b6003805461173c906124cf565b80601f0160208091040260200160405190810160405280929190818152602001828054611768906124cf565b80156117b55780601f1061178a576101008083540402835291602001916117b5565b820191906000526020600020905b81548152906001019060200180831161179857829003601f168201915b505050505081565b6001808111156117d0576117cf611d89565b5b600b60009054906101000a900460ff1660018111156117f2576117f1611d89565b5b141561183557306040517fd6d7e5c100000000000000000000000000000000000000000000000000000000815260040161182c9190611f65565b60405180910390fd5b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116118b957806040517fc43858590000000000000000000000000000000000000000000000000000000081526004016118b09190611f65565b60405180910390fd5b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600854101561198957306040517f6db510f50000000000000000000000000000000000000000000000000000000081526004016119809190611f65565b60405180910390fd5b61199e81600854611a4c90919063ffffffff16565b60088190555060008273ffffffffffffffffffffffffffffffffffffffff16826040516119ca906125b7565b60006040518083038185875af1925050503d8060008114611a07576040519150601f19603f3d011682016040523d82523d6000602084013e611a0c565b606091505b5050905080611a47576040517f92e9f8f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b60008183611a5a9190612654565b905092915050565b60008183611a709190612530565b905092915050565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000815260200160006001811115611ae657611ae5611d89565b5b81526020016000151581525090565b828054611b01906124cf565b90600052602060002090601f016020900481019282611b235760008555611b6a565b82601f10611b3c57805160ff1916838001178555611b6a565b82800160010185558215611b6a579182015b82811115611b69578251825591602001919060010190611b4e565b5b509050611b779190611b7b565b5090565b5b80821115611b94576000816000905550600101611b7c565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bc382611b98565b9050919050565b611bd381611bb8565b82525050565b6000602082019050611bee6000830184611bca565b92915050565b6000611bff82611b98565b9050919050565b611c0f81611bf4565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c4f578082015181840152602081019050611c34565b83811115611c5e576000848401525b50505050565b6000601f19601f8301169050919050565b6000611c8082611c15565b611c8a8185611c20565b9350611c9a818560208601611c31565b611ca381611c64565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611ce68383611c75565b905092915050565b6000602082019050919050565b6000611d0682611cae565b611d108185611cb9565b935083602082028501611d2285611cca565b8060005b85811015611d5e5784840389528151611d3f8582611cda565b9450611d4a83611cee565b925060208a01995050600181019050611d26565b50829750879550505050505092915050565b6000819050919050565b611d8381611d70565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611dc957611dc8611d89565b5b50565b6000819050611dda82611db8565b919050565b6000611dea82611dcc565b9050919050565b611dfa81611ddf565b82525050565b60008115159050919050565b611e1581611e00565b82525050565b600061014083016000830151611e346000860182611c06565b5060208301518482036020860152611e4c8282611c75565b91505060408301518482036040860152611e668282611c75565b91505060608301518482036060860152611e808282611c75565b91505060808301518482036080860152611e9a8282611cfb565b91505060a0830151611eaf60a0860182611d7a565b5060c0830151611ec260c0860182611d7a565b5060e0830151611ed560e0860182611d7a565b50610100830151611eea610100860182611df1565b50610120830151611eff610120860182611e0c565b508091505092915050565b60006020820190508181036000830152611f248184611e1b565b905092915050565b611f3581611e00565b82525050565b6000602082019050611f506000830184611f2c565b92915050565b611f5f81611bf4565b82525050565b6000602082019050611f7a6000830184611f56565b92915050565b611f8981611d70565b82525050565b6000602082019050611fa46000830184611f80565b92915050565b6000604051905090565b600080fd5b600080fd5b611fc781611bf4565b8114611fd257600080fd5b50565b600081359050611fe481611fbe565b92915050565b60006020828403121561200057611fff611fb4565b5b600061200e84828501611fd5565b91505092915050565b61202081611d70565b811461202b57600080fd5b50565b60008135905061203d81612017565b92915050565b60006020828403121561205957612058611fb4565b5b60006120678482850161202e565b91505092915050565b600082825260208201905092915050565b600061208c82611c15565b6120968185612070565b93506120a6818560208601611c31565b6120af81611c64565b840191505092915050565b600060208201905081810360008301526120d48184612081565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612101576121006120dc565b5b8235905067ffffffffffffffff81111561211e5761211d6120e1565b5b60208301915083600182028301111561213a576121396120e6565b5b9250929050565b6000806020838503121561215857612157611fb4565b5b600083013567ffffffffffffffff81111561217657612175611fb9565b5b612182858286016120eb565b92509250509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6121cb82611c64565b810181811067ffffffffffffffff821117156121ea576121e9612193565b5b80604052505050565b60006121fd611faa565b905061220982826121c2565b919050565b600067ffffffffffffffff82111561222957612228612193565b5b61223282611c64565b9050602081019050919050565b82818337600083830152505050565b600061226161225c8461220e565b6121f3565b90508281526020810184848401111561227d5761227c61218e565b5b61228884828561223f565b509392505050565b600082601f8301126122a5576122a46120dc565b5b81356122b584826020860161224e565b91505092915050565b6000602082840312156122d4576122d3611fb4565b5b600082013567ffffffffffffffff8111156122f2576122f1611fb9565b5b6122fe84828501612290565b91505092915050565b600067ffffffffffffffff82111561232257612321612193565b5b61232b82611c64565b9050602081019050919050565b600061234b61234684612307565b6121f3565b9050828152602081018484840111156123675761236661218e565b5b61237284828561223f565b509392505050565b600082601f83011261238f5761238e6120dc565b5b813561239f848260208601612338565b91505092915050565b6000602082840312156123be576123bd611fb4565b5b600082013567ffffffffffffffff8111156123dc576123db611fb9565b5b6123e88482850161237a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000612418826123f1565b61242281856123fc565b9350612432818560208601611c31565b61243b81611c64565b840191505092915050565b600060408201905061245b6000830185611f2c565b818103602083015261246d818461240d565b90509392505050565b61247f81611ddf565b82525050565b600060208201905061249a6000830184612476565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806124e757607f821691505b602082108114156124fb576124fa6124a0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061253b82611d70565b915061254683611d70565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561257b5761257a612501565b5b828201905092915050565b600081905092915050565b50565b60006125a1600083612586565b91506125ac82612591565b600082019050919050565b60006125c282612594565b9150819050919050565b6000819050919050565b60006125f16125ec6125e784611b98565b6125cc565b611b98565b9050919050565b6000612603826125d6565b9050919050565b6000612615826125f8565b9050919050565b6126258161260a565b82525050565b6000604082019050612640600083018561261c565b61264d6020830184611f56565b9392505050565b600061265f82611d70565b915061266a83611d70565b92508282101561267d5761267c612501565b5b828203905092915050565b600060408201905061269d6000830185611f80565b6126aa6020830184611f80565b939250505056fea26469706673582212206db8b14ec64e9b7aa7e9b25aed79235d7ccb5dd76008cb86ec88930e97be614b64736f6c634300080800336080604052674563918244f40000600255606e600360006101000a81548160ff021916908360ff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561009b57600080fd5b50604051610b37380380610b3783398181016040528101906100bd91906101a8565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101e8565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101758261014a565b9050919050565b6101858161016a565b811461019057600080fd5b50565b6000815190506101a28161017c565b92915050565b600080604083850312156101bf576101be610145565b5b60006101cd85828601610193565b92505060206101de85828601610193565b9150509250929050565b610940806101f76000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063501ad9da1461005c578063bd3bf7f31461007a578063c34f5c9114610098578063c791316e146100b4578063f230b4c2146100d2575b600080fd5b6100646100f0565b60405161007191906103a6565b60405180910390f35b610082610116565b60405161008f91906103a6565b60405180910390f35b6100b260048036038101906100ad9190610583565b61013a565b005b6100bc61034c565b6040516100c9919061060b565b60405180910390f35b6100da610352565b6040516100e79190610642565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634d3f73346040518163ffffffff1660e01b815260040160206040518083038186803b1580156101a357600080fd5b505afa1580156101b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101db9190610672565b90506000600254905060007fc4110e5c9c8ef4fe31f40cd68aa0b3102f9897ff333658e269002c9ad25bb9f48587863386600360009054906101000a900460ff1660405160240161023196959493929190610783565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600360019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634000aea084600254846040518463ffffffff1660e01b81526004016102f193929190610867565b602060405180830381600087803b15801561030b57600080fd5b505af115801561031f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034391906108dd565b50505050505050565b60025481565b600360009054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061039082610365565b9050919050565b6103a081610385565b82525050565b60006020820190506103bb6000830184610397565b92915050565b6000604051905090565b600080fd5b600080fd5b6103de81610385565b81146103e957600080fd5b50565b6000813590506103fb816103d5565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104548261040b565b810181811067ffffffffffffffff821117156104735761047261041c565b5b80604052505050565b60006104866103c1565b9050610492828261044b565b919050565b600067ffffffffffffffff8211156104b2576104b161041c565b5b6104bb8261040b565b9050602081019050919050565b82818337600083830152505050565b60006104ea6104e584610497565b61047c565b90508281526020810184848401111561050657610505610406565b5b6105118482856104c8565b509392505050565b600082601f83011261052e5761052d610401565b5b813561053e8482602086016104d7565b91505092915050565b600063ffffffff82169050919050565b61056081610547565b811461056b57600080fd5b50565b60008135905061057d81610557565b92915050565b60008060006060848603121561059c5761059b6103cb565b5b60006105aa868287016103ec565b935050602084013567ffffffffffffffff8111156105cb576105ca6103d0565b5b6105d786828701610519565b92505060406105e88682870161056e565b9150509250925092565b6000819050919050565b610605816105f2565b82525050565b600060208201905061062060008301846105fc565b92915050565b600060ff82169050919050565b61063c81610626565b82525050565b60006020820190506106576000830184610633565b92915050565b60008151905061066c816103d5565b92915050565b600060208284031215610688576106876103cb565b5b60006106968482850161065d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106d95780820151818401526020810190506106be565b838111156106e8576000848401525b50505050565b60006106f98261069f565b61070381856106aa565b93506107138185602086016106bb565b61071c8161040b565b840191505092915050565b50565b60006107376000836106aa565b915061074282610727565b600082019050919050565b61075681610547565b82525050565b60006bffffffffffffffffffffffff82169050919050565b61077d8161075c565b82525050565b600061010082019050818103600083015261079e81896106ee565b905081810360208301526107b18161072a565b90506107c06040830188610397565b6107cd606083018761074d565b6107da6080830186610397565b81810360a08301526107eb8161072a565b90506107fa60c0830185610774565b61080760e0830184610633565b979650505050505050565b600081519050919050565b600082825260208201905092915050565b600061083982610812565b610843818561081d565b93506108538185602086016106bb565b61085c8161040b565b840191505092915050565b600060608201905061087c6000830186610397565b61088960208301856105fc565b818103604083015261089b818461082e565b9050949350505050565b60008115159050919050565b6108ba816108a5565b81146108c557600080fd5b50565b6000815190506108d7816108b1565b92915050565b6000602082840312156108f3576108f26103cb565b5b6000610901848285016108c8565b9150509291505056fea264697066735822122077df321876ff2f4ea04629b08cc89c2d9a22d6e56f6de8c33e72e02416902ea564736f6c63430008080033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "checkUpkeep(bytes)": {
        "details": "this is the function chainlink keepers calls chekupkeep returns true to trigger the action after the interval has passed"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 385,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "creator",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      },
      {
        "astId": 387,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "title",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 389,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "description",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 391,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "category",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 394,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "tags",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 396,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "goalAmount",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 398,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "duration",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 400,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "campaignURI",
        "offset": 0,
        "slot": "7",
        "type": "t_string_storage"
      },
      {
        "astId": 402,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "currentBalance",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 404,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "s_lastTimeStamp",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 406,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "maxTimeStamp",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 411,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "state",
        "offset": 0,
        "slot": "11",
        "type": "t_enum(State)383"
      },
      {
        "astId": 415,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "donations",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 417,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "nowPayable",
        "offset": 0,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 419,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "nowRefundable",
        "offset": 1,
        "slot": "13",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(State)383": {
        "encoding": "inplace",
        "label": "enum Campaign.State",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}