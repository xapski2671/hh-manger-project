{
  "address": "0xfCaF91E8D98Af35b6521E687E63096428cCa8cf6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__CampaignStillActive",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__NoSuchCampaign",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__NotCreator",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_creatorType",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_creatorName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "_tags",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "CampaignAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignCanceled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_creatorType",
          "type": "uint64"
        },
        {
          "internalType": "string",
          "name": "_creatorName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_tags",
          "type": "string[]"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "addCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "cancelCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "getCampaign",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "enum Campaign.CreatorType",
              "name": "creatorType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "creatorName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "tags",
              "type": "string[]"
            },
            {
              "internalType": "uint256",
              "name": "goalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentBalance",
              "type": "uint256"
            },
            {
              "internalType": "enum Campaign.State",
              "name": "currentState",
              "type": "uint8"
            }
          ],
          "internalType": "struct Campaign.CampaignObject",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xe874cd48472e2698cf86fe860bdac63298a1745472d96e2482a76faa26bda9ee",
  "receipt": {
    "to": null,
    "from": "0x4B5a2B7b5438A79797698570AC9D45155D3Bb0e3",
    "contractAddress": "0xfCaF91E8D98Af35b6521E687E63096428cCa8cf6",
    "transactionIndex": 33,
    "gasUsed": "3928636",
    "logsBloom": "0x
    "blockHash": "0xcdac27f91ccb206a17894dc0cbab50cd40698dbe068897ea9782bec2c5ae3de4",
    "transactionHash": "0xe874cd48472e2698cf86fe860bdac63298a1745472d96e2482a76faa26bda9ee",
    "logs": [],
    "blockNumber": 8336250,
    "cumulativeGasUsed": "7342197",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "9ac2609e893b830e55e9b0a3b5d45244",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__CampaignStillActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__NoSuchCampaign\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__NotCreator\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_creatorType\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_creatorName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"_tags\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"CampaignAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignCanceled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_creatorType\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"_creatorName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_tags\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"addCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"cancelCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"getCampaign\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"enum Campaign.CreatorType\",\"name\":\"creatorType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"creatorName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"tags\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"enum Campaign.State\",\"name\":\"currentState\",\"type\":\"uint8\"}],\"internalType\":\"struct Campaign.CampaignObject\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrowdFunder.sol\":\"CrowdFunder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Campaign.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\n\\r\\n// errors\\r\\nerror Campaign__NotInState();\\r\\nerror Campaign__NotCreator(address _address);\\r\\nerror Campaign__DonatorIsCreator(address _address);\\r\\nerror Campaign__PayoutFailed();\\r\\nerror Campaign__NoDonationsHere(address _donatorAddress);\\r\\nerror Campaign__RefundFailed();\\r\\nerror Campaign__UpkeepNotNeeded();\\r\\nerror Campaign__NotWithrawable(address _campaignAddress);\\r\\nerror Campaign__AlreadyExpired(address _campaignAddress);\\r\\nerror Campaign__NotRefundable(address _campaignAddress);\\r\\nerror Campaign__CampaignBankrupt(address _campaignAddress);\\r\\n\\r\\n\\r\\ncontract Campaign is KeeperCompatibleInterface {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  // enums\\r\\n  enum State {\\r\\n    Successful,\\r\\n    Fundraising,\\r\\n    Expired\\r\\n  }\\r\\n\\r\\n  enum CreatorType {\\r\\n    Sole,\\r\\n    Team\\r\\n  }\\r\\n\\r\\n\\r\\n  // state variables\\r\\n  address payable public creator;\\r\\n  CreatorType public creatorType;\\r\\n  string public creatorName;\\r\\n  string public title;\\r\\n  string public description;\\r\\n  string[] public tags;\\r\\n  uint256 public goalAmount;\\r\\n  uint256 public duration;\\r\\n  uint256 public currentBalance;\\r\\n  uint256 private s_lastTimeStamp;\\r\\n  State public state = State.Fundraising; // default state\\r\\n  mapping (address => uint256) public donations;\\r\\n  bool public nowPayable;\\r\\n  bool public nowRefunding;\\r\\n\\r\\n\\r\\n  struct CampaignObject {\\r\\n    address creator;\\r\\n    CreatorType creatorType;\\r\\n    string creatorName;\\r\\n    string title;\\r\\n    string description;\\r\\n    string[] tags;\\r\\n    uint256 goalAmount;\\r\\n    uint256 duration;\\r\\n    uint256 currentBalance;\\r\\n    State currentState;\\r\\n  }\\r\\n\\r\\n\\r\\n  // events\\r\\n  event FundingRecieved (\\r\\n    address indexed contributor,\\r\\n    uint256 amount,\\r\\n    uint256 currentBalance\\r\\n  );\\r\\n  event CreatorPaid(address creator, address campaignAddress);\\r\\n  event CampaignSuccessful(address campaignAddress);\\r\\n  event CampaignExpired(address campaignAddress);\\r\\n\\r\\n\\r\\n  // modifiers\\r\\n  modifier inState(State _state) {\\r\\n    if (state != _state){revert Campaign__NotInState();}\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  modifier isCreator() {\\r\\n    if(msg.sender != creator){revert Campaign__NotCreator(msg.sender);}\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  constructor (\\r\\n    address _creator,\\r\\n    uint64 _creatorType,\\r\\n    string memory _creatorName,\\r\\n    string memory _title,\\r\\n    string memory _description,\\r\\n    string[] memory _tags,\\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration\\r\\n  ) {\\r\\n    creator = payable(_creator);\\r\\n    creatorType = CreatorType(_creatorType);\\r\\n    creatorName = _creatorName;\\r\\n    title = _title;\\r\\n    description = _description;\\r\\n    tags = _tags;\\r\\n    goalAmount = _goalAmount;\\r\\n    duration = _duration;\\r\\n    s_lastTimeStamp = block.timestamp;\\r\\n    currentBalance = 0;\\r\\n    nowPayable = false;\\r\\n    nowRefunding = false;\\r\\n  }\\r\\n\\r\\n  function donate() external inState(State.Fundraising) payable {\\r\\n    if (msg.sender == creator){revert Campaign__DonatorIsCreator(msg.sender);}\\r\\n    donations[msg.sender] = donations[msg.sender].add(msg.value);\\r\\n    currentBalance = currentBalance.add(msg.value);\\r\\n    emit FundingRecieved(msg.sender, msg.value, currentBalance);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev this is the function chainlink keepers calls\\r\\n    chekupkeep returns true to trigger the action after the interval has passed\\r\\n   */\\r\\n  function checkUpkeep(bytes memory /**checkData */) public view override\\r\\n  returns (bool upkeepNeeded, bytes memory /**performData */) \\r\\n  {\\r\\n    bool goalReached = currentBalance >= goalAmount;\\r\\n    bool isOpen = state == State.Fundraising;\\r\\n    bool timePassed = ((block.timestamp - s_lastTimeStamp) > duration);\\r\\n    bool hasBalance = address(this).balance > 0;\\r\\n    upkeepNeeded = (goalReached || timePassed && isOpen && hasBalance) ;\\r\\n    return (upkeepNeeded, \\\"0x0\\\");\\r\\n  }\\r\\n\\r\\n  function performUpkeep(bytes calldata /**performData */) external override {\\r\\n    (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n    if(!upkeepNeeded){revert Campaign__UpkeepNotNeeded();}\\r\\n\\r\\n    // allow creator withdraw funds\\r\\n    nowPayable = true;\\r\\n    nowRefunding = true;\\r\\n\\r\\n    if((block.timestamp - s_lastTimeStamp) > duration){\\r\\n      state = State.Expired; \\r\\n      emit CampaignExpired(address(this));\\r\\n    }\\r\\n    else if(currentBalance >= goalAmount){\\r\\n      state = State.Successful;\\r\\n      emit CampaignSuccessful(address(this));\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function payout() public isCreator {\\r\\n    if(!nowPayable){revert Campaign__NotWithrawable(address(this));}\\r\\n    uint256 totalRaised = currentBalance;\\r\\n    currentBalance = 0;\\r\\n    (bool success, ) = creator.call{value: totalRaised}(\\\"\\\");\\r\\n    if(success){\\r\\n      nowRefunding = false;\\r\\n      emit CreatorPaid(creator, address(this));\\r\\n    }\\r\\n    else{revert Campaign__PayoutFailed();}\\r\\n  }\\r\\n\\r\\n  function refund(address _donator) public {\\r\\n    if(!nowRefunding){revert Campaign__NotRefundable(address(this));}\\r\\n    if(donations[_donator] <= 0){revert Campaign__NoDonationsHere(msg.sender);}\\r\\n    uint256 amountToRefund = donations[_donator];\\r\\n    donations[_donator] = 0;\\r\\n    if(currentBalance < amountToRefund){revert Campaign__CampaignBankrupt(address(this));}\\r\\n    currentBalance = currentBalance.sub(amountToRefund);\\r\\n    (bool success, ) = payable(_donator).call{value: amountToRefund}(\\\"\\\");\\r\\n    if(!success){revert Campaign__RefundFailed();} // TODO: test if it returns the money to mapping\\r\\n  }\\r\\n\\r\\n  function endCampaign() public isCreator {\\r\\n    if(state == State.Expired){revert Campaign__AlreadyExpired(address(this));}\\r\\n    state = State.Expired;\\r\\n    if(currentBalance > 0){nowPayable = true;}\\r\\n    emit CampaignExpired(address(this));\\r\\n  }\\r\\n\\r\\n  function allowRefunds() public isCreator {\\r\\n    if(currentBalance <= 0){revert Campaign__CampaignBankrupt(address(this));}\\r\\n    else{nowRefunding = true;}\\r\\n  }\\r\\n\\r\\n  // update functions\\r\\n  function updateTitle(string memory _newTitle) public isCreator {\\r\\n    title = _newTitle;\\r\\n  }\\r\\n\\r\\n  function updateDescription(string memory _newDescription) public isCreator {\\r\\n    description = _newDescription;\\r\\n  }\\r\\n  \\r\\n  // getter functions\\r\\n  function getBalance() public view returns(uint256) {\\r\\n    return currentBalance;\\r\\n  }\\r\\n\\r\\n  function getCampaignState() public view returns(State) {\\r\\n    return state;\\r\\n  }\\r\\n\\r\\n  function getDonations(address _donator) public view returns(uint256) {\\r\\n    return donations[_donator];\\r\\n  }\\r\\n\\r\\n  function getCampaignDetails() public view returns(CampaignObject memory) {\\r\\n    return CampaignObject(\\r\\n      creator,\\r\\n      creatorType,\\r\\n      creatorName,\\r\\n      title,\\r\\n      description,\\r\\n      tags,\\r\\n      goalAmount,\\r\\n      duration,\\r\\n      currentBalance,\\r\\n      state\\r\\n    );\\r\\n  }\\r\\n}\",\"keccak256\":\"0xf724b8d9110245996971e758eec97a211c1bcfeb977e91c4470aa15d6229e71c\",\"license\":\"MIT\"},\"contracts/CrowdFunder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"./Campaign.sol\\\";\\r\\n\\r\\n// errors\\r\\nerror CrowdFunder__NoSuchCampaign(address _campaignAddress);\\r\\nerror CrowdFunder__NotCreator(address _caller, address _campaignAddress);\\r\\nerror CrowdFunder__CampaignStillActive(address _campaignAddress);\\r\\n\\r\\ncontract CrowdFunder {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  event CampaignAdded(\\r\\n    address indexed _campaignAddress,\\r\\n    address indexed _creator,\\r\\n    uint256 _creatorType,\\r\\n    string _creatorName,\\r\\n    string _title,\\r\\n    string _description,\\r\\n    string[] _tags,\\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration\\r\\n  );\\r\\n\\r\\n  event CampaignCanceled(\\r\\n    address indexed _campaignAddress\\r\\n  );\\r\\n\\r\\n\\r\\n  mapping (address => Campaign) campaigns;\\r\\n  mapping (address => address) campaignCreators;\\r\\n  mapping (address => bool) campaignAddresses;\\r\\n\\r\\n  modifier isCreator(address _campaignAddress) {\\r\\n    if(msg.sender != campaignCreators[_campaignAddress]){\\r\\n      revert CrowdFunder__NotCreator(msg.sender, _campaignAddress);\\r\\n    }\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  function addCampaign (\\r\\n    uint64 _creatorType,\\r\\n    string memory _creatorName,\\r\\n    string memory _title, \\r\\n    string memory _description,\\r\\n    string[] memory _tags, \\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration\\r\\n    ) external {\\r\\n    // uint256 raiseUntil = block.timestamp.add(duration.mul(1 days));\\r\\n    Campaign newCampaign = new Campaign(payable(msg.sender), _creatorType, _creatorName, _title, _description, _tags, _goalAmount, _duration);\\r\\n    campaigns[address(newCampaign)] = newCampaign;\\r\\n    campaignAddresses[address(newCampaign)] = true;\\r\\n    campaignCreators[address(newCampaign)] = msg.sender;\\r\\n    emit CampaignAdded(address(newCampaign), msg.sender, _creatorType, _creatorName, _title, _description, _tags, _goalAmount, _duration);\\r\\n  }\\r\\n\\r\\n  function cancelCampaign (address _campaignAddress) public isCreator(_campaignAddress) {\\r\\n    if(uint(campaigns[_campaignAddress].getCampaignState()) == 1){revert CrowdFunder__CampaignStillActive(_campaignAddress);}\\r\\n    delete(campaigns[_campaignAddress]);\\r\\n    delete(campaignAddresses[_campaignAddress]);\\r\\n    // emit CampaignCanceled(_campaignAddress, campaigns[_campaignAddress].creator(), campaigns[_campaignAddress].goalAmount());\\r\\n    emit CampaignCanceled(_campaignAddress);\\r\\n  }\\r\\n\\r\\n  function getCampaign(address _campaignAddress) external view returns (Campaign.CampaignObject memory) {\\r\\n    if(!campaignAddresses[_campaignAddress]){revert CrowdFunder__NoSuchCampaign(_campaignAddress);}\\r\\n    return campaigns[_campaignAddress].getCampaignDetails();\\r\\n  }\\r\\n}\",\"keccak256\":\"0x7a83d18bf78bf3dbd2819f123b424dbcd269533493b422ec9b7d2fd90cc6e678\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061466c806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000465760003560e01c80630d6454a4146200004b578063731301cf146200006b578063bc04d86014620000a1575b600080fd5b62000069600480360381019062000063919062000886565b620000c1565b005b62000089600480360381019062000083919062000886565b620003ca565b60405162000098919062000c2c565b60405180910390f35b620000bf6004803603810190620000b9919062000f13565b62000551565b005b80600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620001965733816040517fd9e20da80000000000000000000000000000000000000000000000000000000081526004016200018d92919062001053565b60405180910390fd5b60016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637fb3761e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200023d57600080fd5b505afa15801562000252573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002789190620010a8565b60028111156200028d576200028c620008c9565b5b1415620002d357816040517fdfecfddd000000000000000000000000000000000000000000000000000000008152600401620002ca9190620010da565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690558173ffffffffffffffffffffffffffffffffffffffff167f3be3cf8b79824600b33b84642199163dc824bc8afdc691d0bcd8a849e39f92fc60405160405180910390a25050565b620003d46200076c565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166200046557816040517f7a33dd0a0000000000000000000000000000000000000000000000000000000081526004016200045c9190620010da565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c611f246040518163ffffffff1660e01b815260040160006040518083038186803b1580156200050a57600080fd5b505afa1580156200051f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906200054a919062001428565b9050919050565b600033888888888888886040516200056990620007ff565b6200057c989796959493929190620015ea565b604051809103906000f08015801562000599573d6000803e3d6000fd5b509050806000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555033600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f09bbf24b4293854c1315d1a5921de6437bcf9cb86d9f8429875e48f5aa97b55f8a8a8a8a8a8a8a6040516200075a9796959493929190620016cd565b60405180910390a35050505050505050565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160006001811115620007ac57620007ab620008c9565b5b81526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000815260200160006002811115620007f957620007f8620008c9565b5b81525090565b612ed0806200176783390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200084e8262000821565b9050919050565b620008608162000841565b81146200086c57600080fd5b50565b600081359050620008808162000855565b92915050565b6000602082840312156200089f576200089e62000817565b5b6000620008af848285016200086f565b91505092915050565b620008c38162000841565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106200090c576200090b620008c9565b5b50565b60008190506200091f82620008f8565b919050565b600062000931826200090f565b9050919050565b620009438162000924565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200098557808201518184015260208101905062000968565b8381111562000995576000848401525b50505050565b6000601f19601f8301169050919050565b6000620009b98262000949565b620009c5818562000954565b9350620009d781856020860162000965565b620009e2816200099b565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600062000a278383620009ac565b905092915050565b6000602082019050919050565b600062000a4982620009ed565b62000a558185620009f8565b93508360208202850162000a698562000a09565b8060005b8581101562000aab578484038952815162000a89858262000a19565b945062000a968362000a2f565b925060208a0199505060018101905062000a6d565b50829750879550505050505092915050565b6000819050919050565b62000ad28162000abd565b82525050565b6003811062000aec5762000aeb620008c9565b5b50565b600081905062000aff8262000ad8565b919050565b600062000b118262000aef565b9050919050565b62000b238162000b04565b82525050565b60006101408301600083015162000b446000860182620008b8565b50602083015162000b59602086018262000938565b506040830151848203604086015262000b738282620009ac565b9150506060830151848203606086015262000b8f8282620009ac565b9150506080830151848203608086015262000bab8282620009ac565b91505060a083015184820360a086015262000bc7828262000a3c565b91505060c083015162000bde60c086018262000ac7565b5060e083015162000bf360e086018262000ac7565b5061010083015162000c0a61010086018262000ac7565b5061012083015162000c2161012086018262000b18565b508091505092915050565b6000602082019050818103600083015262000c48818462000b29565b905092915050565b600067ffffffffffffffff82169050919050565b62000c6f8162000c50565b811462000c7b57600080fd5b50565b60008135905062000c8f8162000c64565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000cd9826200099b565b810181811067ffffffffffffffff8211171562000cfb5762000cfa62000c9f565b5b80604052505050565b600062000d106200080d565b905062000d1e828262000cce565b919050565b600067ffffffffffffffff82111562000d415762000d4062000c9f565b5b62000d4c826200099b565b9050602081019050919050565b82818337600083830152505050565b600062000d7f62000d798462000d23565b62000d04565b90508281526020810184848401111562000d9e5762000d9d62000c9a565b5b62000dab84828562000d59565b509392505050565b600082601f83011262000dcb5762000dca62000c95565b5b813562000ddd84826020860162000d68565b91505092915050565b600067ffffffffffffffff82111562000e045762000e0362000c9f565b5b602082029050602081019050919050565b600080fd5b600062000e3162000e2b8462000de6565b62000d04565b9050808382526020820190506020840283018581111562000e575762000e5662000e15565b5b835b8181101562000ea557803567ffffffffffffffff81111562000e805762000e7f62000c95565b5b80860162000e8f898262000db3565b8552602085019450505060208101905062000e59565b5050509392505050565b600082601f83011262000ec75762000ec662000c95565b5b813562000ed984826020860162000e1a565b91505092915050565b62000eed8162000abd565b811462000ef957600080fd5b50565b60008135905062000f0d8162000ee2565b92915050565b600080600080600080600060e0888a03121562000f355762000f3462000817565b5b600062000f458a828b0162000c7e565b975050602088013567ffffffffffffffff81111562000f695762000f686200081c565b5b62000f778a828b0162000db3565b965050604088013567ffffffffffffffff81111562000f9b5762000f9a6200081c565b5b62000fa98a828b0162000db3565b955050606088013567ffffffffffffffff81111562000fcd5762000fcc6200081c565b5b62000fdb8a828b0162000db3565b945050608088013567ffffffffffffffff81111562000fff5762000ffe6200081c565b5b6200100d8a828b0162000eaf565b93505060a0620010208a828b0162000efc565b92505060c0620010338a828b0162000efc565b91505092959891949750929550565b6200104d8162000841565b82525050565b60006040820190506200106a600083018562001042565b62001079602083018462001042565b9392505050565b600381106200108e57600080fd5b50565b600081519050620010a28162001080565b92915050565b600060208284031215620010c157620010c062000817565b5b6000620010d18482850162001091565b91505092915050565b6000602082019050620010f1600083018462001042565b92915050565b600080fd5b600080fd5b600081519050620011128162000855565b92915050565b600281106200112657600080fd5b50565b6000815190506200113a8162001118565b92915050565b600062001157620011518462000d23565b62000d04565b90508281526020810184848401111562001176576200117562000c9a565b5b6200118384828562000965565b509392505050565b600082601f830112620011a357620011a262000c95565b5b8151620011b584826020860162001140565b91505092915050565b6000620011d5620011cf8462000de6565b62000d04565b90508083825260208201905060208402830185811115620011fb57620011fa62000e15565b5b835b818110156200124957805167ffffffffffffffff81111562001224576200122362000c95565b5b8086016200123389826200118b565b85526020850194505050602081019050620011fd565b5050509392505050565b600082601f8301126200126b576200126a62000c95565b5b81516200127d848260208601620011be565b91505092915050565b600081519050620012978162000ee2565b92915050565b60006101408284031215620012b757620012b6620010f7565b5b620012c461014062000d04565b90506000620012d68482850162001101565b6000830152506020620012ec8482850162001129565b602083015250604082015167ffffffffffffffff811115620013135762001312620010fc565b5b62001321848285016200118b565b604083015250606082015167ffffffffffffffff811115620013485762001347620010fc565b5b62001356848285016200118b565b606083015250608082015167ffffffffffffffff8111156200137d576200137c620010fc565b5b6200138b848285016200118b565b60808301525060a082015167ffffffffffffffff811115620013b257620013b1620010fc565b5b620013c08482850162001253565b60a08301525060c0620013d68482850162001286565b60c08301525060e0620013ec8482850162001286565b60e083015250610100620014038482850162001286565b610100830152506101206200141b8482850162001091565b6101208301525092915050565b60006020828403121562001441576200144062000817565b5b600082015167ffffffffffffffff8111156200146257620014616200081c565b5b62001470848285016200129d565b91505092915050565b6000819050919050565b6000620014a46200149e620014988462000821565b62001479565b62000821565b9050919050565b6000620014b88262001483565b9050919050565b6000620014cc82620014ab565b9050919050565b620014de81620014bf565b82525050565b620014ef8162000c50565b82525050565b600082825260208201905092915050565b6000620015138262000949565b6200151f8185620014f5565b93506200153181856020860162000965565b6200153c816200099b565b840191505092915050565b600082825260208201905092915050565b60006200156582620009ed565b62001571818562001547565b935083602082028501620015858562000a09565b8060005b85811015620015c75784840389528151620015a5858262000a19565b9450620015b28362000a2f565b925060208a0199505060018101905062001589565b50829750879550505050505092915050565b620015e48162000abd565b82525050565b60006101008201905062001602600083018b620014d3565b62001611602083018a620014e4565b818103604083015262001625818962001506565b905081810360608301526200163b818862001506565b9050818103608083015262001651818762001506565b905081810360a083015262001667818662001558565b90506200167860c0830185620015d9565b6200168760e0830184620015d9565b9998505050505050505050565b6000620016b5620016af620016a98462000c50565b62001479565b62000abd565b9050919050565b620016c78162001694565b82525050565b600060e082019050620016e4600083018a620016bc565b8181036020830152620016f8818962001506565b905081810360408301526200170e818862001506565b9050818103606083015262001724818762001506565b905081810360808301526200173a818662001558565b90506200174b60a0830185620015d9565b6200175a60c0830184620015d9565b9897505050505050505056fe60806040526001600960006101000a81548160ff021916908360028111156200002d576200002c6200033b565b5b02179055503480156200003f57600080fd5b5060405162002ed038038062002ed08339818101604052810190620000659190620006e8565b876000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508667ffffffffffffffff166001811115620000c557620000c46200033b565b5b600060146101000a81548160ff02191690836001811115620000ec57620000eb6200033b565b5b0217905550856001908051906020019062000109929190620001b6565b50846002908051906020019062000122929190620001b6565b5083600390805190602001906200013b929190620001b6565b5082600490805190602001906200015492919062000247565b5081600581905550806006819055504260088190555060006007819055506000600b60006101000a81548160ff0219169083151502179055506000600b60016101000a81548160ff021916908315150217905550505050505050505062000892565b828054620001c4906200085c565b90600052602060002090601f016020900481019282620001e8576000855562000234565b82601f106200020357805160ff191683800117855562000234565b8280016001018555821562000234579182015b828111156200023357825182559160200191906001019062000216565b5b509050620002439190620002ae565b5090565b8280548282559060005260206000209081019282156200029b579160200282015b828111156200029a57825182908051906020019062000289929190620001b6565b509160200191906001019062000268565b5b509050620002aa9190620002cd565b5090565b5b80821115620002c9576000816000905550600101620002af565b5090565b5b80821115620002f15760008181620002e79190620002f5565b50600101620002ce565b5090565b50805462000303906200085c565b6000825580601f1062000317575062000338565b601f016020900490600052602060002090810190620003379190620002ae565b5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003ab826200037e565b9050919050565b620003bd816200039e565b8114620003c957600080fd5b50565b600081519050620003dd81620003b2565b92915050565b600067ffffffffffffffff82169050919050565b6200040281620003e3565b81146200040e57600080fd5b50565b6000815190506200042281620003f7565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200047d8262000432565b810181811067ffffffffffffffff821117156200049f576200049e62000443565b5b80604052505050565b6000620004b46200036a565b9050620004c2828262000472565b919050565b600067ffffffffffffffff821115620004e557620004e462000443565b5b620004f08262000432565b9050602081019050919050565b60005b838110156200051d57808201518184015260208101905062000500565b838111156200052d576000848401525b50505050565b60006200054a6200054484620004c7565b620004a8565b9050828152602081018484840111156200056957620005686200042d565b5b62000576848285620004fd565b509392505050565b600082601f83011262000596576200059562000428565b5b8151620005a884826020860162000533565b91505092915050565b600067ffffffffffffffff821115620005cf57620005ce62000443565b5b602082029050602081019050919050565b600080fd5b6000620005fc620005f684620005b1565b620004a8565b90508083825260208201905060208402830185811115620006225762000621620005e0565b5b835b818110156200067057805167ffffffffffffffff8111156200064b576200064a62000428565b5b8086016200065a89826200057e565b8552602085019450505060208101905062000624565b5050509392505050565b600082601f83011262000692576200069162000428565b5b8151620006a4848260208601620005e5565b91505092915050565b6000819050919050565b620006c281620006ad565b8114620006ce57600080fd5b50565b600081519050620006e281620006b7565b92915050565b600080600080600080600080610100898b0312156200070c576200070b62000374565b5b60006200071c8b828c01620003cc565b98505060206200072f8b828c0162000411565b975050604089015167ffffffffffffffff81111562000753576200075262000379565b5b620007618b828c016200057e565b965050606089015167ffffffffffffffff81111562000785576200078462000379565b5b620007938b828c016200057e565b955050608089015167ffffffffffffffff811115620007b757620007b662000379565b5b620007c58b828c016200057e565b94505060a089015167ffffffffffffffff811115620007e957620007e862000379565b5b620007f78b828c016200067a565b93505060c06200080a8b828c01620006d1565b92505060e06200081d8b828c01620006d1565b9150509295985092959890939650565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200087557607f821691505b602082108114156200088c576200088b6200082d565b5b50919050565b61262e80620008a26000396000f3fe6080604052600436106101815760003560e01c806363bd1d4a116100d1578063c19d93fb1161008a578063e735b48a11610064578063e735b48a14610541578063ed44c6ab1461056a578063ed88c68e14610595578063fa89401a1461059f57610181565b8063c19d93fb146104ae578063cc6cb19a146104d9578063ce845d1d1461051657610181565b806363bd1d4a146103c15780636e04ff0d146103d857806371aac7f9146104165780637284e4161461042d5780637fb3761e14610458578063baf9ec5e1461048357610181565b806320822abc1161013e5780634298b0cd116101185780634298b0cd1461032b5780634585e33b146103565780634a79d50c1461037f57806359c656df146103aa57610181565b806320822abc1461029a5780632636b945146102d757806337fb13b01461030257610181565b806302d05d3f146101865780630c611f24146101b15780630fb5a6b4146101dc57806312065fe0146102075780631910bdc2146102325780631f6f90bd1461026f575b600080fd5b34801561019257600080fd5b5061019b6105c8565b6040516101a89190611abd565b60405180910390f35b3480156101bd57600080fd5b506101c66105ec565b6040516101d39190611e1b565b60405180910390f35b3480156101e857600080fd5b506101f161092c565b6040516101fe9190611e4c565b60405180910390f35b34801561021357600080fd5b5061021c610932565b6040516102299190611e4c565b60405180910390f35b34801561023e57600080fd5b5061025960048036038101906102549190611ea7565b61093c565b6040516102669190611e4c565b60405180910390f35b34801561027b57600080fd5b50610284610985565b6040516102919190611f1e565b60405180910390f35b3480156102a657600080fd5b506102c160048036038101906102bc9190611f6c565b610a13565b6040516102ce9190611f1e565b60405180910390f35b3480156102e357600080fd5b506102ec610abf565b6040516102f99190611e4c565b60405180910390f35b34801561030e57600080fd5b50610329600480360381019061032491906120ce565b610ac5565b005b34801561033757600080fd5b50610340610b6f565b60405161034d9190612132565b60405180910390f35b34801561036257600080fd5b5061037d600480360381019061037891906121ad565b610b82565b005b34801561038b57600080fd5b50610394610cfe565b6040516103a19190611f1e565b60405180910390f35b3480156103b657600080fd5b506103bf610d8c565b005b3480156103cd57600080fd5b506103d6610e80565b005b3480156103e457600080fd5b506103ff60048036038101906103fa919061229b565b6110b2565b60405161040d929190612339565b60405180910390f35b34801561042257600080fd5b5061042b61117b565b005b34801561043957600080fd5b5061044261130e565b60405161044f9190611f1e565b60405180910390f35b34801561046457600080fd5b5061046d61139c565b60405161047a9190612378565b60405180910390f35b34801561048f57600080fd5b506104986113b3565b6040516104a59190612132565b60405180910390f35b3480156104ba57600080fd5b506104c36113c6565b6040516104d09190612378565b60405180910390f35b3480156104e557600080fd5b5061050060048036038101906104fb9190611ea7565b6113d9565b60405161050d9190611e4c565b60405180910390f35b34801561052257600080fd5b5061052b6113f1565b6040516105389190611e4c565b60405180910390f35b34801561054d57600080fd5b50610568600480360381019061056391906120ce565b6113f7565b005b34801561057657600080fd5b5061057f6114a1565b60405161058c91906123a2565b60405180910390f35b61059d6114b4565b005b3480156105ab57600080fd5b506105c660048036038101906105c19190611ea7565b6116b8565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105f461194c565b60405180610140016040528060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600060149054906101000a900460ff16600181111561065e5761065d611af9565b5b815260200160018054610670906123ec565b80601f016020809104026020016040519081016040528092919081815260200182805461069c906123ec565b80156106e95780601f106106be576101008083540402835291602001916106e9565b820191906000526020600020905b8154815290600101906020018083116106cc57829003601f168201915b5050505050815260200160028054610700906123ec565b80601f016020809104026020016040519081016040528092919081815260200182805461072c906123ec565b80156107795780601f1061074e57610100808354040283529160200191610779565b820191906000526020600020905b81548152906001019060200180831161075c57829003601f168201915b5050505050815260200160038054610790906123ec565b80601f01602080910402602001604051908101604052809291908181526020018280546107bc906123ec565b80156108095780601f106107de57610100808354040283529160200191610809565b820191906000526020600020905b8154815290600101906020018083116107ec57829003601f168201915b505050505081526020016004805480602002602001604051908101604052809291908181526020016000905b828210156108e1578382906000526020600020018054610854906123ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610880906123ec565b80156108cd5780601f106108a2576101008083540402835291602001916108cd565b820191906000526020600020905b8154815290600101906020018083116108b057829003601f168201915b505050505081526020019060010190610835565b505050508152602001600554815260200160065481526020016007548152602001600960009054906101000a900460ff16600281111561092457610923611af9565b5b815250905090565b60065481565b6000600754905090565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60018054610992906123ec565b80601f01602080910402602001604051908101604052809291908181526020018280546109be906123ec565b8015610a0b5780601f106109e057610100808354040283529160200191610a0b565b820191906000526020600020905b8154815290600101906020018083116109ee57829003601f168201915b505050505081565b60048181548110610a2357600080fd5b906000526020600020016000915090508054610a3e906123ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6a906123ec565b8015610ab75780601f10610a8c57610100808354040283529160200191610ab7565b820191906000526020600020905b815481529060010190602001808311610a9a57829003601f168201915b505050505081565b60055481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b5557336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610b4c919061242d565b60405180910390fd5b8060029080519060200190610b6b9291906119d9565b5050565b600b60009054906101000a900460ff1681565b6000610b9c604051806020016040528060008152506110b2565b50905080610bd6576040517f311f87a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600b60006101000a81548160ff0219169083151502179055506001600b60016101000a81548160ff02191690831515021790555060065460085442610c1d9190612477565b1115610c8a576002600960006101000a81548160ff02191690836002811115610c4957610c48611af9565b5b02179055507f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d30604051610c7d919061242d565b60405180910390a1610cf9565b60055460075410610cf8576000600960006101000a81548160ff02191690836002811115610cbb57610cba611af9565b5b02179055507f5369558c667e962b633128a01c31764d053da51f61d17370d327ed17f77deccc30604051610cef919061242d565b60405180910390a15b5b505050565b60028054610d0b906123ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610d37906123ec565b8015610d845780601f10610d5957610100808354040283529160200191610d84565b820191906000526020600020905b815481529060010190602001808311610d6757829003601f168201915b505050505081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e1c57336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610e13919061242d565b60405180910390fd5b600060075411610e6357306040517f6db510f5000000000000000000000000000000000000000000000000000000008152600401610e5a919061242d565b60405180910390fd5b6001600b60016101000a81548160ff021916908315150217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f1057336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610f07919061242d565b60405180910390fd5b600b60009054906101000a900460ff16610f6157306040517f8019f726000000000000000000000000000000000000000000000000000000008152600401610f58919061242d565b60405180910390fd5b60006007549050600060078190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610fb7906124dc565b60006040518083038185875af1925050503d8060008114610ff4576040519150601f19603f3d011682016040523d82523d6000602084013e610ff9565b606091505b50509050801561107c576000600b60016101000a81548160ff0219169083151502179055507fba5e837743d81ad0e6deb16089dbb65b549fdda8ad802fd8d4822884d70dc8b260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163060405161106f929190612550565b60405180910390a16110ae565b6040517f11456ffb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b600060606000600554600754101590506000600160028111156110d8576110d7611af9565b5b600960009054906101000a900460ff1660028111156110fa576110f9611af9565b5b1490506000600654600854426111109190612477565b119050600080471190508380611135575081801561112b5750825b80156111345750805b5b9550856040518060400160405280600381526020017f30783000000000000000000000000000000000000000000000000000000000008152509550955050505050915091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461120b57336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401611202919061242d565b60405180910390fd5b60028081111561121e5761121d611af9565b5b600960009054906101000a900460ff1660028111156112405761123f611af9565b5b141561128357306040517fd6d7e5c100000000000000000000000000000000000000000000000000000000815260040161127a919061242d565b60405180910390fd5b6002600960006101000a81548160ff021916908360028111156112a9576112a8611af9565b5b0217905550600060075411156112d5576001600b60006101000a81548160ff0219169083151502179055505b7f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d30604051611304919061242d565b60405180910390a1565b6003805461131b906123ec565b80601f0160208091040260200160405190810160405280929190818152602001828054611347906123ec565b80156113945780601f1061136957610100808354040283529160200191611394565b820191906000526020600020905b81548152906001019060200180831161137757829003601f168201915b505050505081565b6000600960009054906101000a900460ff16905090565b600b60019054906101000a900460ff1681565b600960009054906101000a900460ff1681565b600a6020528060005260406000206000915090505481565b60075481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461148757336040517fef54c81700000000000000000000000000000000000000000000000000000000815260040161147e919061242d565b60405180910390fd5b806003908051906020019061149d9291906119d9565b5050565b600060149054906101000a900460ff1681565b60018060028111156114c9576114c8611af9565b5b600960009054906101000a900460ff1660028111156114eb576114ea611af9565b5b14611522576040517f0300809900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156115b357336040517f911018950000000000000000000000000000000000000000000000000000000081526004016115aa919061242d565b60405180910390fd5b61160534600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461192090919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061165d3460075461192090919063ffffffff16565b6007819055503373ffffffffffffffffffffffffffffffffffffffff167fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca2674923551208346007546040516116ad929190612579565b60405180910390a250565b600b60019054906101000a900460ff1661170957306040517fb1881e16000000000000000000000000000000000000000000000000000000008152600401611700919061242d565b60405180910390fd5b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161178d57336040517fc4385859000000000000000000000000000000000000000000000000000000008152600401611784919061242d565b60405180910390fd5b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600754101561185d57306040517f6db510f5000000000000000000000000000000000000000000000000000000008152600401611854919061242d565b60405180910390fd5b6118728160075461193690919063ffffffff16565b60078190555060008273ffffffffffffffffffffffffffffffffffffffff168260405161189e906124dc565b60006040518083038185875af1925050503d80600081146118db576040519150601f19603f3d011682016040523d82523d6000602084013e6118e0565b606091505b505090508061191b576040517f92e9f8f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000818361192e91906125a2565b905092915050565b600081836119449190612477565b905092915050565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000600181111561198957611988611af9565b5b815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600060028111156119d3576119d2611af9565b5b81525090565b8280546119e5906123ec565b90600052602060002090601f016020900481019282611a075760008555611a4e565b82601f10611a2057805160ff1916838001178555611a4e565b82800160010185558215611a4e579182015b82811115611a4d578251825591602001919060010190611a32565b5b509050611a5b9190611a5f565b5090565b5b80821115611a78576000816000905550600101611a60565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611aa782611a7c565b9050919050565b611ab781611a9c565b82525050565b6000602082019050611ad26000830184611aae565b92915050565b6000611ae382611a7c565b9050919050565b611af381611ad8565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611b3957611b38611af9565b5b50565b6000819050611b4a82611b28565b919050565b6000611b5a82611b3c565b9050919050565b611b6a81611b4f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611baa578082015181840152602081019050611b8f565b83811115611bb9576000848401525b50505050565b6000601f19601f8301169050919050565b6000611bdb82611b70565b611be58185611b7b565b9350611bf5818560208601611b8c565b611bfe81611bbf565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611c418383611bd0565b905092915050565b6000602082019050919050565b6000611c6182611c09565b611c6b8185611c14565b935083602082028501611c7d85611c25565b8060005b85811015611cb95784840389528151611c9a8582611c35565b9450611ca583611c49565b925060208a01995050600181019050611c81565b50829750879550505050505092915050565b6000819050919050565b611cde81611ccb565b82525050565b60038110611cf557611cf4611af9565b5b50565b6000819050611d0682611ce4565b919050565b6000611d1682611cf8565b9050919050565b611d2681611d0b565b82525050565b600061014083016000830151611d456000860182611aea565b506020830151611d586020860182611b61565b5060408301518482036040860152611d708282611bd0565b91505060608301518482036060860152611d8a8282611bd0565b91505060808301518482036080860152611da48282611bd0565b91505060a083015184820360a0860152611dbe8282611c56565b91505060c0830151611dd360c0860182611cd5565b5060e0830151611de660e0860182611cd5565b50610100830151611dfb610100860182611cd5565b50610120830151611e10610120860182611d1d565b508091505092915050565b60006020820190508181036000830152611e358184611d2c565b905092915050565b611e4681611ccb565b82525050565b6000602082019050611e616000830184611e3d565b92915050565b6000604051905090565b600080fd5b600080fd5b611e8481611ad8565b8114611e8f57600080fd5b50565b600081359050611ea181611e7b565b92915050565b600060208284031215611ebd57611ebc611e71565b5b6000611ecb84828501611e92565b91505092915050565b600082825260208201905092915050565b6000611ef082611b70565b611efa8185611ed4565b9350611f0a818560208601611b8c565b611f1381611bbf565b840191505092915050565b60006020820190508181036000830152611f388184611ee5565b905092915050565b611f4981611ccb565b8114611f5457600080fd5b50565b600081359050611f6681611f40565b92915050565b600060208284031215611f8257611f81611e71565b5b6000611f9084828501611f57565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611fdb82611bbf565b810181811067ffffffffffffffff82111715611ffa57611ff9611fa3565b5b80604052505050565b600061200d611e67565b90506120198282611fd2565b919050565b600067ffffffffffffffff82111561203957612038611fa3565b5b61204282611bbf565b9050602081019050919050565b82818337600083830152505050565b600061207161206c8461201e565b612003565b90508281526020810184848401111561208d5761208c611f9e565b5b61209884828561204f565b509392505050565b600082601f8301126120b5576120b4611f99565b5b81356120c584826020860161205e565b91505092915050565b6000602082840312156120e4576120e3611e71565b5b600082013567ffffffffffffffff81111561210257612101611e76565b5b61210e848285016120a0565b91505092915050565b60008115159050919050565b61212c81612117565b82525050565b60006020820190506121476000830184612123565b92915050565b600080fd5b600080fd5b60008083601f84011261216d5761216c611f99565b5b8235905067ffffffffffffffff81111561218a5761218961214d565b5b6020830191508360018202830111156121a6576121a5612152565b5b9250929050565b600080602083850312156121c4576121c3611e71565b5b600083013567ffffffffffffffff8111156121e2576121e1611e76565b5b6121ee85828601612157565b92509250509250929050565b600067ffffffffffffffff82111561221557612214611fa3565b5b61221e82611bbf565b9050602081019050919050565b600061223e612239846121fa565b612003565b90508281526020810184848401111561225a57612259611f9e565b5b61226584828561204f565b509392505050565b600082601f83011261228257612281611f99565b5b813561229284826020860161222b565b91505092915050565b6000602082840312156122b1576122b0611e71565b5b600082013567ffffffffffffffff8111156122cf576122ce611e76565b5b6122db8482850161226d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b600061230b826122e4565b61231581856122ef565b9350612325818560208601611b8c565b61232e81611bbf565b840191505092915050565b600060408201905061234e6000830185612123565b81810360208301526123608184612300565b90509392505050565b61237281611d0b565b82525050565b600060208201905061238d6000830184612369565b92915050565b61239c81611b4f565b82525050565b60006020820190506123b76000830184612393565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061240457607f821691505b60208210811415612418576124176123bd565b5b50919050565b61242781611ad8565b82525050565b6000602082019050612442600083018461241e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061248282611ccb565b915061248d83611ccb565b9250828210156124a05761249f612448565b5b828203905092915050565b600081905092915050565b50565b60006124c66000836124ab565b91506124d1826124b6565b600082019050919050565b60006124e7826124b9565b9150819050919050565b6000819050919050565b600061251661251161250c84611a7c565b6124f1565b611a7c565b9050919050565b6000612528826124fb565b9050919050565b600061253a8261251d565b9050919050565b61254a8161252f565b82525050565b60006040820190506125656000830185612541565b612572602083018461241e565b9392505050565b600060408201905061258e6000830185611e3d565b61259b6020830184611e3d565b9392505050565b60006125ad82611ccb565b91506125b883611ccb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156125ed576125ec612448565b5b82820190509291505056fea2646970667358221220c43453be18bb9833f5c0b5dbb44c2546d58ac623f24ea9c28850a6df81d58dc664736f6c63430008080033a26469706673582212203fa00d699e1c5c224c290971b79afacc2f2949b3968eb5fa909829c6c0e6dcd164736f6c63430008080033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000465760003560e01c80630d6454a4146200004b578063731301cf146200006b578063bc04d86014620000a1575b600080fd5b62000069600480360381019062000063919062000886565b620000c1565b005b62000089600480360381019062000083919062000886565b620003ca565b60405162000098919062000c2c565b60405180910390f35b620000bf6004803603810190620000b9919062000f13565b62000551565b005b80600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620001965733816040517fd9e20da80000000000000000000000000000000000000000000000000000000081526004016200018d92919062001053565b60405180910390fd5b60016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637fb3761e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200023d57600080fd5b505afa15801562000252573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002789190620010a8565b60028111156200028d576200028c620008c9565b5b1415620002d357816040517fdfecfddd000000000000000000000000000000000000000000000000000000008152600401620002ca9190620010da565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690558173ffffffffffffffffffffffffffffffffffffffff167f3be3cf8b79824600b33b84642199163dc824bc8afdc691d0bcd8a849e39f92fc60405160405180910390a25050565b620003d46200076c565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166200046557816040517f7a33dd0a0000000000000000000000000000000000000000000000000000000081526004016200045c9190620010da565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c611f246040518163ffffffff1660e01b815260040160006040518083038186803b1580156200050a57600080fd5b505afa1580156200051f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906200054a919062001428565b9050919050565b600033888888888888886040516200056990620007ff565b6200057c989796959493929190620015ea565b604051809103906000f08015801562000599573d6000803e3d6000fd5b509050806000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555033600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f09bbf24b4293854c1315d1a5921de6437bcf9cb86d9f8429875e48f5aa97b55f8a8a8a8a8a8a8a6040516200075a9796959493929190620016cd565b60405180910390a35050505050505050565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160006001811115620007ac57620007ab620008c9565b5b81526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000815260200160006002811115620007f957620007f8620008c9565b5b81525090565b612ed0806200176783390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200084e8262000821565b9050919050565b620008608162000841565b81146200086c57600080fd5b50565b600081359050620008808162000855565b92915050565b6000602082840312156200089f576200089e62000817565b5b6000620008af848285016200086f565b91505092915050565b620008c38162000841565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106200090c576200090b620008c9565b5b50565b60008190506200091f82620008f8565b919050565b600062000931826200090f565b9050919050565b620009438162000924565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200098557808201518184015260208101905062000968565b8381111562000995576000848401525b50505050565b6000601f19601f8301169050919050565b6000620009b98262000949565b620009c5818562000954565b9350620009d781856020860162000965565b620009e2816200099b565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600062000a278383620009ac565b905092915050565b6000602082019050919050565b600062000a4982620009ed565b62000a558185620009f8565b93508360208202850162000a698562000a09565b8060005b8581101562000aab578484038952815162000a89858262000a19565b945062000a968362000a2f565b925060208a0199505060018101905062000a6d565b50829750879550505050505092915050565b6000819050919050565b62000ad28162000abd565b82525050565b6003811062000aec5762000aeb620008c9565b5b50565b600081905062000aff8262000ad8565b919050565b600062000b118262000aef565b9050919050565b62000b238162000b04565b82525050565b60006101408301600083015162000b446000860182620008b8565b50602083015162000b59602086018262000938565b506040830151848203604086015262000b738282620009ac565b9150506060830151848203606086015262000b8f8282620009ac565b9150506080830151848203608086015262000bab8282620009ac565b91505060a083015184820360a086015262000bc7828262000a3c565b91505060c083015162000bde60c086018262000ac7565b5060e083015162000bf360e086018262000ac7565b5061010083015162000c0a61010086018262000ac7565b5061012083015162000c2161012086018262000b18565b508091505092915050565b6000602082019050818103600083015262000c48818462000b29565b905092915050565b600067ffffffffffffffff82169050919050565b62000c6f8162000c50565b811462000c7b57600080fd5b50565b60008135905062000c8f8162000c64565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000cd9826200099b565b810181811067ffffffffffffffff8211171562000cfb5762000cfa62000c9f565b5b80604052505050565b600062000d106200080d565b905062000d1e828262000cce565b919050565b600067ffffffffffffffff82111562000d415762000d4062000c9f565b5b62000d4c826200099b565b9050602081019050919050565b82818337600083830152505050565b600062000d7f62000d798462000d23565b62000d04565b90508281526020810184848401111562000d9e5762000d9d62000c9a565b5b62000dab84828562000d59565b509392505050565b600082601f83011262000dcb5762000dca62000c95565b5b813562000ddd84826020860162000d68565b91505092915050565b600067ffffffffffffffff82111562000e045762000e0362000c9f565b5b602082029050602081019050919050565b600080fd5b600062000e3162000e2b8462000de6565b62000d04565b9050808382526020820190506020840283018581111562000e575762000e5662000e15565b5b835b8181101562000ea557803567ffffffffffffffff81111562000e805762000e7f62000c95565b5b80860162000e8f898262000db3565b8552602085019450505060208101905062000e59565b5050509392505050565b600082601f83011262000ec75762000ec662000c95565b5b813562000ed984826020860162000e1a565b91505092915050565b62000eed8162000abd565b811462000ef957600080fd5b50565b60008135905062000f0d8162000ee2565b92915050565b600080600080600080600060e0888a03121562000f355762000f3462000817565b5b600062000f458a828b0162000c7e565b975050602088013567ffffffffffffffff81111562000f695762000f686200081c565b5b62000f778a828b0162000db3565b965050604088013567ffffffffffffffff81111562000f9b5762000f9a6200081c565b5b62000fa98a828b0162000db3565b955050606088013567ffffffffffffffff81111562000fcd5762000fcc6200081c565b5b62000fdb8a828b0162000db3565b945050608088013567ffffffffffffffff81111562000fff5762000ffe6200081c565b5b6200100d8a828b0162000eaf565b93505060a0620010208a828b0162000efc565b92505060c0620010338a828b0162000efc565b91505092959891949750929550565b6200104d8162000841565b82525050565b60006040820190506200106a600083018562001042565b62001079602083018462001042565b9392505050565b600381106200108e57600080fd5b50565b600081519050620010a28162001080565b92915050565b600060208284031215620010c157620010c062000817565b5b6000620010d18482850162001091565b91505092915050565b6000602082019050620010f1600083018462001042565b92915050565b600080fd5b600080fd5b600081519050620011128162000855565b92915050565b600281106200112657600080fd5b50565b6000815190506200113a8162001118565b92915050565b600062001157620011518462000d23565b62000d04565b90508281526020810184848401111562001176576200117562000c9a565b5b6200118384828562000965565b509392505050565b600082601f830112620011a357620011a262000c95565b5b8151620011b584826020860162001140565b91505092915050565b6000620011d5620011cf8462000de6565b62000d04565b90508083825260208201905060208402830185811115620011fb57620011fa62000e15565b5b835b818110156200124957805167ffffffffffffffff81111562001224576200122362000c95565b5b8086016200123389826200118b565b85526020850194505050602081019050620011fd565b5050509392505050565b600082601f8301126200126b576200126a62000c95565b5b81516200127d848260208601620011be565b91505092915050565b600081519050620012978162000ee2565b92915050565b60006101408284031215620012b757620012b6620010f7565b5b620012c461014062000d04565b90506000620012d68482850162001101565b6000830152506020620012ec8482850162001129565b602083015250604082015167ffffffffffffffff811115620013135762001312620010fc565b5b62001321848285016200118b565b604083015250606082015167ffffffffffffffff811115620013485762001347620010fc565b5b62001356848285016200118b565b606083015250608082015167ffffffffffffffff8111156200137d576200137c620010fc565b5b6200138b848285016200118b565b60808301525060a082015167ffffffffffffffff811115620013b257620013b1620010fc565b5b620013c08482850162001253565b60a08301525060c0620013d68482850162001286565b60c08301525060e0620013ec8482850162001286565b60e083015250610100620014038482850162001286565b610100830152506101206200141b8482850162001091565b6101208301525092915050565b60006020828403121562001441576200144062000817565b5b600082015167ffffffffffffffff8111156200146257620014616200081c565b5b62001470848285016200129d565b91505092915050565b6000819050919050565b6000620014a46200149e620014988462000821565b62001479565b62000821565b9050919050565b6000620014b88262001483565b9050919050565b6000620014cc82620014ab565b9050919050565b620014de81620014bf565b82525050565b620014ef8162000c50565b82525050565b600082825260208201905092915050565b6000620015138262000949565b6200151f8185620014f5565b93506200153181856020860162000965565b6200153c816200099b565b840191505092915050565b600082825260208201905092915050565b60006200156582620009ed565b62001571818562001547565b935083602082028501620015858562000a09565b8060005b85811015620015c75784840389528151620015a5858262000a19565b9450620015b28362000a2f565b925060208a0199505060018101905062001589565b50829750879550505050505092915050565b620015e48162000abd565b82525050565b60006101008201905062001602600083018b620014d3565b62001611602083018a620014e4565b818103604083015262001625818962001506565b905081810360608301526200163b818862001506565b9050818103608083015262001651818762001506565b905081810360a083015262001667818662001558565b90506200167860c0830185620015d9565b6200168760e0830184620015d9565b9998505050505050505050565b6000620016b5620016af620016a98462000c50565b62001479565b62000abd565b9050919050565b620016c78162001694565b82525050565b600060e082019050620016e4600083018a620016bc565b8181036020830152620016f8818962001506565b905081810360408301526200170e818862001506565b9050818103606083015262001724818762001506565b905081810360808301526200173a818662001558565b90506200174b60a0830185620015d9565b6200175a60c0830184620015d9565b9897505050505050505056fe60806040526001600960006101000a81548160ff021916908360028111156200002d576200002c6200033b565b5b02179055503480156200003f57600080fd5b5060405162002ed038038062002ed08339818101604052810190620000659190620006e8565b876000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508667ffffffffffffffff166001811115620000c557620000c46200033b565b5b600060146101000a81548160ff02191690836001811115620000ec57620000eb6200033b565b5b0217905550856001908051906020019062000109929190620001b6565b50846002908051906020019062000122929190620001b6565b5083600390805190602001906200013b929190620001b6565b5082600490805190602001906200015492919062000247565b5081600581905550806006819055504260088190555060006007819055506000600b60006101000a81548160ff0219169083151502179055506000600b60016101000a81548160ff021916908315150217905550505050505050505062000892565b828054620001c4906200085c565b90600052602060002090601f016020900481019282620001e8576000855562000234565b82601f106200020357805160ff191683800117855562000234565b8280016001018555821562000234579182015b828111156200023357825182559160200191906001019062000216565b5b509050620002439190620002ae565b5090565b8280548282559060005260206000209081019282156200029b579160200282015b828111156200029a57825182908051906020019062000289929190620001b6565b509160200191906001019062000268565b5b509050620002aa9190620002cd565b5090565b5b80821115620002c9576000816000905550600101620002af565b5090565b5b80821115620002f15760008181620002e79190620002f5565b50600101620002ce565b5090565b50805462000303906200085c565b6000825580601f1062000317575062000338565b601f016020900490600052602060002090810190620003379190620002ae565b5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003ab826200037e565b9050919050565b620003bd816200039e565b8114620003c957600080fd5b50565b600081519050620003dd81620003b2565b92915050565b600067ffffffffffffffff82169050919050565b6200040281620003e3565b81146200040e57600080fd5b50565b6000815190506200042281620003f7565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200047d8262000432565b810181811067ffffffffffffffff821117156200049f576200049e62000443565b5b80604052505050565b6000620004b46200036a565b9050620004c2828262000472565b919050565b600067ffffffffffffffff821115620004e557620004e462000443565b5b620004f08262000432565b9050602081019050919050565b60005b838110156200051d57808201518184015260208101905062000500565b838111156200052d576000848401525b50505050565b60006200054a6200054484620004c7565b620004a8565b9050828152602081018484840111156200056957620005686200042d565b5b62000576848285620004fd565b509392505050565b600082601f83011262000596576200059562000428565b5b8151620005a884826020860162000533565b91505092915050565b600067ffffffffffffffff821115620005cf57620005ce62000443565b5b602082029050602081019050919050565b600080fd5b6000620005fc620005f684620005b1565b620004a8565b90508083825260208201905060208402830185811115620006225762000621620005e0565b5b835b818110156200067057805167ffffffffffffffff8111156200064b576200064a62000428565b5b8086016200065a89826200057e565b8552602085019450505060208101905062000624565b5050509392505050565b600082601f83011262000692576200069162000428565b5b8151620006a4848260208601620005e5565b91505092915050565b6000819050919050565b620006c281620006ad565b8114620006ce57600080fd5b50565b600081519050620006e281620006b7565b92915050565b600080600080600080600080610100898b0312156200070c576200070b62000374565b5b60006200071c8b828c01620003cc565b98505060206200072f8b828c0162000411565b975050604089015167ffffffffffffffff81111562000753576200075262000379565b5b620007618b828c016200057e565b965050606089015167ffffffffffffffff81111562000785576200078462000379565b5b620007938b828c016200057e565b955050608089015167ffffffffffffffff811115620007b757620007b662000379565b5b620007c58b828c016200057e565b94505060a089015167ffffffffffffffff811115620007e957620007e862000379565b5b620007f78b828c016200067a565b93505060c06200080a8b828c01620006d1565b92505060e06200081d8b828c01620006d1565b9150509295985092959890939650565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200087557607f821691505b602082108114156200088c576200088b6200082d565b5b50919050565b61262e80620008a26000396000f3fe6080604052600436106101815760003560e01c806363bd1d4a116100d1578063c19d93fb1161008a578063e735b48a11610064578063e735b48a14610541578063ed44c6ab1461056a578063ed88c68e14610595578063fa89401a1461059f57610181565b8063c19d93fb146104ae578063cc6cb19a146104d9578063ce845d1d1461051657610181565b806363bd1d4a146103c15780636e04ff0d146103d857806371aac7f9146104165780637284e4161461042d5780637fb3761e14610458578063baf9ec5e1461048357610181565b806320822abc1161013e5780634298b0cd116101185780634298b0cd1461032b5780634585e33b146103565780634a79d50c1461037f57806359c656df146103aa57610181565b806320822abc1461029a5780632636b945146102d757806337fb13b01461030257610181565b806302d05d3f146101865780630c611f24146101b15780630fb5a6b4146101dc57806312065fe0146102075780631910bdc2146102325780631f6f90bd1461026f575b600080fd5b34801561019257600080fd5b5061019b6105c8565b6040516101a89190611abd565b60405180910390f35b3480156101bd57600080fd5b506101c66105ec565b6040516101d39190611e1b565b60405180910390f35b3480156101e857600080fd5b506101f161092c565b6040516101fe9190611e4c565b60405180910390f35b34801561021357600080fd5b5061021c610932565b6040516102299190611e4c565b60405180910390f35b34801561023e57600080fd5b5061025960048036038101906102549190611ea7565b61093c565b6040516102669190611e4c565b60405180910390f35b34801561027b57600080fd5b50610284610985565b6040516102919190611f1e565b60405180910390f35b3480156102a657600080fd5b506102c160048036038101906102bc9190611f6c565b610a13565b6040516102ce9190611f1e565b60405180910390f35b3480156102e357600080fd5b506102ec610abf565b6040516102f99190611e4c565b60405180910390f35b34801561030e57600080fd5b50610329600480360381019061032491906120ce565b610ac5565b005b34801561033757600080fd5b50610340610b6f565b60405161034d9190612132565b60405180910390f35b34801561036257600080fd5b5061037d600480360381019061037891906121ad565b610b82565b005b34801561038b57600080fd5b50610394610cfe565b6040516103a19190611f1e565b60405180910390f35b3480156103b657600080fd5b506103bf610d8c565b005b3480156103cd57600080fd5b506103d6610e80565b005b3480156103e457600080fd5b506103ff60048036038101906103fa919061229b565b6110b2565b60405161040d929190612339565b60405180910390f35b34801561042257600080fd5b5061042b61117b565b005b34801561043957600080fd5b5061044261130e565b60405161044f9190611f1e565b60405180910390f35b34801561046457600080fd5b5061046d61139c565b60405161047a9190612378565b60405180910390f35b34801561048f57600080fd5b506104986113b3565b6040516104a59190612132565b60405180910390f35b3480156104ba57600080fd5b506104c36113c6565b6040516104d09190612378565b60405180910390f35b3480156104e557600080fd5b5061050060048036038101906104fb9190611ea7565b6113d9565b60405161050d9190611e4c565b60405180910390f35b34801561052257600080fd5b5061052b6113f1565b6040516105389190611e4c565b60405180910390f35b34801561054d57600080fd5b50610568600480360381019061056391906120ce565b6113f7565b005b34801561057657600080fd5b5061057f6114a1565b60405161058c91906123a2565b60405180910390f35b61059d6114b4565b005b3480156105ab57600080fd5b506105c660048036038101906105c19190611ea7565b6116b8565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105f461194c565b60405180610140016040528060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600060149054906101000a900460ff16600181111561065e5761065d611af9565b5b815260200160018054610670906123ec565b80601f016020809104026020016040519081016040528092919081815260200182805461069c906123ec565b80156106e95780601f106106be576101008083540402835291602001916106e9565b820191906000526020600020905b8154815290600101906020018083116106cc57829003601f168201915b5050505050815260200160028054610700906123ec565b80601f016020809104026020016040519081016040528092919081815260200182805461072c906123ec565b80156107795780601f1061074e57610100808354040283529160200191610779565b820191906000526020600020905b81548152906001019060200180831161075c57829003601f168201915b5050505050815260200160038054610790906123ec565b80601f01602080910402602001604051908101604052809291908181526020018280546107bc906123ec565b80156108095780601f106107de57610100808354040283529160200191610809565b820191906000526020600020905b8154815290600101906020018083116107ec57829003601f168201915b505050505081526020016004805480602002602001604051908101604052809291908181526020016000905b828210156108e1578382906000526020600020018054610854906123ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610880906123ec565b80156108cd5780601f106108a2576101008083540402835291602001916108cd565b820191906000526020600020905b8154815290600101906020018083116108b057829003601f168201915b505050505081526020019060010190610835565b505050508152602001600554815260200160065481526020016007548152602001600960009054906101000a900460ff16600281111561092457610923611af9565b5b815250905090565b60065481565b6000600754905090565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60018054610992906123ec565b80601f01602080910402602001604051908101604052809291908181526020018280546109be906123ec565b8015610a0b5780601f106109e057610100808354040283529160200191610a0b565b820191906000526020600020905b8154815290600101906020018083116109ee57829003601f168201915b505050505081565b60048181548110610a2357600080fd5b906000526020600020016000915090508054610a3e906123ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6a906123ec565b8015610ab75780601f10610a8c57610100808354040283529160200191610ab7565b820191906000526020600020905b815481529060010190602001808311610a9a57829003601f168201915b505050505081565b60055481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b5557336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610b4c919061242d565b60405180910390fd5b8060029080519060200190610b6b9291906119d9565b5050565b600b60009054906101000a900460ff1681565b6000610b9c604051806020016040528060008152506110b2565b50905080610bd6576040517f311f87a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600b60006101000a81548160ff0219169083151502179055506001600b60016101000a81548160ff02191690831515021790555060065460085442610c1d9190612477565b1115610c8a576002600960006101000a81548160ff02191690836002811115610c4957610c48611af9565b5b02179055507f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d30604051610c7d919061242d565b60405180910390a1610cf9565b60055460075410610cf8576000600960006101000a81548160ff02191690836002811115610cbb57610cba611af9565b5b02179055507f5369558c667e962b633128a01c31764d053da51f61d17370d327ed17f77deccc30604051610cef919061242d565b60405180910390a15b5b505050565b60028054610d0b906123ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610d37906123ec565b8015610d845780601f10610d5957610100808354040283529160200191610d84565b820191906000526020600020905b815481529060010190602001808311610d6757829003601f168201915b505050505081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e1c57336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610e13919061242d565b60405180910390fd5b600060075411610e6357306040517f6db510f5000000000000000000000000000000000000000000000000000000008152600401610e5a919061242d565b60405180910390fd5b6001600b60016101000a81548160ff021916908315150217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f1057336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610f07919061242d565b60405180910390fd5b600b60009054906101000a900460ff16610f6157306040517f8019f726000000000000000000000000000000000000000000000000000000008152600401610f58919061242d565b60405180910390fd5b60006007549050600060078190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610fb7906124dc565b60006040518083038185875af1925050503d8060008114610ff4576040519150601f19603f3d011682016040523d82523d6000602084013e610ff9565b606091505b50509050801561107c576000600b60016101000a81548160ff0219169083151502179055507fba5e837743d81ad0e6deb16089dbb65b549fdda8ad802fd8d4822884d70dc8b260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163060405161106f929190612550565b60405180910390a16110ae565b6040517f11456ffb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b600060606000600554600754101590506000600160028111156110d8576110d7611af9565b5b600960009054906101000a900460ff1660028111156110fa576110f9611af9565b5b1490506000600654600854426111109190612477565b119050600080471190508380611135575081801561112b5750825b80156111345750805b5b9550856040518060400160405280600381526020017f30783000000000000000000000000000000000000000000000000000000000008152509550955050505050915091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461120b57336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401611202919061242d565b60405180910390fd5b60028081111561121e5761121d611af9565b5b600960009054906101000a900460ff1660028111156112405761123f611af9565b5b141561128357306040517fd6d7e5c100000000000000000000000000000000000000000000000000000000815260040161127a919061242d565b60405180910390fd5b6002600960006101000a81548160ff021916908360028111156112a9576112a8611af9565b5b0217905550600060075411156112d5576001600b60006101000a81548160ff0219169083151502179055505b7f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d30604051611304919061242d565b60405180910390a1565b6003805461131b906123ec565b80601f0160208091040260200160405190810160405280929190818152602001828054611347906123ec565b80156113945780601f1061136957610100808354040283529160200191611394565b820191906000526020600020905b81548152906001019060200180831161137757829003601f168201915b505050505081565b6000600960009054906101000a900460ff16905090565b600b60019054906101000a900460ff1681565b600960009054906101000a900460ff1681565b600a6020528060005260406000206000915090505481565b60075481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461148757336040517fef54c81700000000000000000000000000000000000000000000000000000000815260040161147e919061242d565b60405180910390fd5b806003908051906020019061149d9291906119d9565b5050565b600060149054906101000a900460ff1681565b60018060028111156114c9576114c8611af9565b5b600960009054906101000a900460ff1660028111156114eb576114ea611af9565b5b14611522576040517f0300809900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156115b357336040517f911018950000000000000000000000000000000000000000000000000000000081526004016115aa919061242d565b60405180910390fd5b61160534600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461192090919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061165d3460075461192090919063ffffffff16565b6007819055503373ffffffffffffffffffffffffffffffffffffffff167fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca2674923551208346007546040516116ad929190612579565b60405180910390a250565b600b60019054906101000a900460ff1661170957306040517fb1881e16000000000000000000000000000000000000000000000000000000008152600401611700919061242d565b60405180910390fd5b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161178d57336040517fc4385859000000000000000000000000000000000000000000000000000000008152600401611784919061242d565b60405180910390fd5b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600754101561185d57306040517f6db510f5000000000000000000000000000000000000000000000000000000008152600401611854919061242d565b60405180910390fd5b6118728160075461193690919063ffffffff16565b60078190555060008273ffffffffffffffffffffffffffffffffffffffff168260405161189e906124dc565b60006040518083038185875af1925050503d80600081146118db576040519150601f19603f3d011682016040523d82523d6000602084013e6118e0565b606091505b505090508061191b576040517f92e9f8f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000818361192e91906125a2565b905092915050565b600081836119449190612477565b905092915050565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000600181111561198957611988611af9565b5b815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600060028111156119d3576119d2611af9565b5b81525090565b8280546119e5906123ec565b90600052602060002090601f016020900481019282611a075760008555611a4e565b82601f10611a2057805160ff1916838001178555611a4e565b82800160010185558215611a4e579182015b82811115611a4d578251825591602001919060010190611a32565b5b509050611a5b9190611a5f565b5090565b5b80821115611a78576000816000905550600101611a60565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611aa782611a7c565b9050919050565b611ab781611a9c565b82525050565b6000602082019050611ad26000830184611aae565b92915050565b6000611ae382611a7c565b9050919050565b611af381611ad8565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611b3957611b38611af9565b5b50565b6000819050611b4a82611b28565b919050565b6000611b5a82611b3c565b9050919050565b611b6a81611b4f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611baa578082015181840152602081019050611b8f565b83811115611bb9576000848401525b50505050565b6000601f19601f8301169050919050565b6000611bdb82611b70565b611be58185611b7b565b9350611bf5818560208601611b8c565b611bfe81611bbf565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611c418383611bd0565b905092915050565b6000602082019050919050565b6000611c6182611c09565b611c6b8185611c14565b935083602082028501611c7d85611c25565b8060005b85811015611cb95784840389528151611c9a8582611c35565b9450611ca583611c49565b925060208a01995050600181019050611c81565b50829750879550505050505092915050565b6000819050919050565b611cde81611ccb565b82525050565b60038110611cf557611cf4611af9565b5b50565b6000819050611d0682611ce4565b919050565b6000611d1682611cf8565b9050919050565b611d2681611d0b565b82525050565b600061014083016000830151611d456000860182611aea565b506020830151611d586020860182611b61565b5060408301518482036040860152611d708282611bd0565b91505060608301518482036060860152611d8a8282611bd0565b91505060808301518482036080860152611da48282611bd0565b91505060a083015184820360a0860152611dbe8282611c56565b91505060c0830151611dd360c0860182611cd5565b5060e0830151611de660e0860182611cd5565b50610100830151611dfb610100860182611cd5565b50610120830151611e10610120860182611d1d565b508091505092915050565b60006020820190508181036000830152611e358184611d2c565b905092915050565b611e4681611ccb565b82525050565b6000602082019050611e616000830184611e3d565b92915050565b6000604051905090565b600080fd5b600080fd5b611e8481611ad8565b8114611e8f57600080fd5b50565b600081359050611ea181611e7b565b92915050565b600060208284031215611ebd57611ebc611e71565b5b6000611ecb84828501611e92565b91505092915050565b600082825260208201905092915050565b6000611ef082611b70565b611efa8185611ed4565b9350611f0a818560208601611b8c565b611f1381611bbf565b840191505092915050565b60006020820190508181036000830152611f388184611ee5565b905092915050565b611f4981611ccb565b8114611f5457600080fd5b50565b600081359050611f6681611f40565b92915050565b600060208284031215611f8257611f81611e71565b5b6000611f9084828501611f57565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611fdb82611bbf565b810181811067ffffffffffffffff82111715611ffa57611ff9611fa3565b5b80604052505050565b600061200d611e67565b90506120198282611fd2565b919050565b600067ffffffffffffffff82111561203957612038611fa3565b5b61204282611bbf565b9050602081019050919050565b82818337600083830152505050565b600061207161206c8461201e565b612003565b90508281526020810184848401111561208d5761208c611f9e565b5b61209884828561204f565b509392505050565b600082601f8301126120b5576120b4611f99565b5b81356120c584826020860161205e565b91505092915050565b6000602082840312156120e4576120e3611e71565b5b600082013567ffffffffffffffff81111561210257612101611e76565b5b61210e848285016120a0565b91505092915050565b60008115159050919050565b61212c81612117565b82525050565b60006020820190506121476000830184612123565b92915050565b600080fd5b600080fd5b60008083601f84011261216d5761216c611f99565b5b8235905067ffffffffffffffff81111561218a5761218961214d565b5b6020830191508360018202830111156121a6576121a5612152565b5b9250929050565b600080602083850312156121c4576121c3611e71565b5b600083013567ffffffffffffffff8111156121e2576121e1611e76565b5b6121ee85828601612157565b92509250509250929050565b600067ffffffffffffffff82111561221557612214611fa3565b5b61221e82611bbf565b9050602081019050919050565b600061223e612239846121fa565b612003565b90508281526020810184848401111561225a57612259611f9e565b5b61226584828561204f565b509392505050565b600082601f83011261228257612281611f99565b5b813561229284826020860161222b565b91505092915050565b6000602082840312156122b1576122b0611e71565b5b600082013567ffffffffffffffff8111156122cf576122ce611e76565b5b6122db8482850161226d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b600061230b826122e4565b61231581856122ef565b9350612325818560208601611b8c565b61232e81611bbf565b840191505092915050565b600060408201905061234e6000830185612123565b81810360208301526123608184612300565b90509392505050565b61237281611d0b565b82525050565b600060208201905061238d6000830184612369565b92915050565b61239c81611b4f565b82525050565b60006020820190506123b76000830184612393565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061240457607f821691505b60208210811415612418576124176123bd565b5b50919050565b61242781611ad8565b82525050565b6000602082019050612442600083018461241e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061248282611ccb565b915061248d83611ccb565b9250828210156124a05761249f612448565b5b828203905092915050565b600081905092915050565b50565b60006124c66000836124ab565b91506124d1826124b6565b600082019050919050565b60006124e7826124b9565b9150819050919050565b6000819050919050565b600061251661251161250c84611a7c565b6124f1565b611a7c565b9050919050565b6000612528826124fb565b9050919050565b600061253a8261251d565b9050919050565b61254a8161252f565b82525050565b60006040820190506125656000830185612541565b612572602083018461241e565b9392505050565b600060408201905061258e6000830185611e3d565b61259b6020830184611e3d565b9392505050565b60006125ad82611ccb565b91506125b883611ccb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156125ed576125ec612448565b5b82820190509291505056fea2646970667358221220c43453be18bb9833f5c0b5dbb44c2546d58ac623f24ea9c28850a6df81d58dc664736f6c63430008080033a26469706673582212203fa00d699e1c5c224c290971b79afacc2f2949b3968eb5fa909829c6c0e6dcd164736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1068,
        "contract": "contracts/CrowdFunder.sol:CrowdFunder",
        "label": "campaigns",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_contract(Campaign)1017)"
      },
      {
        "astId": 1072,
        "contract": "contracts/CrowdFunder.sol:CrowdFunder",
        "label": "campaignCreators",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 1076,
        "contract": "contracts/CrowdFunder.sol:CrowdFunder",
        "label": "campaignAddresses",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(Campaign)1017": {
        "encoding": "inplace",
        "label": "contract Campaign",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_contract(Campaign)1017)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract Campaign)",
        "numberOfBytes": "32",
        "value": "t_contract(Campaign)1017"
      }
    }
  }
}