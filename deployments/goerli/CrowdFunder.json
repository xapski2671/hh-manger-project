{
  "address": "0x8DA6bd979caC576696036F3F328eA7F343543A2A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__CampaignStillActive",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__DonationFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__NotCreator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__RefundFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "_tags",
          "type": "string[]"
        }
      ],
      "name": "CampaignAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignShrunk",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_twitter",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_location",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_bio",
          "type": "string"
        }
      ],
      "name": "UserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_homeAddr",
          "type": "string"
        }
      ],
      "name": "UserHomeAddrAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_tags",
          "type": "string[]"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_imageURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_campaignURI",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_linkTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_upkeepCreatorAddress",
          "type": "address"
        }
      ],
      "name": "addCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_twitter",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_location",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_bio",
          "type": "string"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_homeAddr",
          "type": "string"
        }
      ],
      "name": "addUserHomeAddr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "campaignCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "donateToCampaign",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "refundFromCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "removeCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa461249eb61e39972bebe58943dfe242b465493c5c5e8079994ecc0d648a83a4",
  "receipt": {
    "to": null,
    "from": "0x4B5a2B7b5438A79797698570AC9D45155D3Bb0e3",
    "contractAddress": "0x8DA6bd979caC576696036F3F328eA7F343543A2A",
    "transactionIndex": 83,
    "gasUsed": "4954818",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xb5ddc65dc8c9400533e3f83f3f7838689c2019b9c3b82187fbe3e841515e3f88",
    "transactionHash": "0xa461249eb61e39972bebe58943dfe242b465493c5c5e8079994ecc0d648a83a4",
    "logs": [],
    "blockNumber": 8634647,
    "cumulativeGasUsed": "14575161",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 13,
  "solcInputHash": "2539896b9a41ffd59f50154d69818b89",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__CampaignStillActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__DonationFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__NotCreator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__RefundFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"_tags\",\"type\":\"string[]\"}],\"name\":\"CampaignAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignShrunk\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_twitter\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_location\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"}],\"name\":\"UserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_homeAddr\",\"type\":\"string\"}],\"name\":\"UserHomeAddrAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_tags\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_campaignURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_linkTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_upkeepCreatorAddress\",\"type\":\"address\"}],\"name\":\"addCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_twitter\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"}],\"name\":\"addUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_homeAddr\",\"type\":\"string\"}],\"name\":\"addUserHomeAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"campaignCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"donateToCampaign\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"refundFromCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"removeCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrowdFunder.sol\":\"CrowdFunder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AutomationRegistryInterface1_2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @notice config of the registry\\n * @dev only used in params and return values\\n * @member paymentPremiumPPB payment premium rate oracles receive on top of\\n * being reimbursed for gas, measured in parts per billion\\n * @member flatFeeMicroLink flat fee paid to oracles for performing upkeeps,\\n * priced in MicroLink; can be used in conjunction with or independently of\\n * paymentPremiumPPB\\n * @member blockCountPerTurn number of blocks each oracle has during their turn to\\n * perform upkeep before it will be the next keeper's turn to submit\\n * @member checkGasLimit gas limit when checking for upkeep\\n * @member stalenessSeconds number of seconds that is allowed for feed data to\\n * be stale before switching to the fallback pricing\\n * @member gasCeilingMultiplier multiplier to apply to the fast gas feed price\\n * when calculating the payment ceiling for keepers\\n * @member minUpkeepSpend minimum LINK that an upkeep must spend before cancelling\\n * @member maxPerformGas max executeGas allowed for an upkeep on this registry\\n * @member fallbackGasPrice gas price used if the gas price feed is stale\\n * @member fallbackLinkPrice LINK price used if the LINK price feed is stale\\n * @member transcoder address of the transcoder contract\\n * @member registrar address of the registrar contract\\n */\\nstruct Config {\\n  uint32 paymentPremiumPPB;\\n  uint32 flatFeeMicroLink; // min 0.000001 LINK, max 4294 LINK\\n  uint24 blockCountPerTurn;\\n  uint32 checkGasLimit;\\n  uint24 stalenessSeconds;\\n  uint16 gasCeilingMultiplier;\\n  uint96 minUpkeepSpend;\\n  uint32 maxPerformGas;\\n  uint256 fallbackGasPrice;\\n  uint256 fallbackLinkPrice;\\n  address transcoder;\\n  address registrar;\\n}\\n\\n/**\\n * @notice state of the registry\\n * @dev only used in params and return values\\n * @member nonce used for ID generation\\n * @member ownerLinkBalance withdrawable balance of LINK by contract owner\\n * @member expectedLinkBalance the expected balance of LINK of the registry\\n * @member numUpkeeps total number of upkeeps on the registry\\n */\\nstruct State {\\n  uint32 nonce;\\n  uint96 ownerLinkBalance;\\n  uint256 expectedLinkBalance;\\n  uint256 numUpkeeps;\\n}\\n\\ninterface AutomationRegistryBaseInterface {\\n  function registerUpkeep(\\n    address target,\\n    uint32 gasLimit,\\n    address admin,\\n    bytes calldata checkData\\n  ) external returns (uint256 id);\\n\\n  function performUpkeep(uint256 id, bytes calldata performData) external returns (bool success);\\n\\n  function cancelUpkeep(uint256 id) external;\\n\\n  function addFunds(uint256 id, uint96 amount) external;\\n\\n  function setUpkeepGasLimit(uint256 id, uint32 gasLimit) external;\\n\\n  function getUpkeep(uint256 id)\\n    external\\n    view\\n    returns (\\n      address target,\\n      uint32 executeGas,\\n      bytes memory checkData,\\n      uint96 balance,\\n      address lastKeeper,\\n      address admin,\\n      uint64 maxValidBlocknumber,\\n      uint96 amountSpent\\n    );\\n\\n  function getActiveUpkeepIDs(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  function getKeeperInfo(address query)\\n    external\\n    view\\n    returns (\\n      address payee,\\n      bool active,\\n      uint96 balance\\n    );\\n\\n  function getState()\\n    external\\n    view\\n    returns (\\n      State memory,\\n      Config memory,\\n      address[] memory\\n    );\\n}\\n\\n/**\\n * @dev The view methods are not actually marked as view in the implementation\\n * but we want them to be easily queried off-chain. Solidity will not compile\\n * if we actually inherit from this interface, so we document it here.\\n */\\ninterface AutomationRegistryInterface is AutomationRegistryBaseInterface {\\n  function checkUpkeep(uint256 upkeepId, address from)\\n    external\\n    view\\n    returns (\\n      bytes memory performData,\\n      uint256 maxLinkPayment,\\n      uint256 gasLimit,\\n      int256 gasWei,\\n      int256 linkEth\\n    );\\n}\\n\\ninterface AutomationRegistryExecutableInterface is AutomationRegistryBaseInterface {\\n  function checkUpkeep(uint256 upkeepId, address from)\\n    external\\n    returns (\\n      bytes memory performData,\\n      uint256 maxLinkPayment,\\n      uint256 gasLimit,\\n      uint256 adjustedGasWei,\\n      uint256 linkEth\\n    );\\n}\\n\",\"keccak256\":\"0xc61d747194f2efd476204f9cf138f4028166d4723960fd66c7d316625ebe3ff6\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Campaign.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\nimport \\\"./UpkeepIDConsumer.sol\\\";\\r\\n\\r\\n// errors\\r\\nerror Campaign__NotInC_State();\\r\\nerror Campaign__NotCreator();\\r\\nerror Campaign__DonatorIsCreator();\\r\\nerror Campaign__PayoutFailed();\\r\\nerror Campaign__NoDonationsHere(address _donatorAddress);\\r\\nerror Campaign__RefundFailed();\\r\\nerror Campaign__UpkeepNotNeeded();\\r\\nerror Campaign__AlreadyExpired();\\r\\nerror Campaign__NotRefundable();\\r\\nerror Campaign__CampaignBankrupt();\\r\\n\\r\\n\\r\\ncontract Campaign is KeeperCompatibleInterface{\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  // enums\\r\\n  enum C_State {\\r\\n    Fundraising,\\r\\n    Expired,\\r\\n    Canceled\\r\\n  }\\r\\n\\r\\n  // c_state variables\\r\\n  address payable immutable public i_creator;\\r\\n  string public s_title;\\r\\n  string public s_description;\\r\\n  string public s_category;\\r\\n  string public s_imageURI;\\r\\n  string public s_campaignURI;\\r\\n  string[] public s_tags;\\r\\n  uint256 public goalAmount;\\r\\n  uint256 public duration;\\r\\n  uint256 public currentBalance;\\r\\n  uint256 private immutable i_lastTimeStamp;\\r\\n  // uint256 private immutable i_maxTimeStamp;\\r\\n  uint256 public deadline;\\r\\n  C_State public c_state = C_State.Fundraising; // default c_state\\r\\n  address private immutable i_linkTokenAddress;\\r\\n  address private immutable i_upkeepCreatorAddress;\\r\\n  uint256 private rId;\\r\\n\\r\\n  struct CampaignObject {\\r\\n    address i_creator;\\r\\n    string s_title;\\r\\n    string s_description;\\r\\n    string s_category;\\r\\n    string[] s_tags;\\r\\n    uint256 goalAmount;\\r\\n    uint256 duration;\\r\\n    uint256 currentBalance;\\r\\n    C_State currentC_State;\\r\\n    string s_imageURI;\\r\\n    string s_campaignURI;\\r\\n    uint256 deadline;\\r\\n  }\\r\\n\\r\\n  struct reward {\\r\\n    uint256 price;\\r\\n    string title;\\r\\n    string description;\\r\\n    string[] perks;\\r\\n    uint256 delDate;\\r\\n    uint256 quantity;\\r\\n    bool infinite;\\r\\n    string[] shipsTo;\\r\\n  }\\r\\n\\r\\n  mapping (uint256 => reward) public rewards;\\r\\n  mapping (address => uint256[]) public donations;\\r\\n\\r\\n  uint256[] rKeys;\\r\\n\\r\\n\\r\\n  // events\\r\\n  event FundingRecieved (\\r\\n    address indexed contributor,\\r\\n    uint256 amount,\\r\\n    uint256 currentBalance\\r\\n  );\\r\\n  event CreatorPaid(address creator, address campaignAddress);\\r\\n  event CampaignSuccessful(address campaignAddress);\\r\\n  event CampaignExpired(address campaignAddress);\\r\\n  event CampaignCanceled();\\r\\n\\r\\n\\r\\n  // modifiers\\r\\n  modifier isCreator() {\\r\\n    if(msg.sender != i_creator){revert Campaign__NotCreator();}\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  constructor (\\r\\n    address _creator,\\r\\n    string memory _title,\\r\\n    string memory _description,\\r\\n    string memory _category,\\r\\n    string[] memory _tags,\\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration,\\r\\n    string memory _imageURI,\\r\\n    string memory _campaignURI,\\r\\n    address _linkTokenAddress,\\r\\n    address _upkeepCreatorAddress\\r\\n  ) {\\r\\n    i_creator = payable(_creator);\\r\\n    s_title = _title;\\r\\n    s_description = _description;\\r\\n    s_category = _category;\\r\\n    s_tags = _tags;\\r\\n    goalAmount = _goalAmount;\\r\\n    i_lastTimeStamp = block.timestamp;\\r\\n    // i_maxTimeStamp = i_lastTimeStamp + 5184000; // 60days\\r\\n    duration = _duration;\\r\\n    deadline = i_lastTimeStamp + duration;\\r\\n    s_imageURI = _imageURI;\\r\\n    s_campaignURI = _campaignURI;\\r\\n    currentBalance = 0;\\r\\n    i_linkTokenAddress = _linkTokenAddress;\\r\\n    i_upkeepCreatorAddress = _upkeepCreatorAddress;\\r\\n  }\\r\\n\\r\\n  function timeBox() public isCreator {\\r\\n    UpkeepIDConsumer newUpkeepCreator = UpkeepIDConsumer(i_upkeepCreatorAddress);\\r\\n    LinkTokenInterface token = LinkTokenInterface(i_linkTokenAddress);\\r\\n    if(token.balanceOf(i_upkeepCreatorAddress) <= 0){revert(\\\"no funds\\\");}\\r\\n    rId = newUpkeepCreator.registerAndPredictID(s_title, \\\"0x\\\", address(this), 500000, i_creator, \\\"0x\\\", 10000000000000000000, 0);\\r\\n  }\\r\\n\\r\\n  function donate() external payable {\\r\\n    if(c_state != C_State.Fundraising){revert Campaign__NotInC_State();}\\r\\n    if(msg.sender == i_creator){revert Campaign__DonatorIsCreator();}\\r\\n    if(rewards[msg.value].price > 0  //exists\\r\\n      && !rewards[msg.value].infinite // is not infinite\\r\\n      && rewards[msg.value].quantity > 0  // its quantity > 0\\r\\n    ){rewards[msg.value].quantity - 1;}\\r\\n    donations[msg.sender].push(msg.value);\\r\\n    currentBalance = currentBalance.add(msg.value);\\r\\n    emit FundingRecieved(msg.sender, msg.value, currentBalance);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev this is the function chainlink keepers calls\\r\\n    chekupkeep returns true to trigger the action after the interval has passed\\r\\n   */\\r\\n  function checkUpkeep(bytes memory /**checkData */) public view override\\r\\n  returns (bool upkeepNeeded, bytes memory /**performData */) \\r\\n  {\\r\\n    bool isOpen = c_state == C_State.Fundraising;\\r\\n    bool timePassed = ((block.timestamp - i_lastTimeStamp) > duration);\\r\\n    bool hasBalance = address(this).balance > 0;\\r\\n    upkeepNeeded = (timePassed && isOpen && hasBalance) ;\\r\\n    return (upkeepNeeded, \\\"0x0\\\");\\r\\n  }\\r\\n\\r\\n  function performUpkeep(bytes calldata /**performData */) external override {\\r\\n    (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n    if(!upkeepNeeded){revert Campaign__UpkeepNotNeeded();}\\r\\n    c_state = C_State.Expired;\\r\\n    emit CampaignExpired(address(this));\\r\\n    if(currentBalance >= goalAmount){\\r\\n      emit CampaignSuccessful(address(this));\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function payout() public isCreator {\\r\\n    if(c_state != C_State.Expired){revert Campaign__NotInC_State();}\\r\\n    uint256 totalRaised = currentBalance;\\r\\n    currentBalance = 0;\\r\\n    (bool success, ) = i_creator.call{value: totalRaised}(\\\"\\\");\\r\\n    if(success){\\r\\n      emit CreatorPaid(i_creator, address(this));\\r\\n    }\\r\\n    else{revert Campaign__PayoutFailed();}\\r\\n  }\\r\\n\\r\\n  function refund(address _donator) public {\\r\\n    if(c_state == C_State.Expired){revert Campaign__AlreadyExpired();}\\r\\n    if(donations[_donator].length == 0 ){revert Campaign__NoDonationsHere(_donator);}\\r\\n    uint256 amountToRefund = calcFunderDonations(donations[_donator]);\\r\\n    delete(donations[_donator]);\\r\\n    if(currentBalance < amountToRefund){revert Campaign__CampaignBankrupt();}\\r\\n    currentBalance = currentBalance.sub(amountToRefund);\\r\\n    (bool success, ) = payable(_donator).call{value: amountToRefund}(\\\"\\\");\\r\\n    if(!success){revert Campaign__RefundFailed();}\\r\\n  }\\r\\n\\r\\n  function calcFunderDonations(uint256[] memory _funderArr) private pure returns(uint256 result){\\r\\n    for (uint256 i = 0; i < _funderArr.length; i++) {\\r\\n      result += _funderArr[i];\\r\\n    }\\r\\n    return result;\\r\\n  }\\r\\n\\r\\n  function makeReward( \\r\\n    uint256 _price, string memory _title, \\r\\n    string memory _description, string[] memory _perks, \\r\\n    uint256 _deadline, uint256 _quantity, bool _infinite, string[] memory _shipsTo\\r\\n    ) public isCreator {\\r\\n    rKeys.push(_price);\\r\\n    // shipsto _NW, infinite true, quantitymax 100  (for digRewards)  shipsto _AITW for phyRewards\\r\\n    rewards[_price] = reward(_price, _title, _description, _perks, _deadline, _quantity, _infinite, _shipsTo);\\r\\n  }\\r\\n\\r\\n  function deleteReward(uint256 _priceID) public isCreator {\\r\\n    if(rewards[_priceID].price > 0){delete(rewards[_priceID]);}\\r\\n  }\\r\\n\\r\\n  function endCampaign() public isCreator {\\r\\n    if(c_state == C_State.Expired){revert Campaign__AlreadyExpired();}\\r\\n    c_state = C_State.Canceled;\\r\\n    emit CampaignCanceled();\\r\\n  }\\r\\n\\r\\n  // update functions\\r\\n  function updateDuration(uint256 _additionalTime) public isCreator {\\r\\n    duration += _additionalTime;\\r\\n    deadline = i_lastTimeStamp + duration;\\r\\n  }\\r\\n\\r\\n  function updateCampaignURI(string memory _campaignURI) public isCreator {\\r\\n    s_campaignURI = _campaignURI;\\r\\n  }\\r\\n\\r\\n  // getter functions\\r\\n  function getDonations(address _donator) public view returns(uint256[] memory) {\\r\\n    return donations[_donator];\\r\\n  }\\r\\n\\r\\n  function getCampaignDetails() public view returns(CampaignObject memory) {\\r\\n    return CampaignObject(\\r\\n      i_creator,\\r\\n      s_title,\\r\\n      s_description,\\r\\n      s_category,\\r\\n      s_tags,\\r\\n      goalAmount,\\r\\n      duration,\\r\\n      currentBalance,\\r\\n      c_state,\\r\\n      s_imageURI,\\r\\n      s_campaignURI,\\r\\n      deadline\\r\\n    );\\r\\n  }\\r\\n}\",\"keccak256\":\"0xa3e3bd8726ad72b3b87a1bc6055e314ad60978d84a98b688f9d2381b54b7fba8\",\"license\":\"MIT\"},\"contracts/CrowdFunder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"./Campaign.sol\\\";\\r\\n\\r\\n// errors\\r\\nerror CrowdFunder__NotCreator(address _caller, address _campaignAddress);\\r\\nerror CrowdFunder__CampaignStillActive(address _campaignAddress);\\r\\nerror CrowdFunder__DonationFailed(address _campaignAddress);\\r\\nerror CrowdFunder__RefundFailed(address _campaignAddress);\\r\\nerror CrowdFunder__CampaignNotRefundable(address _campaignAddress);\\r\\n\\r\\ncontract CrowdFunder {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  event UserAdded(\\r\\n    address indexed _address,\\r\\n    string _username,\\r\\n    string _twitter,\\r\\n    string _email,\\r\\n    string _location,\\r\\n    string _bio\\r\\n  );\\r\\n\\r\\n  event CampaignAdded(\\r\\n    address indexed _campaignAddress,\\r\\n    address indexed _creator,\\r\\n    string _category,\\r\\n    string[] _tags\\r\\n  );\\r\\n\\r\\n  event CampaignFunded(\\r\\n    address indexed _funder,\\r\\n    address indexed _campaignAddress\\r\\n  );\\r\\n\\r\\n  event CampaignShrunk(\\r\\n    address indexed _withdrawer,\\r\\n    address indexed _campaignAddress\\r\\n  );\\r\\n\\r\\n  event CampaignRemoved(\\r\\n    address indexed _campaignAddress\\r\\n  );\\r\\n\\r\\n  event UserHomeAddrAdded(\\r\\n    address _userAddress,\\r\\n    string _homeAddr\\r\\n  );\\r\\n\\r\\n  uint256 public campaignCounter;\\r\\n  mapping (address => Campaign) private campaigns;\\r\\n\\r\\n\\r\\n  modifier isCreator(address _campaignAddress) {\\r\\n    if(campaigns[_campaignAddress].i_creator() != msg.sender){\\r\\n      revert CrowdFunder__NotCreator(msg.sender, _campaignAddress);\\r\\n    }\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  function addUser(\\r\\n    address _address, string memory _username, \\r\\n    string memory _twitter, string memory _email, \\r\\n    string memory _location, string memory _bio\\r\\n    ) public {\\r\\n    emit UserAdded(_address, _username, _twitter, _email, _location, _bio);\\r\\n  }\\r\\n\\r\\n  function addCampaign (\\r\\n    string memory _title, \\r\\n    string memory _description,\\r\\n    string memory _category,\\r\\n    string[] memory _tags, \\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration,\\r\\n    string memory _imageURI,\\r\\n    string memory _campaignURI,\\r\\n    address _linkTokenAddress,\\r\\n    address _upkeepCreatorAddress\\r\\n    ) external {\\r\\n    Campaign newCampaign = new Campaign(\\r\\n      payable(msg.sender), _title, \\r\\n      _description, _category, \\r\\n      _tags, _goalAmount, \\r\\n      _duration, _imageURI, _campaignURI, \\r\\n      _linkTokenAddress, _upkeepCreatorAddress\\r\\n    );\\r\\n    campaigns[address(newCampaign)] = newCampaign;\\r\\n    campaignCounter+=1;\\r\\n    emit CampaignAdded(address(newCampaign), msg.sender, _category, _tags);\\r\\n  }\\r\\n\\r\\n  function donateToCampaign (address _campaignAddress) public payable {\\r\\n    (bool success, ) = _campaignAddress.delegatecall(abi.encodeWithSignature(\\\"donate()\\\"));\\r\\n    if(success){\\r\\n      emit CampaignFunded(msg.sender, _campaignAddress);\\r\\n    }else{\\r\\n      revert CrowdFunder__DonationFailed(_campaignAddress);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function refundFromCampaign(address _campaignAddress, address _donator) public {\\r\\n    (bool success,) = _campaignAddress.delegatecall(abi.encodeWithSignature(\\\"refund(address)\\\", _donator));\\r\\n    if(success){\\r\\n      emit CampaignShrunk(msg.sender, _campaignAddress);\\r\\n    }else{\\r\\n      revert CrowdFunder__RefundFailed(_campaignAddress);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function removeCampaign (address _campaignAddress) public isCreator(_campaignAddress) {\\r\\n    if(uint(campaigns[_campaignAddress].c_state()) == 0){revert CrowdFunder__CampaignStillActive(_campaignAddress);}\\r\\n    delete(campaigns[_campaignAddress]);\\r\\n    campaignCounter-=1;\\r\\n    emit CampaignRemoved(_campaignAddress);\\r\\n  }\\r\\n\\r\\n  function addUserHomeAddr (address _userAddress, string memory _homeAddr) public {\\r\\n    emit UserHomeAddrAdded(_userAddress, _homeAddr);\\r\\n  }\\r\\n}\",\"keccak256\":\"0xe6b22fedf10325a9dc2582f76bf2fa97404240a8dff479dd698028f8fda47b81\",\"license\":\"MIT\"},\"contracts/UpkeepIDConsumer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport {AutomationRegistryInterface, State, Config} from \\\"@chainlink/contracts/src/v0.8/interfaces/AutomationRegistryInterface1_2.sol\\\";\\r\\nimport {LinkTokenInterface} from \\\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\\\";\\r\\n\\r\\ninterface KeeperRegistrarInterface {\\r\\n  function register(\\r\\n    string memory name,\\r\\n    bytes calldata encryptedEmail,\\r\\n    address upkeepContract,\\r\\n    uint32 gasLimit,\\r\\n    address adminAddress,\\r\\n    bytes calldata checkData,\\r\\n    uint96 amount,\\r\\n    uint8 source,\\r\\n    address sender\\r\\n  ) external;\\r\\n}\\r\\n\\r\\ncontract UpkeepIDConsumer {\\r\\n  LinkTokenInterface public immutable i_link;\\r\\n  address public immutable registrar;\\r\\n  AutomationRegistryInterface public immutable i_registry;\\r\\n  bytes4 registerSig = KeeperRegistrarInterface.register.selector;\\r\\n\\r\\n  constructor(\\r\\n    address _link,\\r\\n    address _registrar,\\r\\n    address _registry\\r\\n  ) {\\r\\n    i_link = LinkTokenInterface(_link);\\r\\n    registrar = _registrar;\\r\\n    i_registry = AutomationRegistryInterface(_registry);\\r\\n  }\\r\\n\\r\\n  function registerAndPredictID(\\r\\n    string memory name,\\r\\n    bytes calldata encryptedEmail,\\r\\n    address upkeepContract,\\r\\n    uint32 gasLimit,\\r\\n    address adminAddress,\\r\\n    bytes calldata checkData,\\r\\n    uint96 amount,\\r\\n    uint8 source\\r\\n  ) public returns(uint){\\r\\n    (State memory state, Config memory _c, address[] memory _k) = i_registry.getState();\\r\\n    uint256 oldNonce = state.nonce;\\r\\n    bytes memory payload = abi.encode(\\r\\n      name,\\r\\n      encryptedEmail,\\r\\n      upkeepContract,\\r\\n      gasLimit,\\r\\n      adminAddress,\\r\\n      checkData,\\r\\n      amount,\\r\\n      source,\\r\\n      address(this)\\r\\n    );\\r\\n\\r\\n    i_link.transferAndCall(\\r\\n      registrar,\\r\\n      amount,\\r\\n      bytes.concat(registerSig, payload)\\r\\n    );\\r\\n    (state, _c, _k) = i_registry.getState();\\r\\n    uint256 newNonce = state.nonce;\\r\\n    if (newNonce == oldNonce + 1) {\\r\\n      uint256 upkeepID = uint256(\\r\\n        keccak256(\\r\\n          abi.encodePacked(\\r\\n            blockhash(block.number - 1),\\r\\n            address(i_registry),\\r\\n            uint32(oldNonce)\\r\\n          )\\r\\n        )\\r\\n      );\\r\\n      // DEV - Use the upkeepID however you see fit\\r\\n      return upkeepID;\\r\\n    } else {\\r\\n      revert(\\\"auto-approve disabled\\\");\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0xbdac07cfb6213b5ce65e7b8b9f0be91828c4b0e27be5cc3d8d122610f7b6e3cb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061592b806100206000396000f3fe6080604052600436106200007a5760003560e01c80637dfaeaa311620000555780637dfaeaa314620000fb578063e13e47001462000129578063e4663a5b1462000157578063fca604d71462000185576200007a565b80631a702aa0146200007f578063359c4f3214620000ad5780637c6abc8214620000db575b600080fd5b3480156200008c57600080fd5b50620000ab6004803603810190620000a5919062000c3f565b620001b5565b005b348015620000ba57600080fd5b50620000d96004803603810190620000d3919062000d76565b62000215565b005b620000f96004803603810190620000f3919062000dbd565b620003be565b005b3480156200010857600080fd5b5062000127600480360381019062000121919062000def565b62000559565b005b3480156200013657600080fd5b506200015560048036038101906200014f919062000f8c565b62000598565b005b3480156200016457600080fd5b506200018360048036038101906200017d919062000dbd565b620006f8565b005b3480156200019257600080fd5b506200019d62000a50565b604051620001ac91906200114d565b60405180910390f35b8573ffffffffffffffffffffffffffffffffffffffff167f8a71481c426e212d085148853642cbd73769f57ca8e2a96eca998197465ab416868686868660405162000205959493929190620011fd565b60405180910390a2505050505050565b60008273ffffffffffffffffffffffffffffffffffffffff16826040516024016200024191906200128e565b6040516020818303038152906040527ffa89401a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620002cd9190620012f8565b600060405180830381855af49150503d80600081146200030a576040519150601f19603f3d011682016040523d82523d6000602084013e6200030f565b606091505b5050905080156200037a578273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9054f43c2e3f0a33645e2d3215afde366ee1037949dd258158140d157d8614ce60405160405180910390a3620003b9565b826040517f5bdf89f6000000000000000000000000000000000000000000000000000000008152600401620003b091906200128e565b60405180910390fd5b505050565b60008173ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fed88c68e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620004699190620012f8565b600060405180830381855af49150503d8060008114620004a6576040519150601f19603f3d011682016040523d82523d6000602084013e620004ab565b606091505b50509050801562000516578173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f406c70a06d8422cfeb8281878b74e291f0feca05e5fd54df2cfbdc386611673660405160405180910390a362000555565b816040517ffe5dd8d30000000000000000000000000000000000000000000000000000000081526004016200054c91906200128e565b60405180910390fd5b5050565b7f440065d68f2dccb29aed41dfaf29b5137d728950be75f0f67945debd30068a6282826040516200058c92919062001311565b60405180910390a15050565b6000338b8b8b8b8b8b8b8b8b8b604051620005b39062000a56565b620005c99b9a99989796959493929190620014d2565b604051809103906000f080158015620005e6573d6000803e3d6000fd5b50905080600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000808282546200067b9190620015ec565b925050819055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fd1ef576cbb9cedc698256ae3d2464b38a636f26263382a3c2206c86d7c8c1fcf8b8b604051620006e392919062001649565b60405180910390a35050505050505050505050565b803373ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b145603e6040518163ffffffff1660e01b815260040160206040518083038186803b158015620007b657600080fd5b505afa158015620007cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007f19190620016c9565b73ffffffffffffffffffffffffffffffffffffffff16146200084e5733816040517fd9e20da800000000000000000000000000000000000000000000000000000000815260040162000845929190620016fb565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166360fa9a726040518163ffffffff1660e01b815260040160206040518083038186803b158015620008f657600080fd5b505afa1580156200090b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000931919062001750565b600281111562000946576200094562001782565b5b14156200098c57816040517fdfecfddd0000000000000000000000000000000000000000000000000000000081526004016200098391906200128e565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600160008082825462000a029190620017b1565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fd41d62ed7a46b1f2f4c0a4c0fa40c95bbe14a7d55034ff9817b743d6cb79353660405160405180910390a25050565b60005481565b61410980620017ed83390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000aa58262000a78565b9050919050565b62000ab78162000a98565b811462000ac357600080fd5b50565b60008135905062000ad78162000aac565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000b328262000ae7565b810181811067ffffffffffffffff8211171562000b545762000b5362000af8565b5b80604052505050565b600062000b6962000a64565b905062000b77828262000b27565b919050565b600067ffffffffffffffff82111562000b9a5762000b9962000af8565b5b62000ba58262000ae7565b9050602081019050919050565b82818337600083830152505050565b600062000bd862000bd28462000b7c565b62000b5d565b90508281526020810184848401111562000bf75762000bf662000ae2565b5b62000c0484828562000bb2565b509392505050565b600082601f83011262000c245762000c2362000add565b5b813562000c3684826020860162000bc1565b91505092915050565b60008060008060008060c0878903121562000c5f5762000c5e62000a6e565b5b600062000c6f89828a0162000ac6565b965050602087013567ffffffffffffffff81111562000c935762000c9262000a73565b5b62000ca189828a0162000c0c565b955050604087013567ffffffffffffffff81111562000cc55762000cc462000a73565b5b62000cd389828a0162000c0c565b945050606087013567ffffffffffffffff81111562000cf75762000cf662000a73565b5b62000d0589828a0162000c0c565b935050608087013567ffffffffffffffff81111562000d295762000d2862000a73565b5b62000d3789828a0162000c0c565b92505060a087013567ffffffffffffffff81111562000d5b5762000d5a62000a73565b5b62000d6989828a0162000c0c565b9150509295509295509295565b6000806040838503121562000d905762000d8f62000a6e565b5b600062000da08582860162000ac6565b925050602062000db38582860162000ac6565b9150509250929050565b60006020828403121562000dd65762000dd562000a6e565b5b600062000de68482850162000ac6565b91505092915050565b6000806040838503121562000e095762000e0862000a6e565b5b600062000e198582860162000ac6565b925050602083013567ffffffffffffffff81111562000e3d5762000e3c62000a73565b5b62000e4b8582860162000c0c565b9150509250929050565b600067ffffffffffffffff82111562000e735762000e7262000af8565b5b602082029050602081019050919050565b600080fd5b600062000ea062000e9a8462000e55565b62000b5d565b9050808382526020820190506020840283018581111562000ec65762000ec562000e84565b5b835b8181101562000f1457803567ffffffffffffffff81111562000eef5762000eee62000add565b5b80860162000efe898262000c0c565b8552602085019450505060208101905062000ec8565b5050509392505050565b600082601f83011262000f365762000f3562000add565b5b813562000f4884826020860162000e89565b91505092915050565b6000819050919050565b62000f668162000f51565b811462000f7257600080fd5b50565b60008135905062000f868162000f5b565b92915050565b6000806000806000806000806000806101408b8d03121562000fb35762000fb262000a6e565b5b60008b013567ffffffffffffffff81111562000fd45762000fd362000a73565b5b62000fe28d828e0162000c0c565b9a505060208b013567ffffffffffffffff81111562001006576200100562000a73565b5b620010148d828e0162000c0c565b99505060408b013567ffffffffffffffff81111562001038576200103762000a73565b5b620010468d828e0162000c0c565b98505060608b013567ffffffffffffffff8111156200106a576200106962000a73565b5b620010788d828e0162000f1e565b97505060806200108b8d828e0162000f75565b96505060a06200109e8d828e0162000f75565b95505060c08b013567ffffffffffffffff811115620010c257620010c162000a73565b5b620010d08d828e0162000c0c565b94505060e08b013567ffffffffffffffff811115620010f457620010f362000a73565b5b620011028d828e0162000c0c565b935050610100620011168d828e0162000ac6565b9250506101206200112a8d828e0162000ac6565b9150509295989b9194979a5092959850565b620011478162000f51565b82525050565b60006020820190506200116460008301846200113c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620011a657808201518184015260208101905062001189565b83811115620011b6576000848401525b50505050565b6000620011c9826200116a565b620011d5818562001175565b9350620011e781856020860162001186565b620011f28162000ae7565b840191505092915050565b600060a0820190508181036000830152620012198188620011bc565b905081810360208301526200122f8187620011bc565b90508181036040830152620012458186620011bc565b905081810360608301526200125b8185620011bc565b90508181036080830152620012718184620011bc565b90509695505050505050565b620012888162000a98565b82525050565b6000602082019050620012a560008301846200127d565b92915050565b600081519050919050565b600081905092915050565b6000620012ce82620012ab565b620012da8185620012b6565b9350620012ec81856020860162001186565b80840191505092915050565b6000620013068284620012c1565b915081905092915050565b60006040820190506200132860008301856200127d565b81810360208301526200133c8184620011bc565b90509392505050565b6000819050919050565b6000620013706200136a620013648462000a78565b62001345565b62000a78565b9050919050565b600062001384826200134f565b9050919050565b6000620013988262001377565b9050919050565b620013aa816200138b565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000620013fa826200116a565b620014068185620013dc565b93506200141881856020860162001186565b620014238162000ae7565b840191505092915050565b60006200143c8383620013ed565b905092915050565b6000602082019050919050565b60006200145e82620013b0565b6200146a8185620013bb565b9350836020820285016200147e85620013cc565b8060005b85811015620014c057848403895281516200149e85826200142e565b9450620014ab8362001444565b925060208a0199505060018101905062001482565b50829750879550505050505092915050565b600061016082019050620014ea600083018e6200139f565b8181036020830152620014fe818d620011bc565b9050818103604083015262001514818c620011bc565b905081810360608301526200152a818b620011bc565b9050818103608083015262001540818a62001451565b90506200155160a08301896200113c565b6200156060c08301886200113c565b81810360e0830152620015748187620011bc565b90508181036101008301526200158b8186620011bc565b90506200159d6101208301856200127d565b620015ad6101408301846200127d565b9c9b505050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620015f98262000f51565b9150620016068362000f51565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200163e576200163d620015bd565b5b828201905092915050565b60006040820190508181036000830152620016658185620011bc565b905081810360208301526200167b818462001451565b90509392505050565b6000620016918262000a78565b9050919050565b620016a38162001684565b8114620016af57600080fd5b50565b600081519050620016c38162001698565b92915050565b600060208284031215620016e257620016e162000a6e565b5b6000620016f284828501620016b2565b91505092915050565b60006040820190506200171260008301856200127d565b6200172160208301846200127d565b9392505050565b600381106200173657600080fd5b50565b6000815190506200174a8162001728565b92915050565b60006020828403121562001769576200176862000a6e565b5b6000620017798482850162001739565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000620017be8262000f51565b9150620017cb8362000f51565b925082821015620017e157620017e0620015bd565b5b82820390509291505056fe6101006040526000600a60006101000a81548160ff021916908360028111156200002e576200002d6200036d565b5b02179055503480156200004057600080fd5b5060405162004109380380620041098339818101604052810190620000669190620006d5565b8a73ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508960009080519060200190620000b5929190620001e8565b508860019080519060200190620000ce929190620001e8565b508760029080519060200190620000e7929190620001e8565b5086600590805190602001906200010092919062000279565b50856006819055504260a081815250508460078190555060075460a051620001299190620008cb565b600981905550836003908051906020019062000147929190620001e8565b50826004908051906020019062000160929190620001e8565b5060006008819055508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050505050505050505050506200098d565b828054620001f69062000957565b90600052602060002090601f0160209004810192826200021a576000855562000266565b82601f106200023557805160ff191683800117855562000266565b8280016001018555821562000266579182015b828111156200026557825182559160200191906001019062000248565b5b509050620002759190620002e0565b5090565b828054828255906000526020600020908101928215620002cd579160200282015b82811115620002cc578251829080519060200190620002bb929190620001e8565b50916020019190600101906200029a565b5b509050620002dc9190620002ff565b5090565b5b80821115620002fb576000816000905550600101620002e1565b5090565b5b8082111562000323576000818162000319919062000327565b5060010162000300565b5090565b508054620003359062000957565b6000825580601f106200034957506200036a565b601f016020900490600052602060002090810190620003699190620002e0565b5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003dd82620003b0565b9050919050565b620003ef81620003d0565b8114620003fb57600080fd5b50565b6000815190506200040f81620003e4565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200046a826200041f565b810181811067ffffffffffffffff821117156200048c576200048b62000430565b5b80604052505050565b6000620004a16200039c565b9050620004af82826200045f565b919050565b600067ffffffffffffffff821115620004d257620004d162000430565b5b620004dd826200041f565b9050602081019050919050565b60005b838110156200050a578082015181840152602081019050620004ed565b838111156200051a576000848401525b50505050565b6000620005376200053184620004b4565b62000495565b9050828152602081018484840111156200055657620005556200041a565b5b62000563848285620004ea565b509392505050565b600082601f83011262000583576200058262000415565b5b81516200059584826020860162000520565b91505092915050565b600067ffffffffffffffff821115620005bc57620005bb62000430565b5b602082029050602081019050919050565b600080fd5b6000620005e9620005e3846200059e565b62000495565b905080838252602082019050602084028301858111156200060f576200060e620005cd565b5b835b818110156200065d57805167ffffffffffffffff81111562000638576200063762000415565b5b8086016200064789826200056b565b8552602085019450505060208101905062000611565b5050509392505050565b600082601f8301126200067f576200067e62000415565b5b815162000691848260208601620005d2565b91505092915050565b6000819050919050565b620006af816200069a565b8114620006bb57600080fd5b50565b600081519050620006cf81620006a4565b92915050565b60008060008060008060008060008060006101608c8e031215620006fe57620006fd620003a6565b5b60006200070e8e828f01620003fe565b9b505060208c015167ffffffffffffffff811115620007325762000731620003ab565b5b620007408e828f016200056b565b9a505060408c015167ffffffffffffffff811115620007645762000763620003ab565b5b620007728e828f016200056b565b99505060608c015167ffffffffffffffff811115620007965762000795620003ab565b5b620007a48e828f016200056b565b98505060808c015167ffffffffffffffff811115620007c857620007c7620003ab565b5b620007d68e828f0162000667565b97505060a0620007e98e828f01620006be565b96505060c0620007fc8e828f01620006be565b95505060e08c015167ffffffffffffffff81111562000820576200081f620003ab565b5b6200082e8e828f016200056b565b9450506101008c015167ffffffffffffffff811115620008535762000852620003ab565b5b620008618e828f016200056b565b935050610120620008758e828f01620003fe565b925050610140620008898e828f01620003fe565b9150509295989b509295989b9093969950565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620008d8826200069a565b9150620008e5836200069a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200091d576200091c6200089c565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200097057607f821691505b6020821081141562000987576200098662000928565b5b50919050565b60805160601c60a05160c05160601c60e05160601c6136d762000a3260003960008181610d850152610deb01526000610daa015260008181610c3001526114d801526000818161063701528181610b8f01528181610cfe01528181610edb01528181611082015281816111c2015281816112c50152818161137601528181611566015281816117710152818161192d015281816119e50152611b7c01526136d76000f3fe60806040526004361061019c5760003560e01c806363bd1d4a116100ec578063b145603e1161008a578063e7cf1ab711610064578063e7cf1ab714610583578063ed88c68e146105ac578063f301af42146105b6578063fa89401a146105f85761019c565b8063b145603e14610502578063ce2a05721461052d578063ce845d1d146105585761019c565b806371aac7f9116100c657806371aac7f91461045a57806395086ed11461047157806399a8502d146104ae5780639a913793146104d95761019c565b806363bd1d4a146103c857806369066ae9146103df5780636e04ff0d1461041c5761019c565b806329dcb0cf116101595780634585e33b116101335780634585e33b146103205780634d695bdb146103495780634ef897191461037257806360fa9a721461039d5761019c565b806329dcb0cf146102b35780634278ac8b146102de578063431f9a23146103095761019c565b80630c611f24146101a15780630fb5a6b4146101cc57806315a46ee6146101f75780631910bdc2146102225780631b50ad091461025f5780632636b94514610288575b600080fd5b3480156101ad57600080fd5b506101b6610621565b6040516101c3919061279e565b60405180910390f35b3480156101d857600080fd5b506101e1610a62565b6040516101ee91906127cf565b60405180910390f35b34801561020357600080fd5b5061020c610a68565b6040516102199190612834565b60405180910390f35b34801561022e57600080fd5b5061024960048036038101906102449190612896565b610af6565b6040516102569190612972565b60405180910390f35b34801561026b57600080fd5b50610286600480360381019061028191906129c0565b610b8d565b005b34801561029457600080fd5b5061029d610c62565b6040516102aa91906127cf565b60405180910390f35b3480156102bf57600080fd5b506102c8610c68565b6040516102d591906127cf565b60405180910390f35b3480156102ea57600080fd5b506102f3610c6e565b6040516103009190612834565b60405180910390f35b34801561031557600080fd5b5061031e610cfc565b005b34801561032c57600080fd5b5061034760048036038101906103429190612a52565b610f82565b005b34801561035557600080fd5b50610370600480360381019061036b9190612bcf565b611080565b005b34801561037e57600080fd5b5061038761111f565b6040516103949190612834565b60405180910390f35b3480156103a957600080fd5b506103b26111ad565b6040516103bf9190612c27565b60405180910390f35b3480156103d457600080fd5b506103dd6111c0565b005b3480156103eb57600080fd5b50610406600480360381019061040191906129c0565b6113e7565b6040516104139190612834565b60405180910390f35b34801561042857600080fd5b50610443600480360381019061043e9190612ce3565b611493565b604051610451929190612d9c565b60405180910390f35b34801561046657600080fd5b5061046f611564565b005b34801561047d57600080fd5b5061049860048036038101906104939190612dcc565b6116b0565b6040516104a591906127cf565b60405180910390f35b3480156104ba57600080fd5b506104c36116e1565b6040516104d09190612834565b60405180910390f35b3480156104e557600080fd5b5061050060048036038101906104fb9190612f19565b61176f565b005b34801561050e57600080fd5b5061051761192b565b6040516105249190613060565b60405180910390f35b34801561053957600080fd5b5061054261194f565b60405161054f9190612834565b60405180910390f35b34801561056457600080fd5b5061056d6119dd565b60405161057a91906127cf565b60405180910390f35b34801561058f57600080fd5b506105aa60048036038101906105a591906129c0565b6119e3565b005b6105b4611b0d565b005b3480156105c257600080fd5b506105dd60048036038101906105d891906129c0565b611d68565b6040516105ef9695949392919061307b565b60405180910390f35b34801561060457600080fd5b5061061f600480360381019061061a9190612896565b611ec1565b005b610629612219565b6040518061018001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020016000805461067e90613119565b80601f01602080910402602001604051908101604052809291908181526020018280546106aa90613119565b80156106f75780601f106106cc576101008083540402835291602001916106f7565b820191906000526020600020905b8154815290600101906020018083116106da57829003601f168201915b505050505081526020016001805461070e90613119565b80601f016020809104026020016040519081016040528092919081815260200182805461073a90613119565b80156107875780601f1061075c57610100808354040283529160200191610787565b820191906000526020600020905b81548152906001019060200180831161076a57829003601f168201915b505050505081526020016002805461079e90613119565b80601f01602080910402602001604051908101604052809291908181526020018280546107ca90613119565b80156108175780601f106107ec57610100808354040283529160200191610817565b820191906000526020600020905b8154815290600101906020018083116107fa57829003601f168201915b505050505081526020016005805480602002602001604051908101604052809291908181526020016000905b828210156108ef57838290600052602060002001805461086290613119565b80601f016020809104026020016040519081016040528092919081815260200182805461088e90613119565b80156108db5780601f106108b0576101008083540402835291602001916108db565b820191906000526020600020905b8154815290600101906020018083116108be57829003601f168201915b505050505081526020019060010190610843565b505050508152602001600654815260200160075481526020016008548152602001600a60009054906101000a900460ff16600281111561093257610931612600565b5b81526020016003805461094490613119565b80601f016020809104026020016040519081016040528092919081815260200182805461097090613119565b80156109bd5780601f10610992576101008083540402835291602001916109bd565b820191906000526020600020905b8154815290600101906020018083116109a057829003601f168201915b50505050508152602001600480546109d490613119565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0090613119565b8015610a4d5780601f10610a2257610100808354040283529160200191610a4d565b820191906000526020600020905b815481529060010190602001808311610a3057829003601f168201915b50505050508152602001600954815250905090565b60075481565b60048054610a7590613119565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa190613119565b8015610aee5780601f10610ac357610100808354040283529160200191610aee565b820191906000526020600020905b815481529060010190602001808311610ad157829003601f168201915b505050505081565b6060600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610b8157602002820191906000526020600020905b815481526020019060010190808311610b6d575b50505050509050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c12576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000828254610c24919061317a565b925050819055506007547f0000000000000000000000000000000000000000000000000000000000000000610c59919061317a565b60098190555050565b60065481565b60095481565b60028054610c7b90613119565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca790613119565b8015610cf45780601f10610cc957610100808354040283529160200191610cf4565b820191906000526020600020905b815481529060010190602001808311610cd757829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d81576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f0000000000000000000000000000000000000000000000000000000000000000905060007f0000000000000000000000000000000000000000000000000000000000000000905060008173ffffffffffffffffffffffffffffffffffffffff166370a082317f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610e2691906131df565b60206040518083038186803b158015610e3e57600080fd5b505afa158015610e52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e76919061320f565b11610eb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ead90613288565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166318a9fb8a6000306207a1207f0000000000000000000000000000000000000000000000000000000000000000678ac7230489e8000060006040518763ffffffff1660e01b8152600401610f26969594939291906134ce565b602060405180830381600087803b158015610f4057600080fd5b505af1158015610f54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f78919061320f565b600b819055505050565b6000610f9c60405180602001604052806000815250611493565b50905080610fd6576040517f311f87a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600a60006101000a81548160ff02191690836002811115610ffc57610ffb612600565b5b02179055507f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d3060405161103091906131df565b60405180910390a16006546008541061107b577f5369558c667e962b633128a01c31764d053da51f61d17370d327ed17f77deccc3060405161107291906131df565b60405180910390a15b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611105576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806004908051906020019061111b9291906122a2565b5050565b6001805461112c90613119565b80601f016020809104026020016040519081016040528092919081815260200182805461115890613119565b80156111a55780601f1061117a576101008083540402835291602001916111a5565b820191906000526020600020905b81548152906001019060200180831161118857829003601f168201915b505050505081565b600a60009054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611245576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600281111561125957611258612600565b5b600a60009054906101000a900460ff16600281111561127b5761127a612600565b5b146112b2576040517ffa4021a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006008549050600060088190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16826040516113079061358e565b60006040518083038185875af1925050503d8060008114611344576040519150601f19603f3d011682016040523d82523d6000602084013e611349565b606091505b5050905080156113b1577fba5e837743d81ad0e6deb16089dbb65b549fdda8ad802fd8d4822884d70dc8b27f0000000000000000000000000000000000000000000000000000000000000000306040516113a49291906135a3565b60405180910390a16113e3565b6040517f11456ffb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b600581815481106113f757600080fd5b90600052602060002001600091509050805461141290613119565b80601f016020809104026020016040519081016040528092919081815260200182805461143e90613119565b801561148b5780601f106114605761010080835404028352916020019161148b565b820191906000526020600020905b81548152906001019060200180831161146e57829003601f168201915b505050505081565b6000606060008060028111156114ac576114ab612600565b5b600a60009054906101000a900460ff1660028111156114ce576114cd612600565b5b14905060006007547f00000000000000000000000000000000000000000000000000000000000000004261150291906135cc565b119050600080471190508180156115165750825b801561151f5750805b9450846040518060400160405280600381526020017f307830000000000000000000000000000000000000000000000000000000000081525094509450505050915091565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115e9576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160028111156115fd576115fc612600565b5b600a60009054906101000a900460ff16600281111561161f5761161e612600565b5b1415611657576040517f651e73ae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600a60006101000a81548160ff0219169083600281111561167d5761167c612600565b5b02179055507fb83ebe09f40e9293bdea1d6567fae3175119d3d0ff13c4b4df15994837dd7f5160405160405180910390a1565b600d60205281600052604060002081815481106116cc57600080fd5b90600052602060002001600091509150505481565b600080546116ee90613119565b80601f016020809104026020016040519081016040528092919081815260200182805461171a90613119565b80156117675780601f1061173c57610100808354040283529160200191611767565b820191906000526020600020905b81548152906001019060200180831161174a57829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117f4576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600e889080600181540180825580915050600190039060005260206000200160009091909190915055604051806101000160405280898152602001888152602001878152602001868152602001858152602001848152602001831515815260200182815250600c60008a81526020019081526020016000206000820151816000015560208201518160010190805190602001906118929291906122a2565b5060408201518160020190805190602001906118af9291906122a2565b5060608201518160030190805190602001906118cc929190612328565b506080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e082015181600701908051906020019061191d929190612328565b509050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6003805461195c90613119565b80601f016020809104026020016040519081016040528092919081815260200182805461198890613119565b80156119d55780601f106119aa576101008083540402835291602001916119d5565b820191906000526020600020905b8154815290600101906020018083116119b857829003601f168201915b505050505081565b60085481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a68576040517f778e4c5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600c6000838152602001908152602001600020600001541115611b0a57600c6000828152602001908152602001600020600080820160009055600182016000611ab39190612388565b600282016000611ac39190612388565b600382016000611ad391906123c8565b600482016000905560058201600090556006820160006101000a81549060ff0219169055600782016000611b0791906123c8565b50505b50565b60006002811115611b2157611b20612600565b5b600a60009054906101000a900460ff166002811115611b4357611b42612600565b5b14611b7a576040517ffa4021a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611c00576040517f5b3890a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600c600034815260200190815260200160002060000154118015611c475750600c600034815260200190815260200160002060060160009054906101000a900460ff16155b8015611c6957506000600c600034815260200190815260200160002060050154115b15611c93576001600c600034815260200190815260200160002060050154611c9191906135cc565b505b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020349080600181540180825580915050600190039060005260206000200160009091909190915055611d0e3460085461219b90919063ffffffff16565b6008819055503373ffffffffffffffffffffffffffffffffffffffff167fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca267492355120834600854604051611d5e929190613600565b60405180910390a2565b600c602052806000526040600020600091509050806000015490806001018054611d9190613119565b80601f0160208091040260200160405190810160405280929190818152602001828054611dbd90613119565b8015611e0a5780601f10611ddf57610100808354040283529160200191611e0a565b820191906000526020600020905b815481529060010190602001808311611ded57829003601f168201915b505050505090806002018054611e1f90613119565b80601f0160208091040260200160405190810160405280929190818152602001828054611e4b90613119565b8015611e985780601f10611e6d57610100808354040283529160200191611e98565b820191906000526020600020905b815481529060010190602001808311611e7b57829003601f168201915b5050505050908060040154908060050154908060060160009054906101000a900460ff16905086565b60016002811115611ed557611ed4612600565b5b600a60009054906101000a900460ff166002811115611ef757611ef6612600565b5b1415611f2f576040517f651e73ae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490501415611fb757806040517fc4385859000000000000000000000000000000000000000000000000000000008152600401611fae91906131df565b60405180910390fd5b600061204f600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561204557602002820191906000526020600020905b815481526020019060010190808311612031575b50505050506121b1565b9050600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061209c91906123e9565b8060085410156120d8576040517f52c3b68400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120ed8160085461220390919063ffffffff16565b60088190555060008273ffffffffffffffffffffffffffffffffffffffff16826040516121199061358e565b60006040518083038185875af1925050503d8060008114612156576040519150601f19603f3d011682016040523d82523d6000602084013e61215b565b606091505b5050905080612196576040517f92e9f8f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b600081836121a9919061317a565b905092915050565b600080600090505b82518110156121fd578281815181106121d5576121d4613629565b5b6020026020010151826121e8919061317a565b915080806121f590613658565b9150506121b9565b50919050565b6000818361221191906135cc565b905092915050565b604051806101800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160608152602001606081526020016000815260200160008152602001600081526020016000600281111561228757612286612600565b5b81526020016060815260200160608152602001600081525090565b8280546122ae90613119565b90600052602060002090601f0160209004810192826122d05760008555612317565b82601f106122e957805160ff1916838001178555612317565b82800160010185558215612317579182015b828111156123165782518255916020019190600101906122fb565b5b509050612324919061240a565b5090565b828054828255906000526020600020908101928215612377579160200282015b828111156123765782518290805190602001906123669291906122a2565b5091602001919060010190612348565b5b5090506123849190612427565b5090565b50805461239490613119565b6000825580601f106123a657506123c5565b601f0160209004906000526020600020908101906123c4919061240a565b5b50565b50805460008255906000526020600020908101906123e69190612427565b50565b5080546000825590600052602060002090810190612407919061240a565b50565b5b8082111561242357600081600090555060010161240b565b5090565b5b80821115612447576000818161243e9190612388565b50600101612428565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006124768261244b565b9050919050565b6124868161246b565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156124c65780820151818401526020810190506124ab565b838111156124d5576000848401525b50505050565b6000601f19601f8301169050919050565b60006124f78261248c565b6125018185612497565b93506125118185602086016124a8565b61251a816124db565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061255d83836124ec565b905092915050565b6000602082019050919050565b600061257d82612525565b6125878185612530565b93508360208202850161259985612541565b8060005b858110156125d557848403895281516125b68582612551565b94506125c183612565565b925060208a0199505060018101905061259d565b50829750879550505050505092915050565b6000819050919050565b6125fa816125e7565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106126405761263f612600565b5b50565b60008190506126518261262f565b919050565b600061266182612643565b9050919050565b61267181612656565b82525050565b600061018083016000830151612690600086018261247d565b50602083015184820360208601526126a882826124ec565b915050604083015184820360408601526126c282826124ec565b915050606083015184820360608601526126dc82826124ec565b915050608083015184820360808601526126f68282612572565b91505060a083015161270b60a08601826125f1565b5060c083015161271e60c08601826125f1565b5060e083015161273160e08601826125f1565b50610100830151612746610100860182612668565b5061012083015184820361012086015261276082826124ec565b91505061014083015184820361014086015261277c82826124ec565b9150506101608301516127936101608601826125f1565b508091505092915050565b600060208201905081810360008301526127b88184612677565b905092915050565b6127c9816125e7565b82525050565b60006020820190506127e460008301846127c0565b92915050565b600082825260208201905092915050565b60006128068261248c565b61281081856127ea565b93506128208185602086016124a8565b612829816124db565b840191505092915050565b6000602082019050818103600083015261284e81846127fb565b905092915050565b6000604051905090565b600080fd5b600080fd5b6128738161246b565b811461287e57600080fd5b50565b6000813590506128908161286a565b92915050565b6000602082840312156128ac576128ab612860565b5b60006128ba84828501612881565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006128fb83836125f1565b60208301905092915050565b6000602082019050919050565b600061291f826128c3565b61292981856128ce565b9350612934836128df565b8060005b8381101561296557815161294c88826128ef565b975061295783612907565b925050600181019050612938565b5085935050505092915050565b6000602082019050818103600083015261298c8184612914565b905092915050565b61299d816125e7565b81146129a857600080fd5b50565b6000813590506129ba81612994565b92915050565b6000602082840312156129d6576129d5612860565b5b60006129e4848285016129ab565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612a1257612a116129ed565b5b8235905067ffffffffffffffff811115612a2f57612a2e6129f2565b5b602083019150836001820283011115612a4b57612a4a6129f7565b5b9250929050565b60008060208385031215612a6957612a68612860565b5b600083013567ffffffffffffffff811115612a8757612a86612865565b5b612a93858286016129fc565b92509250509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612adc826124db565b810181811067ffffffffffffffff82111715612afb57612afa612aa4565b5b80604052505050565b6000612b0e612856565b9050612b1a8282612ad3565b919050565b600067ffffffffffffffff821115612b3a57612b39612aa4565b5b612b43826124db565b9050602081019050919050565b82818337600083830152505050565b6000612b72612b6d84612b1f565b612b04565b905082815260208101848484011115612b8e57612b8d612a9f565b5b612b99848285612b50565b509392505050565b600082601f830112612bb657612bb56129ed565b5b8135612bc6848260208601612b5f565b91505092915050565b600060208284031215612be557612be4612860565b5b600082013567ffffffffffffffff811115612c0357612c02612865565b5b612c0f84828501612ba1565b91505092915050565b612c2181612656565b82525050565b6000602082019050612c3c6000830184612c18565b92915050565b600067ffffffffffffffff821115612c5d57612c5c612aa4565b5b612c66826124db565b9050602081019050919050565b6000612c86612c8184612c42565b612b04565b905082815260208101848484011115612ca257612ca1612a9f565b5b612cad848285612b50565b509392505050565b600082601f830112612cca57612cc96129ed565b5b8135612cda848260208601612c73565b91505092915050565b600060208284031215612cf957612cf8612860565b5b600082013567ffffffffffffffff811115612d1757612d16612865565b5b612d2384828501612cb5565b91505092915050565b60008115159050919050565b612d4181612d2c565b82525050565b600081519050919050565b600082825260208201905092915050565b6000612d6e82612d47565b612d788185612d52565b9350612d888185602086016124a8565b612d91816124db565b840191505092915050565b6000604082019050612db16000830185612d38565b8181036020830152612dc38184612d63565b90509392505050565b60008060408385031215612de357612de2612860565b5b6000612df185828601612881565b9250506020612e02858286016129ab565b9150509250929050565b600067ffffffffffffffff821115612e2757612e26612aa4565b5b602082029050602081019050919050565b6000612e4b612e4684612e0c565b612b04565b90508083825260208201905060208402830185811115612e6e57612e6d6129f7565b5b835b81811015612eb557803567ffffffffffffffff811115612e9357612e926129ed565b5b808601612ea08982612ba1565b85526020850194505050602081019050612e70565b5050509392505050565b600082601f830112612ed457612ed36129ed565b5b8135612ee4848260208601612e38565b91505092915050565b612ef681612d2c565b8114612f0157600080fd5b50565b600081359050612f1381612eed565b92915050565b600080600080600080600080610100898b031215612f3a57612f39612860565b5b6000612f488b828c016129ab565b985050602089013567ffffffffffffffff811115612f6957612f68612865565b5b612f758b828c01612ba1565b975050604089013567ffffffffffffffff811115612f9657612f95612865565b5b612fa28b828c01612ba1565b965050606089013567ffffffffffffffff811115612fc357612fc2612865565b5b612fcf8b828c01612ebf565b9550506080612fe08b828c016129ab565b94505060a0612ff18b828c016129ab565b93505060c06130028b828c01612f04565b92505060e089013567ffffffffffffffff81111561302357613022612865565b5b61302f8b828c01612ebf565b9150509295985092959890939650565b600061304a8261244b565b9050919050565b61305a8161303f565b82525050565b60006020820190506130756000830184613051565b92915050565b600060c08201905061309060008301896127c0565b81810360208301526130a281886127fb565b905081810360408301526130b681876127fb565b90506130c560608301866127c0565b6130d260808301856127c0565b6130df60a0830184612d38565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061313157607f821691505b60208210811415613145576131446130ea565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613185826125e7565b9150613190836125e7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156131c5576131c461314b565b5b828201905092915050565b6131d98161246b565b82525050565b60006020820190506131f460008301846131d0565b92915050565b60008151905061320981612994565b92915050565b60006020828403121561322557613224612860565b5b6000613233848285016131fa565b91505092915050565b7f6e6f2066756e6473000000000000000000000000000000000000000000000000600082015250565b60006132726008836127ea565b915061327d8261323c565b602082019050919050565b600060208201905081810360008301526132a181613265565b9050919050565b60008190508160005260206000209050919050565b600081546132ca81613119565b6132d481866127ea565b945060018216600081146132ef576001811461330157613334565b60ff1983168652602086019350613334565b61330a856132a8565b60005b8381101561332c5781548189015260018201915060208101905061330d565b808801955050505b50505092915050565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b6000613373600283612d52565b915061337e8261333d565b602082019050919050565b6000819050919050565b600063ffffffff82169050919050565b6000819050919050565b60006133c86133c36133be84613389565b6133a3565b613393565b9050919050565b6133d8816133ad565b82525050565b60006133f96133f46133ef8461244b565b6133a3565b61244b565b9050919050565b600061340b826133de565b9050919050565b600061341d82613400565b9050919050565b61342d81613412565b82525050565b6000819050919050565b60006bffffffffffffffffffffffff82169050919050565b600061347061346b61346684613433565b6133a3565b61343d565b9050919050565b61348081613455565b82525050565b6000819050919050565b600060ff82169050919050565b60006134b86134b36134ae84613486565b6133a3565b613490565b9050919050565b6134c88161349d565b82525050565b60006101008201905081810360008301526134e981896132bd565b905081810360208301526134fc81613366565b905061350b60408301886131d0565b61351860608301876133cf565b6135256080830186613424565b81810360a083015261353681613366565b905061354560c0830185613477565b61355260e08301846134bf565b979650505050505050565b600081905092915050565b50565b600061357860008361355d565b915061358382613568565b600082019050919050565b60006135998261356b565b9150819050919050565b60006040820190506135b86000830185613424565b6135c560208301846131d0565b9392505050565b60006135d7826125e7565b91506135e2836125e7565b9250828210156135f5576135f461314b565b5b828203905092915050565b600060408201905061361560008301856127c0565b61362260208301846127c0565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000613663826125e7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156136965761369561314b565b5b60018201905091905056fea26469706673582212206629015e40e115025a60e14c1ca9a6eeaeebc6c0aba306e833ee0ac5d68f149b64736f6c63430008080033a2646970667358221220bf20eff11a2c82be1ee2a658de33c1613657948212edac7d924580030cc23fa864736f6c63430008080033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1470,
        "contract": "contracts/CrowdFunder.sol:CrowdFunder",
        "label": "campaignCounter",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 1475,
        "contract": "contracts/CrowdFunder.sol:CrowdFunder",
        "label": "campaigns",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_contract(Campaign)1392)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(Campaign)1392": {
        "encoding": "inplace",
        "label": "contract Campaign",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(Campaign)1392)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract Campaign)",
        "numberOfBytes": "32",
        "value": "t_contract(Campaign)1392"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}