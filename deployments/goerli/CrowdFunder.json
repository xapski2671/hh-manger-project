{
  "address": "0x358e07967096934531060491B9794dD9de97b788",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__CampaignStillActive",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__DonationFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__NotCreator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CrowdFunder__RefundFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "CampaignAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignShrunk",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_twitter",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_bio",
          "type": "string"
        }
      ],
      "name": "UserAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_tags",
          "type": "string[]"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_imageURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_campaignURI",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_linkTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_upkeepCreatorAddress",
          "type": "address"
        }
      ],
      "name": "addCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_twitter",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_bio",
          "type": "string"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "campaignCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "donateToCampaign",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "refundFromCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "removeCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x25d9f800f0d803540a13f9b0037ad1b973d174694f093dfc10ef9e855f140b4a",
  "receipt": {
    "to": null,
    "from": "0x4B5a2B7b5438A79797698570AC9D45155D3Bb0e3",
    "contractAddress": "0x358e07967096934531060491B9794dD9de97b788",
    "transactionIndex": 55,
    "gasUsed": "4306273",
    "logsBloom": "0x
    "blockHash": "0x4c3f05410b00adcfd3753fadfc80409dd94a1a815620992519df4026ec710d09",
    "transactionHash": "0x25d9f800f0d803540a13f9b0037ad1b973d174694f093dfc10ef9e855f140b4a",
    "logs": [],
    "blockNumber": 8573617,
    "cumulativeGasUsed": "10282847",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 7,
  "solcInputHash": "3fda1c323a7231dc83e4f7b0a5ee7f76",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__CampaignStillActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__DonationFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__NotCreator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CrowdFunder__RefundFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"CampaignAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignShrunk\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_twitter\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"}],\"name\":\"UserAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_tags\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_imageURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_campaignURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_linkTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_upkeepCreatorAddress\",\"type\":\"address\"}],\"name\":\"addCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_twitter\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"}],\"name\":\"addUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"campaignCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"donateToCampaign\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"refundFromCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"removeCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrowdFunder.sol\":\"CrowdFunder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AutomationRegistryInterface1_2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @notice config of the registry\\n * @dev only used in params and return values\\n * @member paymentPremiumPPB payment premium rate oracles receive on top of\\n * being reimbursed for gas, measured in parts per billion\\n * @member flatFeeMicroLink flat fee paid to oracles for performing upkeeps,\\n * priced in MicroLink; can be used in conjunction with or independently of\\n * paymentPremiumPPB\\n * @member blockCountPerTurn number of blocks each oracle has during their turn to\\n * perform upkeep before it will be the next keeper's turn to submit\\n * @member checkGasLimit gas limit when checking for upkeep\\n * @member stalenessSeconds number of seconds that is allowed for feed data to\\n * be stale before switching to the fallback pricing\\n * @member gasCeilingMultiplier multiplier to apply to the fast gas feed price\\n * when calculating the payment ceiling for keepers\\n * @member minUpkeepSpend minimum LINK that an upkeep must spend before cancelling\\n * @member maxPerformGas max executeGas allowed for an upkeep on this registry\\n * @member fallbackGasPrice gas price used if the gas price feed is stale\\n * @member fallbackLinkPrice LINK price used if the LINK price feed is stale\\n * @member transcoder address of the transcoder contract\\n * @member registrar address of the registrar contract\\n */\\nstruct Config {\\n  uint32 paymentPremiumPPB;\\n  uint32 flatFeeMicroLink; // min 0.000001 LINK, max 4294 LINK\\n  uint24 blockCountPerTurn;\\n  uint32 checkGasLimit;\\n  uint24 stalenessSeconds;\\n  uint16 gasCeilingMultiplier;\\n  uint96 minUpkeepSpend;\\n  uint32 maxPerformGas;\\n  uint256 fallbackGasPrice;\\n  uint256 fallbackLinkPrice;\\n  address transcoder;\\n  address registrar;\\n}\\n\\n/**\\n * @notice state of the registry\\n * @dev only used in params and return values\\n * @member nonce used for ID generation\\n * @member ownerLinkBalance withdrawable balance of LINK by contract owner\\n * @member expectedLinkBalance the expected balance of LINK of the registry\\n * @member numUpkeeps total number of upkeeps on the registry\\n */\\nstruct State {\\n  uint32 nonce;\\n  uint96 ownerLinkBalance;\\n  uint256 expectedLinkBalance;\\n  uint256 numUpkeeps;\\n}\\n\\ninterface AutomationRegistryBaseInterface {\\n  function registerUpkeep(\\n    address target,\\n    uint32 gasLimit,\\n    address admin,\\n    bytes calldata checkData\\n  ) external returns (uint256 id);\\n\\n  function performUpkeep(uint256 id, bytes calldata performData) external returns (bool success);\\n\\n  function cancelUpkeep(uint256 id) external;\\n\\n  function addFunds(uint256 id, uint96 amount) external;\\n\\n  function setUpkeepGasLimit(uint256 id, uint32 gasLimit) external;\\n\\n  function getUpkeep(uint256 id)\\n    external\\n    view\\n    returns (\\n      address target,\\n      uint32 executeGas,\\n      bytes memory checkData,\\n      uint96 balance,\\n      address lastKeeper,\\n      address admin,\\n      uint64 maxValidBlocknumber,\\n      uint96 amountSpent\\n    );\\n\\n  function getActiveUpkeepIDs(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  function getKeeperInfo(address query)\\n    external\\n    view\\n    returns (\\n      address payee,\\n      bool active,\\n      uint96 balance\\n    );\\n\\n  function getState()\\n    external\\n    view\\n    returns (\\n      State memory,\\n      Config memory,\\n      address[] memory\\n    );\\n}\\n\\n/**\\n * @dev The view methods are not actually marked as view in the implementation\\n * but we want them to be easily queried off-chain. Solidity will not compile\\n * if we actually inherit from this interface, so we document it here.\\n */\\ninterface AutomationRegistryInterface is AutomationRegistryBaseInterface {\\n  function checkUpkeep(uint256 upkeepId, address from)\\n    external\\n    view\\n    returns (\\n      bytes memory performData,\\n      uint256 maxLinkPayment,\\n      uint256 gasLimit,\\n      int256 gasWei,\\n      int256 linkEth\\n    );\\n}\\n\\ninterface AutomationRegistryExecutableInterface is AutomationRegistryBaseInterface {\\n  function checkUpkeep(uint256 upkeepId, address from)\\n    external\\n    returns (\\n      bytes memory performData,\\n      uint256 maxLinkPayment,\\n      uint256 gasLimit,\\n      uint256 adjustedGasWei,\\n      uint256 linkEth\\n    );\\n}\\n\",\"keccak256\":\"0xc61d747194f2efd476204f9cf138f4028166d4723960fd66c7d316625ebe3ff6\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Campaign.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\nimport \\\"./UpkeepIDConsumer.sol\\\";\\r\\n\\r\\n// errors\\r\\nerror Campaign__NotInC_State();\\r\\nerror Campaign__NotCreator(address _address);\\r\\nerror Campaign__DonatorIsCreator(address _address);\\r\\nerror Campaign__PayoutFailed();\\r\\nerror Campaign__NoDonationsHere(address _donatorAddress);\\r\\nerror Campaign__RefundFailed();\\r\\nerror Campaign__UpkeepNotNeeded();\\r\\nerror Campaign__AlreadyExpired(address _campaignAddress);\\r\\nerror Campaign__NotRefundable(address _campaignAddress);\\r\\nerror Campaign__CampaignBankrupt(address _campaignAddress);\\r\\n\\r\\n\\r\\ncontract Campaign is KeeperCompatibleInterface{\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  // enums\\r\\n  enum C_State {\\r\\n    Fundraising,\\r\\n    Expired,\\r\\n    Canceled\\r\\n  }\\r\\n\\r\\n  // c_state variables\\r\\n  address payable immutable public i_creator;\\r\\n  string public s_title;\\r\\n  string public s_description;\\r\\n  string public s_category;\\r\\n  string public s_imageURI;\\r\\n  string public s_campaignURI;\\r\\n  string[] public s_tags;\\r\\n  uint256 public goalAmount;\\r\\n  uint256 public duration;\\r\\n  uint256 public currentBalance;\\r\\n  uint256 private immutable i_lastTimeStamp;\\r\\n  uint256 private immutable i_maxTimeStamp;\\r\\n  C_State public c_state = C_State.Fundraising; // default c_state\\r\\n  mapping (address => uint256) public donations;\\r\\n  address private immutable i_linkTokenAddress;\\r\\n  address private immutable i_upkeepCreatorAddress;\\r\\n  uint256 private rId;\\r\\n\\r\\n  struct CampaignObject {\\r\\n    address i_creator;\\r\\n    string s_title;\\r\\n    string s_description;\\r\\n    string s_category;\\r\\n    string[] s_tags;\\r\\n    uint256 goalAmount;\\r\\n    uint256 duration;\\r\\n    uint256 currentBalance;\\r\\n    C_State currentC_State;\\r\\n    string s_imageURI;\\r\\n    string s_campaignURI;\\r\\n    uint256 i_lastTimeStamp;\\r\\n  }\\r\\n\\r\\n\\r\\n  // events\\r\\n  event FundingRecieved (\\r\\n    address indexed contributor,\\r\\n    uint256 amount,\\r\\n    uint256 currentBalance\\r\\n  );\\r\\n  event CreatorPaid(address creator, address campaignAddress);\\r\\n  event CampaignSuccessful(address campaignAddress);\\r\\n  event CampaignExpired(address campaignAddress);\\r\\n  event CampaignCanceled();\\r\\n\\r\\n\\r\\n  // modifiers\\r\\n  modifier isCreator() {\\r\\n    if(msg.sender != i_creator){revert Campaign__NotCreator(msg.sender);}\\r\\n    _;\\r\\n  }\\r\\n\\r\\n\\r\\n  constructor (\\r\\n    address _creator,\\r\\n    string memory _title,\\r\\n    string memory _description,\\r\\n    string memory _category,\\r\\n    string[] memory _tags,\\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration,\\r\\n    string memory _imageURI,\\r\\n    string memory _campaignURI,\\r\\n    address _linkTokenAddress,\\r\\n    address _upkeepCreatorAddress\\r\\n  ) {\\r\\n    i_creator = payable(_creator);\\r\\n    s_title = _title;\\r\\n    s_description = _description;\\r\\n    s_category = _category;\\r\\n    s_tags = _tags;\\r\\n    goalAmount = _goalAmount;\\r\\n    i_lastTimeStamp = block.timestamp;\\r\\n    i_maxTimeStamp = i_lastTimeStamp + 5184000; // 60days\\r\\n    if(_duration > (i_maxTimeStamp.sub(i_lastTimeStamp))){\\r\\n      duration = i_maxTimeStamp.sub(i_lastTimeStamp);\\r\\n    }else{\\r\\n      duration = _duration;\\r\\n    }\\r\\n    s_imageURI = _imageURI;\\r\\n    s_campaignURI = _campaignURI;\\r\\n    currentBalance = 0;\\r\\n    i_linkTokenAddress = _linkTokenAddress;\\r\\n    i_upkeepCreatorAddress = _upkeepCreatorAddress;\\r\\n  }\\r\\n\\r\\n  function timeBox() public {\\r\\n    UpkeepIDConsumer newUpkeepCreator = UpkeepIDConsumer(i_upkeepCreatorAddress);\\r\\n    LinkTokenInterface token = LinkTokenInterface(i_linkTokenAddress);\\r\\n    if(token.balanceOf(i_upkeepCreatorAddress) <= 0){revert(\\\"no funds\\\");}\\r\\n    rId = newUpkeepCreator.registerAndPredictID(s_title, \\\"0x\\\", address(this), 500000, i_creator, \\\"0x\\\", 10000000000000000000, 0);\\r\\n  }\\r\\n\\r\\n  function donate() external payable {\\r\\n    if(c_state != C_State.Fundraising){revert Campaign__NotInC_State();}\\r\\n    if (msg.sender == i_creator){revert Campaign__DonatorIsCreator(msg.sender);}\\r\\n    donations[msg.sender] = donations[msg.sender].add(msg.value);\\r\\n    currentBalance = currentBalance.add(msg.value);\\r\\n    emit FundingRecieved(msg.sender, msg.value, currentBalance);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev this is the function chainlink keepers calls\\r\\n    chekupkeep returns true to trigger the action after the interval has passed\\r\\n   */\\r\\n  function checkUpkeep(bytes memory /**checkData */) public view override\\r\\n  returns (bool upkeepNeeded, bytes memory /**performData */) \\r\\n  {\\r\\n    bool isOpen = c_state == C_State.Fundraising;\\r\\n    bool timePassed = ((block.timestamp - i_lastTimeStamp) > duration);\\r\\n    bool hasBalance = address(this).balance > 0;\\r\\n    upkeepNeeded = (timePassed && isOpen && hasBalance) ;\\r\\n    return (upkeepNeeded, \\\"0x0\\\");\\r\\n  }\\r\\n\\r\\n  function performUpkeep(bytes calldata /**performData */) external override {\\r\\n    (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n    if(!upkeepNeeded){revert Campaign__UpkeepNotNeeded();}\\r\\n    c_state = C_State.Expired;\\r\\n    emit CampaignExpired(address(this));\\r\\n    if(currentBalance >= goalAmount){\\r\\n      emit CampaignSuccessful(address(this));\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function payout() public isCreator {\\r\\n    if(c_state != C_State.Expired){revert Campaign__NotInC_State();}\\r\\n    uint256 totalRaised = currentBalance;\\r\\n    currentBalance = 0;\\r\\n    (bool success, ) = i_creator.call{value: totalRaised}(\\\"\\\");\\r\\n    if(success){\\r\\n      emit CreatorPaid(i_creator, address(this));\\r\\n    }\\r\\n    else{revert Campaign__PayoutFailed();}\\r\\n  }\\r\\n\\r\\n  function refund(address _donator) public {\\r\\n    if(c_state == C_State.Expired){revert Campaign__AlreadyExpired(address(this));}\\r\\n    if(donations[_donator] <= 0){revert Campaign__NoDonationsHere(_donator);}\\r\\n    uint256 amountToRefund = donations[_donator];\\r\\n    donations[_donator] = 0;\\r\\n    if(currentBalance < amountToRefund){revert Campaign__CampaignBankrupt(address(this));}\\r\\n    currentBalance = currentBalance.sub(amountToRefund);\\r\\n    (bool success, ) = payable(_donator).call{value: amountToRefund}(\\\"\\\");\\r\\n    if(!success){revert Campaign__RefundFailed();}\\r\\n  }\\r\\n\\r\\n  function endCampaign() public isCreator {\\r\\n    if(c_state == C_State.Expired){revert Campaign__AlreadyExpired(address(this));}\\r\\n    c_state = C_State.Canceled;\\r\\n    emit CampaignCanceled();\\r\\n  }\\r\\n\\r\\n  // update functions\\r\\n  function updateGoalAmount(uint256 _newGoalAmount) public isCreator {\\r\\n    goalAmount = _newGoalAmount;\\r\\n  }\\r\\n\\r\\n  function updateDuration(uint256 _additionalTime) public isCreator {\\r\\n    if((_additionalTime + duration) > (i_maxTimeStamp.sub(i_lastTimeStamp))){\\r\\n      duration = i_maxTimeStamp.sub(i_lastTimeStamp); // 60days\\r\\n    }\\r\\n    else{\\r\\n      duration += _additionalTime;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function updateCampaignURI(string memory _campaignURI) public isCreator {\\r\\n    s_campaignURI = _campaignURI;\\r\\n  }\\r\\n  \\r\\n\\r\\n  // getter functions\\r\\n  function getDonations(address _donator) public view returns(uint256) {\\r\\n    return donations[_donator];\\r\\n  }\\r\\n\\r\\n  function getCampaignDetails() public view returns(CampaignObject memory) {\\r\\n    return CampaignObject(\\r\\n      i_creator,\\r\\n      s_title,\\r\\n      s_description,\\r\\n      s_category,\\r\\n      s_tags,\\r\\n      goalAmount,\\r\\n      duration,\\r\\n      currentBalance,\\r\\n      c_state,\\r\\n      s_imageURI,\\r\\n      s_campaignURI,\\r\\n      i_lastTimeStamp\\r\\n    );\\r\\n  }\\r\\n}\",\"keccak256\":\"0xc6873ce26ffa241b77afcd7e3e230a8ad27079d9532f316c8097de21262c7e68\",\"license\":\"MIT\"},\"contracts/CrowdFunder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"./Campaign.sol\\\";\\r\\n\\r\\n// errors\\r\\nerror CrowdFunder__NotCreator(address _caller, address _campaignAddress);\\r\\nerror CrowdFunder__CampaignStillActive(address _campaignAddress);\\r\\nerror CrowdFunder__DonationFailed(address _campaignAddress);\\r\\nerror CrowdFunder__RefundFailed(address _campaignAddress);\\r\\nerror CrowdFunder__CampaignNotRefundable(address _campaignAddress);\\r\\n\\r\\ncontract CrowdFunder {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  event UserAdded(\\r\\n    address indexed _address,\\r\\n    string _username,\\r\\n    string _twitter,\\r\\n    string _email,\\r\\n    string _bio\\r\\n  );\\r\\n\\r\\n  event CampaignAdded(\\r\\n    address indexed _campaignAddress,\\r\\n    address indexed _creator\\r\\n  );\\r\\n\\r\\n  event CampaignFunded(\\r\\n    address indexed _funder,\\r\\n    address indexed _campaignAddress\\r\\n  );\\r\\n\\r\\n  event CampaignShrunk(\\r\\n    address indexed _withdrawer,\\r\\n    address indexed _campaignAddress\\r\\n  );\\r\\n\\r\\n  event CampaignRemoved(\\r\\n    address indexed _campaignAddress\\r\\n  );\\r\\n\\r\\n  uint256 public campaignCounter;\\r\\n  mapping (address => Campaign) campaigns;\\r\\n\\r\\n\\r\\n  modifier isCreator(address _campaignAddress) {\\r\\n    if(campaigns[_campaignAddress].i_creator() != msg.sender){\\r\\n      revert CrowdFunder__NotCreator(msg.sender, _campaignAddress);\\r\\n    }\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  function addUser(address _address, string memory _username, string memory _twitter, string memory _email, string memory _bio) public {\\r\\n    emit UserAdded(_address, _username, _twitter, _email, _bio);\\r\\n  }\\r\\n\\r\\n  function addCampaign (\\r\\n    string memory _title, \\r\\n    string memory _description,\\r\\n    string memory _category,\\r\\n    string[] memory _tags, \\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration,\\r\\n    string memory _imageURI,\\r\\n    string memory _campaignURI,\\r\\n    address _linkTokenAddress,\\r\\n    address _upkeepCreatorAddress\\r\\n    ) external {\\r\\n    Campaign newCampaign = new Campaign(\\r\\n      payable(msg.sender), _title, \\r\\n      _description, _category, \\r\\n      _tags, _goalAmount, \\r\\n      _duration, _imageURI, _campaignURI, \\r\\n      _linkTokenAddress, _upkeepCreatorAddress\\r\\n    );\\r\\n    campaigns[address(newCampaign)] = newCampaign;\\r\\n    campaignCounter+=1;\\r\\n    emit CampaignAdded(address(newCampaign), msg.sender);\\r\\n  }\\r\\n\\r\\n  function donateToCampaign (address _campaignAddress) public payable {\\r\\n    (bool success, ) = _campaignAddress.delegatecall(abi.encodeWithSignature(\\\"donate()\\\"));\\r\\n    if(success){\\r\\n      emit CampaignFunded(msg.sender, _campaignAddress);\\r\\n    }else{\\r\\n      revert CrowdFunder__DonationFailed(_campaignAddress);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function refundFromCampaign(address _campaignAddress, address _donator) public {\\r\\n    (bool success,) = _campaignAddress.delegatecall(abi.encodeWithSignature(\\\"refund(address)\\\", _donator));\\r\\n    if(success){\\r\\n      emit CampaignShrunk(msg.sender, _campaignAddress);\\r\\n    }else{\\r\\n      revert CrowdFunder__RefundFailed(_campaignAddress);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function removeCampaign (address _campaignAddress) public isCreator(_campaignAddress) {\\r\\n    if(uint(campaigns[_campaignAddress].c_state()) == 0){revert CrowdFunder__CampaignStillActive(_campaignAddress);}\\r\\n    delete(campaigns[_campaignAddress]);\\r\\n    campaignCounter-=1;\\r\\n    emit CampaignRemoved(_campaignAddress);\\r\\n  }\\r\\n}\",\"keccak256\":\"0x6c91bb2f91900d560329277433bb2ca31bc040bf4f206d2bc0df8f1b0182b097\",\"license\":\"MIT\"},\"contracts/UpkeepIDConsumer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport {AutomationRegistryInterface, State, Config} from \\\"@chainlink/contracts/src/v0.8/interfaces/AutomationRegistryInterface1_2.sol\\\";\\r\\nimport {LinkTokenInterface} from \\\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\\\";\\r\\n\\r\\ninterface KeeperRegistrarInterface {\\r\\n  function register(\\r\\n    string memory name,\\r\\n    bytes calldata encryptedEmail,\\r\\n    address upkeepContract,\\r\\n    uint32 gasLimit,\\r\\n    address adminAddress,\\r\\n    bytes calldata checkData,\\r\\n    uint96 amount,\\r\\n    uint8 source,\\r\\n    address sender\\r\\n  ) external;\\r\\n}\\r\\n\\r\\ncontract UpkeepIDConsumer {\\r\\n  LinkTokenInterface public immutable i_link;\\r\\n  address public immutable registrar;\\r\\n  AutomationRegistryInterface public immutable i_registry;\\r\\n  bytes4 registerSig = KeeperRegistrarInterface.register.selector;\\r\\n\\r\\n  constructor(\\r\\n    address _link,\\r\\n    address _registrar,\\r\\n    address _registry\\r\\n  ) {\\r\\n    i_link = LinkTokenInterface(_link);\\r\\n    registrar = _registrar;\\r\\n    i_registry = AutomationRegistryInterface(_registry);\\r\\n  }\\r\\n\\r\\n  function registerAndPredictID(\\r\\n    string memory name,\\r\\n    bytes calldata encryptedEmail,\\r\\n    address upkeepContract,\\r\\n    uint32 gasLimit,\\r\\n    address adminAddress,\\r\\n    bytes calldata checkData,\\r\\n    uint96 amount,\\r\\n    uint8 source\\r\\n  ) public returns(uint){\\r\\n    (State memory state, Config memory _c, address[] memory _k) = i_registry.getState();\\r\\n    uint256 oldNonce = state.nonce;\\r\\n    bytes memory payload = abi.encode(\\r\\n      name,\\r\\n      encryptedEmail,\\r\\n      upkeepContract,\\r\\n      gasLimit,\\r\\n      adminAddress,\\r\\n      checkData,\\r\\n      amount,\\r\\n      source,\\r\\n      address(this)\\r\\n    );\\r\\n\\r\\n    i_link.transferAndCall(\\r\\n      registrar,\\r\\n      amount,\\r\\n      bytes.concat(registerSig, payload)\\r\\n    );\\r\\n    (state, _c, _k) = i_registry.getState();\\r\\n    uint256 newNonce = state.nonce;\\r\\n    if (newNonce == oldNonce + 1) {\\r\\n      uint256 upkeepID = uint256(\\r\\n        keccak256(\\r\\n          abi.encodePacked(\\r\\n            blockhash(block.number - 1),\\r\\n            address(i_registry),\\r\\n            uint32(oldNonce)\\r\\n          )\\r\\n        )\\r\\n      );\\r\\n      // DEV - Use the upkeepID however you see fit\\r\\n      return upkeepID;\\r\\n    } else {\\r\\n      revert(\\\"auto-approve disabled\\\");\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0xbdac07cfb6213b5ce65e7b8b9f0be91828c4b0e27be5cc3d8d122610f7b6e3cb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106200005c5760003560e01c8063359c4f3214620000615780637c6abc82146200008f578063cd274a4014620000af578063e13e470014620000dd578063e4663a5b146200010b578063fca604d71462000139575b600080fd5b3480156200006e57600080fd5b506200008d600480360381019062000087919062000a40565b62000169565b005b620000ad6004803603810190620000a7919062000a87565b62000312565b005b348015620000bc57600080fd5b50620000db6004803603810190620000d5919062000c1b565b620004ad565b005b348015620000ea57600080fd5b5062000109600480360381019062000103919062000e56565b6200050a565b005b3480156200011857600080fd5b5062000137600480360381019062000131919062000a87565b6200065b565b005b3480156200014657600080fd5b5062000151620009b3565b60405162000160919062001017565b60405180910390f35b60008273ffffffffffffffffffffffffffffffffffffffff168260405160240162000195919062001045565b6040516020818303038152906040527ffa89401a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620002219190620010e5565b600060405180830381855af49150503d80600081146200025e576040519150601f19603f3d011682016040523d82523d6000602084013e62000263565b606091505b505090508015620002ce578273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9054f43c2e3f0a33645e2d3215afde366ee1037949dd258158140d157d8614ce60405160405180910390a36200030d565b826040517f5bdf89f600000000000000000000000000000000000000000000000000000000815260040162000304919062001045565b60405180910390fd5b505050565b60008173ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fed88c68e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620003bd9190620010e5565b600060405180830381855af49150503d8060008114620003fa576040519150601f19603f3d011682016040523d82523d6000602084013e620003ff565b606091505b5050905080156200046a578173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f406c70a06d8422cfeb8281878b74e291f0feca05e5fd54df2cfbdc386611673660405160405180910390a3620004a9565b816040517ffe5dd8d3000000000000000000000000000000000000000000000000000000008152600401620004a0919062001045565b60405180910390fd5b5050565b8473ffffffffffffffffffffffffffffffffffffffff167f10bb073e1ce0977d8bf7b641de8a59b02dd9c9d1c4badc9b30e5a48ac9fc8cb985858585604051620004fb94939291906200115b565b60405180910390a25050505050565b6000338b8b8b8b8b8b8b8b8b8b6040516200052590620009b9565b6200053b9b9a9998979695949392919062001351565b604051809103906000f08015801562000558573d6000803e3d6000fd5b50905080600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600080828254620005ed91906200146b565b925050819055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fdefe27ab84ae3a3a85d246b3742cb3c20f74342ed74c19490dba388acfc6579f60405160405180910390a35050505050505050505050565b803373ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b145603e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200071957600080fd5b505afa1580156200072e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200075491906200150d565b73ffffffffffffffffffffffffffffffffffffffff1614620007b15733816040517fd9e20da8000000000000000000000000000000000000000000000000000000008152600401620007a89291906200153f565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166360fa9a726040518163ffffffff1660e01b815260040160206040518083038186803b1580156200085957600080fd5b505afa1580156200086e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000894919062001594565b6002811115620008a957620008a8620015c6565b5b1415620008ef57816040517fdfecfddd000000000000000000000000000000000000000000000000000000008152600401620008e6919062001045565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600080828254620009659190620015f5565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fd41d62ed7a46b1f2f4c0a4c0fa40c95bbe14a7d55034ff9817b743d6cb79353660405160405180910390a25050565b60005481565b613705806200163183390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a0882620009db565b9050919050565b62000a1a81620009fb565b811462000a2657600080fd5b50565b60008135905062000a3a8162000a0f565b92915050565b6000806040838503121562000a5a5762000a59620009d1565b5b600062000a6a8582860162000a29565b925050602062000a7d8582860162000a29565b9150509250929050565b60006020828403121562000aa05762000a9f620009d1565b5b600062000ab08482850162000a29565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000b0e8262000ac3565b810181811067ffffffffffffffff8211171562000b305762000b2f62000ad4565b5b80604052505050565b600062000b45620009c7565b905062000b53828262000b03565b919050565b600067ffffffffffffffff82111562000b765762000b7562000ad4565b5b62000b818262000ac3565b9050602081019050919050565b82818337600083830152505050565b600062000bb462000bae8462000b58565b62000b39565b90508281526020810184848401111562000bd35762000bd262000abe565b5b62000be084828562000b8e565b509392505050565b600082601f83011262000c005762000bff62000ab9565b5b813562000c1284826020860162000b9d565b91505092915050565b600080600080600060a0868803121562000c3a5762000c39620009d1565b5b600062000c4a8882890162000a29565b955050602086013567ffffffffffffffff81111562000c6e5762000c6d620009d6565b5b62000c7c8882890162000be8565b945050604086013567ffffffffffffffff81111562000ca05762000c9f620009d6565b5b62000cae8882890162000be8565b935050606086013567ffffffffffffffff81111562000cd25762000cd1620009d6565b5b62000ce08882890162000be8565b925050608086013567ffffffffffffffff81111562000d045762000d03620009d6565b5b62000d128882890162000be8565b9150509295509295909350565b600067ffffffffffffffff82111562000d3d5762000d3c62000ad4565b5b602082029050602081019050919050565b600080fd5b600062000d6a62000d648462000d1f565b62000b39565b9050808382526020820190506020840283018581111562000d905762000d8f62000d4e565b5b835b8181101562000dde57803567ffffffffffffffff81111562000db95762000db862000ab9565b5b80860162000dc8898262000be8565b8552602085019450505060208101905062000d92565b5050509392505050565b600082601f83011262000e005762000dff62000ab9565b5b813562000e1284826020860162000d53565b91505092915050565b6000819050919050565b62000e308162000e1b565b811462000e3c57600080fd5b50565b60008135905062000e508162000e25565b92915050565b6000806000806000806000806000806101408b8d03121562000e7d5762000e7c620009d1565b5b60008b013567ffffffffffffffff81111562000e9e5762000e9d620009d6565b5b62000eac8d828e0162000be8565b9a505060208b013567ffffffffffffffff81111562000ed05762000ecf620009d6565b5b62000ede8d828e0162000be8565b99505060408b013567ffffffffffffffff81111562000f025762000f01620009d6565b5b62000f108d828e0162000be8565b98505060608b013567ffffffffffffffff81111562000f345762000f33620009d6565b5b62000f428d828e0162000de8565b975050608062000f558d828e0162000e3f565b96505060a062000f688d828e0162000e3f565b95505060c08b013567ffffffffffffffff81111562000f8c5762000f8b620009d6565b5b62000f9a8d828e0162000be8565b94505060e08b013567ffffffffffffffff81111562000fbe5762000fbd620009d6565b5b62000fcc8d828e0162000be8565b93505061010062000fe08d828e0162000a29565b92505061012062000ff48d828e0162000a29565b9150509295989b9194979a5092959850565b620010118162000e1b565b82525050565b60006020820190506200102e600083018462001006565b92915050565b6200103f81620009fb565b82525050565b60006020820190506200105c600083018462001034565b92915050565b600081519050919050565b600081905092915050565b60005b83811015620010985780820151818401526020810190506200107b565b83811115620010a8576000848401525b50505050565b6000620010bb8262001062565b620010c781856200106d565b9350620010d981856020860162001078565b80840191505092915050565b6000620010f38284620010ae565b915081905092915050565b600081519050919050565b600082825260208201905092915050565b60006200112782620010fe565b62001133818562001109565b93506200114581856020860162001078565b620011508162000ac3565b840191505092915050565b600060808201905081810360008301526200117781876200111a565b905081810360208301526200118d81866200111a565b90508181036040830152620011a381856200111a565b90508181036060830152620011b981846200111a565b905095945050505050565b6000819050919050565b6000620011ef620011e9620011e384620009db565b620011c4565b620009db565b9050919050565b60006200120382620011ce565b9050919050565b60006200121782620011f6565b9050919050565b62001229816200120a565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006200127982620010fe565b6200128581856200125b565b93506200129781856020860162001078565b620012a28162000ac3565b840191505092915050565b6000620012bb83836200126c565b905092915050565b6000602082019050919050565b6000620012dd826200122f565b620012e981856200123a565b935083602082028501620012fd856200124b565b8060005b858110156200133f57848403895281516200131d8582620012ad565b94506200132a83620012c3565b925060208a0199505060018101905062001301565b50829750879550505050505092915050565b60006101608201905062001369600083018e6200121e565b81810360208301526200137d818d6200111a565b9050818103604083015262001393818c6200111a565b90508181036060830152620013a9818b6200111a565b90508181036080830152620013bf818a620012d0565b9050620013d060a083018962001006565b620013df60c083018862001006565b81810360e0830152620013f381876200111a565b90508181036101008301526200140a81866200111a565b90506200141c61012083018562001034565b6200142c61014083018462001034565b9c9b505050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620014788262000e1b565b9150620014858362000e1b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620014bd57620014bc6200143c565b5b828201905092915050565b6000620014d582620009db565b9050919050565b620014e781620014c8565b8114620014f357600080fd5b50565b6000815190506200150781620014dc565b92915050565b600060208284031215620015265762001525620009d1565b5b60006200153684828501620014f6565b91505092915050565b600060408201905062001556600083018562001034565b62001565602083018462001034565b9392505050565b600381106200157a57600080fd5b50565b6000815190506200158e816200156c565b92915050565b600060208284031215620015ad57620015ac620009d1565b5b6000620015bd848285016200157d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000620016028262000e1b565b91506200160f8362000e1b565b9250828210156200162557620016246200143c565b5b82820390509291505056fe6101206040526000600960006101000a81548160ff021916908360028111156200002e576200002d620003d9565b5b02179055503480156200004057600080fd5b506040516200370538038062003705833981810160405281019062000066919062000741565b8a73ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508960009080519060200190620000b592919062000254565b508860019080519060200190620000ce92919062000254565b508760029080519060200190620000e792919062000254565b50866005908051906020019062000100929190620002e5565b50856006819055504260a08181525050624f1a0060a05162000123919062000937565b60c081815250506200014860a05160c0516200023c60201b62001c611790919060201c565b8511156200017a576200016e60a05160c0516200023c60201b62001c611790919060201c565b60078190555062000182565b846007819055505b83600390805190602001906200019a92919062000254565b508260049080519060200190620001b392919062000254565b5060006008819055508173ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff166101008173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505050505050505050505062000a34565b600081836200024c919062000994565b905092915050565b8280546200026290620009fe565b90600052602060002090601f016020900481019282620002865760008555620002d2565b82601f10620002a157805160ff1916838001178555620002d2565b82800160010185558215620002d2579182015b82811115620002d1578251825591602001919060010190620002b4565b5b509050620002e191906200034c565b5090565b82805482825590600052602060002090810192821562000339579160200282015b82811115620003385782518290805190602001906200032792919062000254565b509160200191906001019062000306565b5b5090506200034891906200036b565b5090565b5b80821115620003675760008160009055506001016200034d565b5090565b5b808211156200038f576000818162000385919062000393565b506001016200036c565b5090565b508054620003a190620009fe565b6000825580601f10620003b55750620003d6565b601f016020900490600052602060002090810190620003d591906200034c565b5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000449826200041c565b9050919050565b6200045b816200043c565b81146200046757600080fd5b50565b6000815190506200047b8162000450565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620004d6826200048b565b810181811067ffffffffffffffff82111715620004f857620004f76200049c565b5b80604052505050565b60006200050d62000408565b90506200051b8282620004cb565b919050565b600067ffffffffffffffff8211156200053e576200053d6200049c565b5b62000549826200048b565b9050602081019050919050565b60005b838110156200057657808201518184015260208101905062000559565b8381111562000586576000848401525b50505050565b6000620005a36200059d8462000520565b62000501565b905082815260208101848484011115620005c257620005c162000486565b5b620005cf84828562000556565b509392505050565b600082601f830112620005ef57620005ee62000481565b5b8151620006018482602086016200058c565b91505092915050565b600067ffffffffffffffff8211156200062857620006276200049c565b5b602082029050602081019050919050565b600080fd5b6000620006556200064f846200060a565b62000501565b905080838252602082019050602084028301858111156200067b576200067a62000639565b5b835b81811015620006c957805167ffffffffffffffff811115620006a457620006a362000481565b5b808601620006b38982620005d7565b855260208501945050506020810190506200067d565b5050509392505050565b600082601f830112620006eb57620006ea62000481565b5b8151620006fd8482602086016200063e565b91505092915050565b6000819050919050565b6200071b8162000706565b81146200072757600080fd5b50565b6000815190506200073b8162000710565b92915050565b60008060008060008060008060008060006101608c8e0312156200076a576200076962000412565b5b60006200077a8e828f016200046a565b9b505060208c015167ffffffffffffffff8111156200079e576200079d62000417565b5b620007ac8e828f01620005d7565b9a505060408c015167ffffffffffffffff811115620007d057620007cf62000417565b5b620007de8e828f01620005d7565b99505060608c015167ffffffffffffffff81111562000802576200080162000417565b5b620008108e828f01620005d7565b98505060808c015167ffffffffffffffff81111562000834576200083362000417565b5b620008428e828f01620006d3565b97505060a0620008558e828f016200072a565b96505060c0620008688e828f016200072a565b95505060e08c015167ffffffffffffffff8111156200088c576200088b62000417565b5b6200089a8e828f01620005d7565b9450506101008c015167ffffffffffffffff811115620008bf57620008be62000417565b5b620008cd8e828f01620005d7565b935050610120620008e18e828f016200046a565b925050610140620008f58e828f016200046a565b9150509295989b509295989b9093969950565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620009448262000706565b9150620009518362000706565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000989576200098862000908565b5b828201905092915050565b6000620009a18262000706565b9150620009ae8362000706565b925082821015620009c457620009c362000908565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000a1757607f821691505b6020821081141562000a2e5762000a2d620009cf565b5b50919050565b60805160601c60a05160c05160e05160601c6101005160601c612c1a62000aeb60003960008181610c800152610ce601526000610ca5015260008181610b2c0152610b9301526000818161097201528181610b0b01528181610b7201526113e901526000818161055001528181610a7801528181610dd601528181610f7d015281816110c8015281816111d601528181611287015281816114770152818161166701528181611737015261183e0152612c1a6000f3fe60806040526004361061014b5760003560e01c806363bd1d4a116100b6578063cc6cb19a1161006f578063cc6cb19a1461044b578063ce2a057214610488578063ce845d1d146104b3578063ead1b1bf146104de578063ed88c68e14610507578063fa89401a146105115761014b565b806363bd1d4a1461034c57806369066ae9146103635780636e04ff0d146103a057806371aac7f9146103de57806399a8502d146103f5578063b145603e146104205761014b565b80634278ac8b116101085780634278ac8b14610262578063431f9a231461028d5780634585e33b146102a45780634d695bdb146102cd5780634ef89719146102f657806360fa9a72146103215761014b565b80630c611f24146101505780630fb5a6b41461017b57806315a46ee6146101a65780631910bdc2146101d15780631b50ad091461020e5780632636b94514610237575b600080fd5b34801561015c57600080fd5b5061016561053a565b604051610172919061210c565b60405180910390f35b34801561018757600080fd5b50610190610999565b60405161019d919061213d565b60405180910390f35b3480156101b257600080fd5b506101bb61099f565b6040516101c891906121a2565b60405180910390f35b3480156101dd57600080fd5b506101f860048036038101906101f39190612204565b610a2d565b604051610205919061213d565b60405180910390f35b34801561021a57600080fd5b506102356004803603810190610230919061225d565b610a76565b005b34801561024357600080fd5b5061024c610be8565b604051610259919061213d565b60405180910390f35b34801561026e57600080fd5b50610277610bee565b60405161028491906121a2565b60405180910390f35b34801561029957600080fd5b506102a2610c7c565b005b3480156102b057600080fd5b506102cb60048036038101906102c691906122ef565b610e7d565b005b3480156102d957600080fd5b506102f460048036038101906102ef919061246c565b610f7b565b005b34801561030257600080fd5b5061030b611025565b60405161031891906121a2565b60405180910390f35b34801561032d57600080fd5b506103366110b3565b60405161034391906124c4565b60405180910390f35b34801561035857600080fd5b506103616110c6565b005b34801561036f57600080fd5b5061038a6004803603810190610385919061225d565b6112f8565b60405161039791906121a2565b60405180910390f35b3480156103ac57600080fd5b506103c760048036038101906103c29190612580565b6113a4565b6040516103d5929190612639565b60405180910390f35b3480156103ea57600080fd5b506103f3611475565b005b34801561040157600080fd5b5061040a6115d7565b60405161041791906121a2565b60405180910390f35b34801561042c57600080fd5b50610435611665565b604051610442919061268a565b60405180910390f35b34801561045757600080fd5b50610472600480360381019061046d9190612204565b611689565b60405161047f919061213d565b60405180910390f35b34801561049457600080fd5b5061049d6116a1565b6040516104aa91906121a2565b60405180910390f35b3480156104bf57600080fd5b506104c861172f565b6040516104d5919061213d565b60405180910390f35b3480156104ea57600080fd5b506105056004803603810190610500919061225d565b611735565b005b61050f6117cf565b005b34801561051d57600080fd5b5061053860048036038101906105339190612204565b6119d1565b005b610542611c8d565b6040518061018001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16815260200160008054610597906126d4565b80601f01602080910402602001604051908101604052809291908181526020018280546105c3906126d4565b80156106105780601f106105e557610100808354040283529160200191610610565b820191906000526020600020905b8154815290600101906020018083116105f357829003601f168201915b5050505050815260200160018054610627906126d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610653906126d4565b80156106a05780601f10610675576101008083540402835291602001916106a0565b820191906000526020600020905b81548152906001019060200180831161068357829003601f168201915b50505050508152602001600280546106b7906126d4565b80601f01602080910402602001604051908101604052809291908181526020018280546106e3906126d4565b80156107305780601f1061070557610100808354040283529160200191610730565b820191906000526020600020905b81548152906001019060200180831161071357829003601f168201915b505050505081526020016005805480602002602001604051908101604052809291908181526020016000905b8282101561080857838290600052602060002001805461077b906126d4565b80601f01602080910402602001604051908101604052809291908181526020018280546107a7906126d4565b80156107f45780601f106107c9576101008083540402835291602001916107f4565b820191906000526020600020905b8154815290600101906020018083116107d757829003601f168201915b50505050508152602001906001019061075c565b505050508152602001600654815260200160075481526020016008548152602001600960009054906101000a900460ff16600281111561084b5761084a611f6e565b5b81526020016003805461085d906126d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610889906126d4565b80156108d65780601f106108ab576101008083540402835291602001916108d6565b820191906000526020600020905b8154815290600101906020018083116108b957829003601f168201915b50505050508152602001600480546108ed906126d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610919906126d4565b80156109665780601f1061093b57610100808354040283529160200191610966565b820191906000526020600020905b81548152906001019060200180831161094957829003601f168201915b505050505081526020017f0000000000000000000000000000000000000000000000000000000000000000815250905090565b60075481565b600480546109ac906126d4565b80601f01602080910402602001604051908101604052809291908181526020018280546109d8906126d4565b8015610a255780601f106109fa57610100808354040283529160200191610a25565b820191906000526020600020905b815481529060010190602001808311610a0857829003601f168201915b505050505081565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b0657336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610afd9190612715565b60405180910390fd5b610b597f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611c6190919063ffffffff16565b60075482610b67919061275f565b1115610bcb57610bc07f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611c6190919063ffffffff16565b600781905550610be5565b8060076000828254610bdd919061275f565b925050819055505b50565b60065481565b60028054610bfb906126d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610c27906126d4565b8015610c745780601f10610c4957610100808354040283529160200191610c74565b820191906000526020600020905b815481529060010190602001808311610c5757829003601f168201915b505050505081565b60007f0000000000000000000000000000000000000000000000000000000000000000905060007f0000000000000000000000000000000000000000000000000000000000000000905060008173ffffffffffffffffffffffffffffffffffffffff166370a082317f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610d219190612715565b60206040518083038186803b158015610d3957600080fd5b505afa158015610d4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7191906127ca565b11610db1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da890612843565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166318a9fb8a6000306207a1207f0000000000000000000000000000000000000000000000000000000000000000678ac7230489e8000060006040518763ffffffff1660e01b8152600401610e2196959493929190612a89565b602060405180830381600087803b158015610e3b57600080fd5b505af1158015610e4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7391906127ca565b600b819055505050565b6000610e97604051806020016040528060008152506113a4565b50905080610ed1576040517f311f87a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600960006101000a81548160ff02191690836002811115610ef757610ef6611f6e565b5b02179055507f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d30604051610f2b9190612715565b60405180910390a160065460085410610f76577f5369558c667e962b633128a01c31764d053da51f61d17370d327ed17f77deccc30604051610f6d9190612715565b60405180910390a15b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461100b57336040517fef54c8170000000000000000000000000000000000000000000000000000000081526004016110029190612715565b60405180910390fd5b8060049080519060200190611021929190611d16565b5050565b60018054611032906126d4565b80601f016020809104026020016040519081016040528092919081815260200182805461105e906126d4565b80156110ab5780601f10611080576101008083540402835291602001916110ab565b820191906000526020600020905b81548152906001019060200180831161108e57829003601f168201915b505050505081565b600960009054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461115657336040517fef54c81700000000000000000000000000000000000000000000000000000000815260040161114d9190612715565b60405180910390fd5b6001600281111561116a57611169611f6e565b5b600960009054906101000a900460ff16600281111561118c5761118b611f6e565b5b146111c3576040517ffa4021a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006008549050600060088190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168260405161121890612b49565b60006040518083038185875af1925050503d8060008114611255576040519150601f19603f3d011682016040523d82523d6000602084013e61125a565b606091505b5050905080156112c2577fba5e837743d81ad0e6deb16089dbb65b549fdda8ad802fd8d4822884d70dc8b27f0000000000000000000000000000000000000000000000000000000000000000306040516112b5929190612b5e565b60405180910390a16112f4565b6040517f11456ffb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6005818154811061130857600080fd5b906000526020600020016000915090508054611323906126d4565b80601f016020809104026020016040519081016040528092919081815260200182805461134f906126d4565b801561139c5780601f106113715761010080835404028352916020019161139c565b820191906000526020600020905b81548152906001019060200180831161137f57829003601f168201915b505050505081565b6000606060008060028111156113bd576113bc611f6e565b5b600960009054906101000a900460ff1660028111156113df576113de611f6e565b5b14905060006007547f0000000000000000000000000000000000000000000000000000000000000000426114139190612b87565b119050600080471190508180156114275750825b80156114305750805b9450846040518060400160405280600381526020017f307830000000000000000000000000000000000000000000000000000000000081525094509450505050915091565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461150557336040517fef54c8170000000000000000000000000000000000000000000000000000000081526004016114fc9190612715565b60405180910390fd5b6001600281111561151957611518611f6e565b5b600960009054906101000a900460ff16600281111561153b5761153a611f6e565b5b141561157e57306040517fd6d7e5c10000000000000000000000000000000000000000000000000000000081526004016115759190612715565b60405180910390fd5b6002600960006101000a81548160ff021916908360028111156115a4576115a3611f6e565b5b02179055507fb83ebe09f40e9293bdea1d6567fae3175119d3d0ff13c4b4df15994837dd7f5160405160405180910390a1565b600080546115e4906126d4565b80601f0160208091040260200160405190810160405280929190818152602001828054611610906126d4565b801561165d5780601f106116325761010080835404028352916020019161165d565b820191906000526020600020905b81548152906001019060200180831161164057829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600a6020528060005260406000206000915090505481565b600380546116ae906126d4565b80601f01602080910402602001604051908101604052809291908181526020018280546116da906126d4565b80156117275780601f106116fc57610100808354040283529160200191611727565b820191906000526020600020905b81548152906001019060200180831161170a57829003601f168201915b505050505081565b60085481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117c557336040517fef54c8170000000000000000000000000000000000000000000000000000000081526004016117bc9190612715565b60405180910390fd5b8060068190555050565b600060028111156117e3576117e2611f6e565b5b600960009054906101000a900460ff16600281111561180557611804611f6e565b5b1461183c576040517ffa4021a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156118cd57336040517f911018950000000000000000000000000000000000000000000000000000000081526004016118c49190612715565b60405180910390fd5b61191f34600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c7790919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061197734600854611c7790919063ffffffff16565b6008819055503373ffffffffffffffffffffffffffffffffffffffff167fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca2674923551208346008546040516119c7929190612bbb565b60405180910390a2565b600160028111156119e5576119e4611f6e565b5b600960009054906101000a900460ff166002811115611a0757611a06611f6e565b5b1415611a4a57306040517fd6d7e5c1000000000000000000000000000000000000000000000000000000008152600401611a419190612715565b60405180910390fd5b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611ace57806040517fc4385859000000000000000000000000000000000000000000000000000000008152600401611ac59190612715565b60405180910390fd5b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806008541015611b9e57306040517f6db510f5000000000000000000000000000000000000000000000000000000008152600401611b959190612715565b60405180910390fd5b611bb381600854611c6190919063ffffffff16565b60088190555060008273ffffffffffffffffffffffffffffffffffffffff1682604051611bdf90612b49565b60006040518083038185875af1925050503d8060008114611c1c576040519150601f19603f3d011682016040523d82523d6000602084013e611c21565b606091505b5050905080611c5c576040517f92e9f8f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b60008183611c6f9190612b87565b905092915050565b60008183611c85919061275f565b905092915050565b604051806101800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000815260200160006002811115611cfb57611cfa611f6e565b5b81526020016060815260200160608152602001600081525090565b828054611d22906126d4565b90600052602060002090601f016020900481019282611d445760008555611d8b565b82601f10611d5d57805160ff1916838001178555611d8b565b82800160010185558215611d8b579182015b82811115611d8a578251825591602001919060010190611d6f565b5b509050611d989190611d9c565b5090565b5b80821115611db5576000816000905550600101611d9d565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611de482611db9565b9050919050565b611df481611dd9565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e34578082015181840152602081019050611e19565b83811115611e43576000848401525b50505050565b6000601f19601f8301169050919050565b6000611e6582611dfa565b611e6f8185611e05565b9350611e7f818560208601611e16565b611e8881611e49565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611ecb8383611e5a565b905092915050565b6000602082019050919050565b6000611eeb82611e93565b611ef58185611e9e565b935083602082028501611f0785611eaf565b8060005b85811015611f435784840389528151611f248582611ebf565b9450611f2f83611ed3565b925060208a01995050600181019050611f0b565b50829750879550505050505092915050565b6000819050919050565b611f6881611f55565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110611fae57611fad611f6e565b5b50565b6000819050611fbf82611f9d565b919050565b6000611fcf82611fb1565b9050919050565b611fdf81611fc4565b82525050565b600061018083016000830151611ffe6000860182611deb565b50602083015184820360208601526120168282611e5a565b915050604083015184820360408601526120308282611e5a565b9150506060830151848203606086015261204a8282611e5a565b915050608083015184820360808601526120648282611ee0565b91505060a083015161207960a0860182611f5f565b5060c083015161208c60c0860182611f5f565b5060e083015161209f60e0860182611f5f565b506101008301516120b4610100860182611fd6565b506101208301518482036101208601526120ce8282611e5a565b9150506101408301518482036101408601526120ea8282611e5a565b915050610160830151612101610160860182611f5f565b508091505092915050565b600060208201905081810360008301526121268184611fe5565b905092915050565b61213781611f55565b82525050565b6000602082019050612152600083018461212e565b92915050565b600082825260208201905092915050565b600061217482611dfa565b61217e8185612158565b935061218e818560208601611e16565b61219781611e49565b840191505092915050565b600060208201905081810360008301526121bc8184612169565b905092915050565b6000604051905090565b600080fd5b600080fd5b6121e181611dd9565b81146121ec57600080fd5b50565b6000813590506121fe816121d8565b92915050565b60006020828403121561221a576122196121ce565b5b6000612228848285016121ef565b91505092915050565b61223a81611f55565b811461224557600080fd5b50565b60008135905061225781612231565b92915050565b600060208284031215612273576122726121ce565b5b600061228184828501612248565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126122af576122ae61228a565b5b8235905067ffffffffffffffff8111156122cc576122cb61228f565b5b6020830191508360018202830111156122e8576122e7612294565b5b9250929050565b60008060208385031215612306576123056121ce565b5b600083013567ffffffffffffffff811115612324576123236121d3565b5b61233085828601612299565b92509250509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61237982611e49565b810181811067ffffffffffffffff8211171561239857612397612341565b5b80604052505050565b60006123ab6121c4565b90506123b78282612370565b919050565b600067ffffffffffffffff8211156123d7576123d6612341565b5b6123e082611e49565b9050602081019050919050565b82818337600083830152505050565b600061240f61240a846123bc565b6123a1565b90508281526020810184848401111561242b5761242a61233c565b5b6124368482856123ed565b509392505050565b600082601f8301126124535761245261228a565b5b81356124638482602086016123fc565b91505092915050565b600060208284031215612482576124816121ce565b5b600082013567ffffffffffffffff8111156124a05761249f6121d3565b5b6124ac8482850161243e565b91505092915050565b6124be81611fc4565b82525050565b60006020820190506124d960008301846124b5565b92915050565b600067ffffffffffffffff8211156124fa576124f9612341565b5b61250382611e49565b9050602081019050919050565b600061252361251e846124df565b6123a1565b90508281526020810184848401111561253f5761253e61233c565b5b61254a8482856123ed565b509392505050565b600082601f8301126125675761256661228a565b5b8135612577848260208601612510565b91505092915050565b600060208284031215612596576125956121ce565b5b600082013567ffffffffffffffff8111156125b4576125b36121d3565b5b6125c084828501612552565b91505092915050565b60008115159050919050565b6125de816125c9565b82525050565b600081519050919050565b600082825260208201905092915050565b600061260b826125e4565b61261581856125ef565b9350612625818560208601611e16565b61262e81611e49565b840191505092915050565b600060408201905061264e60008301856125d5565b81810360208301526126608184612600565b90509392505050565b600061267482611db9565b9050919050565b61268481612669565b82525050565b600060208201905061269f600083018461267b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806126ec57607f821691505b60208210811415612700576126ff6126a5565b5b50919050565b61270f81611dd9565b82525050565b600060208201905061272a6000830184612706565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061276a82611f55565b915061277583611f55565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156127aa576127a9612730565b5b828201905092915050565b6000815190506127c481612231565b92915050565b6000602082840312156127e0576127df6121ce565b5b60006127ee848285016127b5565b91505092915050565b7f6e6f2066756e6473000000000000000000000000000000000000000000000000600082015250565b600061282d600883612158565b9150612838826127f7565b602082019050919050565b6000602082019050818103600083015261285c81612820565b9050919050565b60008190508160005260206000209050919050565b60008154612885816126d4565b61288f8186612158565b945060018216600081146128aa57600181146128bc576128ef565b60ff19831686526020860193506128ef565b6128c585612863565b60005b838110156128e7578154818901526001820191506020810190506128c8565b808801955050505b50505092915050565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b600061292e6002836125ef565b9150612939826128f8565b602082019050919050565b6000819050919050565b600063ffffffff82169050919050565b6000819050919050565b600061298361297e61297984612944565b61295e565b61294e565b9050919050565b61299381612968565b82525050565b60006129b46129af6129aa84611db9565b61295e565b611db9565b9050919050565b60006129c682612999565b9050919050565b60006129d8826129bb565b9050919050565b6129e8816129cd565b82525050565b6000819050919050565b60006bffffffffffffffffffffffff82169050919050565b6000612a2b612a26612a21846129ee565b61295e565b6129f8565b9050919050565b612a3b81612a10565b82525050565b6000819050919050565b600060ff82169050919050565b6000612a73612a6e612a6984612a41565b61295e565b612a4b565b9050919050565b612a8381612a58565b82525050565b6000610100820190508181036000830152612aa48189612878565b90508181036020830152612ab781612921565b9050612ac66040830188612706565b612ad3606083018761298a565b612ae060808301866129df565b81810360a0830152612af181612921565b9050612b0060c0830185612a32565b612b0d60e0830184612a7a565b979650505050505050565b600081905092915050565b50565b6000612b33600083612b18565b9150612b3e82612b23565b600082019050919050565b6000612b5482612b26565b9150819050919050565b6000604082019050612b7360008301856129df565b612b806020830184612706565b9392505050565b6000612b9282611f55565b9150612b9d83611f55565b925082821015612bb057612baf612730565b5b828203905092915050565b6000604082019050612bd0600083018561212e565b612bdd602083018461212e565b939250505056fea26469706673582212203f4d18e508ec69cc697964a42d9d52ee01c1a22144f87547c9a69c8603a57a5a64736f6c63430008080033a264697066735822122064b7f589b84476036a0553849f3a10f4de698730586a98cb0d2cd8aae16e1ef264736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1368,
        "contract": "contracts/CrowdFunder.sol:CrowdFunder",
        "label": "campaignCounter",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 1373,
        "contract": "contracts/CrowdFunder.sol:CrowdFunder",
        "label": "campaigns",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_contract(Campaign)1303)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(Campaign)1303": {
        "encoding": "inplace",
        "label": "contract Campaign",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(Campaign)1303)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract Campaign)",
        "numberOfBytes": "32",
        "value": "t_contract(Campaign)1303"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}