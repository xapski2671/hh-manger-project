{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_creatorType",
          "type": "uint64"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_tags",
          "type": "string[]"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "Campaign__AlreadyExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "Campaign__CampaignBankrupt",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Campaign__DonatorIsCreator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donatorAddress",
          "type": "address"
        }
      ],
      "name": "Campaign__NoDonationsHere",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Campaign__NotCreator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Campaign__NotInState",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "Campaign__NotRefundable",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "Campaign__NotWithrawable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Campaign__PayoutFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Campaign__RefundFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Campaign__UpkeepNotNeeded",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignExpired",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignSuccessful",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CreatorPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "currentBalance",
          "type": "uint256"
        }
      ],
      "name": "FundingRecieved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "allowRefunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creatorType",
      "outputs": [
        {
          "internalType": "enum Campaign.CreatorType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "donations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "duration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCampaignDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "enum Campaign.CreatorType",
              "name": "creatorType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "tags",
              "type": "string[]"
            },
            {
              "internalType": "uint256",
              "name": "goalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentBalance",
              "type": "uint256"
            },
            {
              "internalType": "enum Campaign.State",
              "name": "currentState",
              "type": "uint8"
            }
          ],
          "internalType": "struct Campaign.CampaignObject",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCampaignState",
      "outputs": [
        {
          "internalType": "enum Campaign.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "getDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "goalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nowPayable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nowRefunding",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Campaign.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tags",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "title",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newDescription",
          "type": "string"
        }
      ],
      "name": "updateDescription",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_addedTime",
          "type": "uint256"
        }
      ],
      "name": "updateDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newTitle",
          "type": "string"
        }
      ],
      "name": "updateTitle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1b0656c79c2962a127f2741ae1d63168ce1cbb8178598d43e86e71f0be4da5cf",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "2282984",
    "logsBloom": "0x
    "blockHash": "0x8ee415ef87ab7276a55bbac00c695c1e3795566e8e7bbceb6f505f54c77866fb",
    "transactionHash": "0x1b0656c79c2962a127f2741ae1d63168ce1cbb8178598d43e86e71f0be4da5cf",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "2282984",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    1,
    "Help Jane Lynn",
    "help Jane Lynn reach her goal",
    [
      "movie",
      "acting",
      "fundraise"
    ],
    "3000000000000000000",
    "345600"
  ],
  "numDeployments": 1,
  "solcInputHash": "147b912979f5c707f743b8da063d6c98",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_creatorType\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_tags\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"Campaign__AlreadyExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"Campaign__CampaignBankrupt\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Campaign__DonatorIsCreator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donatorAddress\",\"type\":\"address\"}],\"name\":\"Campaign__NoDonationsHere\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Campaign__NotCreator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Campaign__NotInState\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"Campaign__NotRefundable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"Campaign__NotWithrawable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Campaign__PayoutFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Campaign__RefundFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Campaign__UpkeepNotNeeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CreatorPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"}],\"name\":\"FundingRecieved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allowRefunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorType\",\"outputs\":[{\"internalType\":\"enum Campaign.CreatorType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"donations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaignDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"enum Campaign.CreatorType\",\"name\":\"creatorType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"tags\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"enum Campaign.State\",\"name\":\"currentState\",\"type\":\"uint8\"}],\"internalType\":\"struct Campaign.CampaignObject\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaignState\",\"outputs\":[{\"internalType\":\"enum Campaign.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"getDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nowPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nowRefunding\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum Campaign.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tags\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"title\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newDescription\",\"type\":\"string\"}],\"name\":\"updateDescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_addedTime\",\"type\":\"uint256\"}],\"name\":\"updateDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newTitle\",\"type\":\"string\"}],\"name\":\"updateTitle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"this is the function chainlink keepers calls chekupkeep returns true to trigger the action after the interval has passed\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Campaign.sol\":\"Campaign\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Campaign.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\n\\r\\n// errors\\r\\nerror Campaign__NotInState();\\r\\nerror Campaign__NotCreator(address _address);\\r\\nerror Campaign__DonatorIsCreator(address _address);\\r\\nerror Campaign__PayoutFailed();\\r\\nerror Campaign__NoDonationsHere(address _donatorAddress);\\r\\nerror Campaign__RefundFailed();\\r\\nerror Campaign__UpkeepNotNeeded();\\r\\nerror Campaign__NotWithrawable(address _campaignAddress);\\r\\nerror Campaign__AlreadyExpired(address _campaignAddress);\\r\\nerror Campaign__NotRefundable(address _campaignAddress);\\r\\nerror Campaign__CampaignBankrupt(address _campaignAddress);\\r\\n\\r\\ncontract Campaign is KeeperCompatibleInterface {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  // enums\\r\\n  enum State {\\r\\n    Successful,\\r\\n    Fundraising,\\r\\n    Expired\\r\\n  }\\r\\n\\r\\n  enum CreatorType {\\r\\n    Sole,\\r\\n    Team\\r\\n  }\\r\\n\\r\\n\\r\\n  // state variables\\r\\n  address payable public creator;\\r\\n  CreatorType public creatorType;\\r\\n  string public title;\\r\\n  string public description;\\r\\n  string[] public tags;\\r\\n  uint256 public goalAmount;\\r\\n  uint256 public duration;\\r\\n  uint256 public currentBalance;\\r\\n  uint256 private s_lastTimeStamp;\\r\\n  State public state = State.Fundraising; // default state\\r\\n  mapping (address => uint256) public donations;\\r\\n  bool public nowPayable;\\r\\n  bool public nowRefunding;\\r\\n\\r\\n\\r\\n  struct CampaignObject {\\r\\n    address creator;\\r\\n    CreatorType creatorType;\\r\\n    string title;\\r\\n    string description;\\r\\n    string[] tags;\\r\\n    uint256 goalAmount;\\r\\n    uint256 duration;\\r\\n    uint256 currentBalance;\\r\\n    State currentState;\\r\\n  }\\r\\n\\r\\n\\r\\n  // events\\r\\n  event FundingRecieved (\\r\\n    address indexed contributor,\\r\\n    uint256 amount,\\r\\n    uint256 currentBalance\\r\\n  );\\r\\n  event CreatorPaid(address creator, address campaignAddress);\\r\\n  event CampaignSuccessful(address campaignAddress);\\r\\n  event CampaignExpired(address campaignAddress);\\r\\n\\r\\n\\r\\n  // modifiers\\r\\n  modifier inState(State _state) {\\r\\n    if (state != _state){revert Campaign__NotInState();}\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  modifier isCreator() {\\r\\n    if(msg.sender != creator){revert Campaign__NotCreator(msg.sender);}\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  constructor (\\r\\n    address _creator,\\r\\n    uint64 _creatorType,\\r\\n    string memory _title,\\r\\n    string memory _description,\\r\\n    string[] memory _tags,\\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration\\r\\n  ) {\\r\\n    creator = payable(_creator);\\r\\n    creatorType = CreatorType(_creatorType);\\r\\n    title = _title;\\r\\n    description = _description;\\r\\n    tags = _tags;\\r\\n    goalAmount = _goalAmount;\\r\\n    duration = _duration;\\r\\n    s_lastTimeStamp = block.timestamp;\\r\\n    currentBalance = 0;\\r\\n    nowPayable = false;\\r\\n    nowRefunding = false;\\r\\n  }\\r\\n\\r\\n  function donate() external inState(State.Fundraising) payable {\\r\\n    if (msg.sender == creator){revert Campaign__DonatorIsCreator(msg.sender);}\\r\\n    donations[msg.sender] = donations[msg.sender].add(msg.value);\\r\\n    currentBalance = currentBalance.add(msg.value);\\r\\n    emit FundingRecieved(msg.sender, msg.value, currentBalance);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev this is the function chainlink keepers calls\\r\\n    chekupkeep returns true to trigger the action after the interval has passed\\r\\n   */\\r\\n  function checkUpkeep(bytes memory /**checkData */) public view override\\r\\n  returns (bool upkeepNeeded, bytes memory /**performData */) \\r\\n  {\\r\\n    bool goalReached = currentBalance >= goalAmount;\\r\\n    bool isOpen = state == State.Fundraising;\\r\\n    bool timePassed = ((block.timestamp - s_lastTimeStamp) > duration);\\r\\n    bool hasBalance = address(this).balance > 0;\\r\\n    upkeepNeeded = (goalReached || timePassed && isOpen && hasBalance) ;\\r\\n    return (upkeepNeeded, \\\"0x0\\\");\\r\\n  }\\r\\n\\r\\n  function performUpkeep(bytes calldata /**performData */) external override {\\r\\n    (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n    if(!upkeepNeeded){revert Campaign__UpkeepNotNeeded();}\\r\\n\\r\\n    // allow creator withdraw funds\\r\\n    nowPayable = true;\\r\\n    nowRefunding = true;\\r\\n\\r\\n    if((block.timestamp - s_lastTimeStamp) > duration){\\r\\n      state = State.Expired; \\r\\n      emit CampaignExpired(address(this));\\r\\n    }\\r\\n    else if(currentBalance >= goalAmount){\\r\\n      state = State.Successful;\\r\\n      emit CampaignSuccessful(address(this));\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function payout() public isCreator {\\r\\n    if(!nowPayable){revert Campaign__NotWithrawable(address(this));}\\r\\n    uint256 totalRaised = currentBalance;\\r\\n    currentBalance = 0;\\r\\n    (bool success, ) = creator.call{value: totalRaised}(\\\"\\\");\\r\\n    if(success){\\r\\n      nowRefunding = false;\\r\\n      emit CreatorPaid(creator, address(this));\\r\\n    }\\r\\n    else{revert Campaign__PayoutFailed();}\\r\\n  }\\r\\n\\r\\n  function refund(address _donator) public {\\r\\n    if(!nowRefunding){revert Campaign__NotRefundable(address(this));}\\r\\n    if(donations[_donator] <= 0){revert Campaign__NoDonationsHere(msg.sender);}\\r\\n    uint256 amountToRefund = donations[_donator];\\r\\n    donations[_donator] = 0;\\r\\n    if(currentBalance < amountToRefund){revert Campaign__CampaignBankrupt(address(this));}\\r\\n    currentBalance = currentBalance.sub(amountToRefund);\\r\\n    (bool success, ) = payable(_donator).call{value: amountToRefund}(\\\"\\\");\\r\\n    if(!success){revert Campaign__RefundFailed();} // TODO: test if it returns the money to mapping\\r\\n  }\\r\\n\\r\\n  function endCampaign() public {\\r\\n    if(state == State.Expired){revert Campaign__AlreadyExpired(address(this));}\\r\\n    state = State.Expired;\\r\\n    emit CampaignExpired(address(this));\\r\\n  }\\r\\n\\r\\n  // update functions\\r\\n  function updateDuration(uint256 _addedTime) public {\\r\\n    duration = duration.add(_addedTime);\\r\\n  }\\r\\n\\r\\n  function updateTitle(string memory _newTitle) public {\\r\\n    title = _newTitle;\\r\\n  }\\r\\n\\r\\n  function updateDescription(string memory _newDescription) public {\\r\\n    description = _newDescription;\\r\\n  }\\r\\n  \\r\\n  function allowRefunds() public isCreator {\\r\\n    if(currentBalance <= 0){revert Campaign__CampaignBankrupt(address(this));}\\r\\n    else{nowRefunding = true;}\\r\\n  }\\r\\n\\r\\n  // getter functions\\r\\n  function getBalance() public view returns(uint256) {\\r\\n    return currentBalance;\\r\\n  }\\r\\n\\r\\n  function getCampaignState() public view returns(State) {\\r\\n    return state;\\r\\n  }\\r\\n\\r\\n  function getDonations(address _donator) public view returns(uint256) {\\r\\n    return donations[_donator];\\r\\n  }\\r\\n\\r\\n  function getCampaignDetails() public view returns(CampaignObject memory) {\\r\\n    return CampaignObject(\\r\\n      creator,\\r\\n      creatorType,\\r\\n      title,\\r\\n      description,\\r\\n      tags,\\r\\n      goalAmount,\\r\\n      duration,\\r\\n      currentBalance,\\r\\n      state\\r\\n    );\\r\\n  }\\r\\n}\",\"keccak256\":\"0x3869fc5f55e5086a27f71b4e1aa609ef4454a1b149a3c8dc121bfe2fe151dc4c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526001600860006101000a81548160ff021916908360028111156200002d576200002c62000321565b5b02179055503480156200003f57600080fd5b5060405162002b8538038062002b858339818101604052810190620000659190620006ce565b866000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508567ffffffffffffffff166001811115620000c557620000c462000321565b5b600060146101000a81548160ff02191690836001811115620000ec57620000eb62000321565b5b02179055508460019080519060200190620001099291906200019c565b508360029080519060200190620001229291906200019c565b5082600390805190602001906200013b9291906200022d565b5081600481905550806005819055504260078190555060006006819055506000600a60006101000a81548160ff0219169083151502179055506000600a60016101000a81548160ff0219169083151502179055505050505050505062000843565b828054620001aa906200080d565b90600052602060002090601f016020900481019282620001ce57600085556200021a565b82601f10620001e957805160ff19168380011785556200021a565b828001600101855582156200021a579182015b8281111562000219578251825591602001919060010190620001fc565b5b50905062000229919062000294565b5090565b82805482825590600052602060002090810192821562000281579160200282015b82811115620002805782518290805190602001906200026f9291906200019c565b50916020019190600101906200024e565b5b509050620002909190620002b3565b5090565b5b80821115620002af57600081600090555060010162000295565b5090565b5b80821115620002d75760008181620002cd9190620002db565b50600101620002b4565b5090565b508054620002e9906200080d565b6000825580601f10620002fd57506200031e565b601f0160209004906000526020600020908101906200031d919062000294565b5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003918262000364565b9050919050565b620003a38162000384565b8114620003af57600080fd5b50565b600081519050620003c38162000398565b92915050565b600067ffffffffffffffff82169050919050565b620003e881620003c9565b8114620003f457600080fd5b50565b6000815190506200040881620003dd565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620004638262000418565b810181811067ffffffffffffffff8211171562000485576200048462000429565b5b80604052505050565b60006200049a62000350565b9050620004a8828262000458565b919050565b600067ffffffffffffffff821115620004cb57620004ca62000429565b5b620004d68262000418565b9050602081019050919050565b60005b8381101562000503578082015181840152602081019050620004e6565b8381111562000513576000848401525b50505050565b6000620005306200052a84620004ad565b6200048e565b9050828152602081018484840111156200054f576200054e62000413565b5b6200055c848285620004e3565b509392505050565b600082601f8301126200057c576200057b6200040e565b5b81516200058e84826020860162000519565b91505092915050565b600067ffffffffffffffff821115620005b557620005b462000429565b5b602082029050602081019050919050565b600080fd5b6000620005e2620005dc8462000597565b6200048e565b90508083825260208201905060208402830185811115620006085762000607620005c6565b5b835b818110156200065657805167ffffffffffffffff8111156200063157620006306200040e565b5b80860162000640898262000564565b855260208501945050506020810190506200060a565b5050509392505050565b600082601f8301126200067857620006776200040e565b5b81516200068a848260208601620005cb565b91505092915050565b6000819050919050565b620006a88162000693565b8114620006b457600080fd5b50565b600081519050620006c8816200069d565b92915050565b600080600080600080600060e0888a031215620006f057620006ef6200035a565b5b6000620007008a828b01620003b2565b9750506020620007138a828b01620003f7565b965050604088015167ffffffffffffffff8111156200073757620007366200035f565b5b620007458a828b0162000564565b955050606088015167ffffffffffffffff8111156200076957620007686200035f565b5b620007778a828b0162000564565b945050608088015167ffffffffffffffff8111156200079b576200079a6200035f565b5b620007a98a828b0162000660565b93505060a0620007bc8a828b01620006b7565b92505060c0620007cf8a828b01620006b7565b91505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200082657607f821691505b602082108114156200083d576200083c620007de565b5b50919050565b61233280620008536000396000f3fe6080604052600436106101815760003560e01c806363bd1d4a116100d1578063c19d93fb1161008a578063e735b48a11610064578063e735b48a1461053f578063ed44c6ab14610568578063ed88c68e14610593578063fa89401a1461059d57610181565b8063c19d93fb146104ac578063cc6cb19a146104d7578063ce845d1d1461051457610181565b806363bd1d4a146103bf5780636e04ff0d146103d657806371aac7f9146104145780637284e4161461042b5780637fb3761e14610456578063baf9ec5e1461048157610181565b806320822abc1161013e5780634298b0cd116101185780634298b0cd146103295780634585e33b146103545780634a79d50c1461037d57806359c656df146103a857610181565b806320822abc146102985780632636b945146102d557806337fb13b01461030057610181565b806302d05d3f146101865780630c611f24146101b15780630fb5a6b4146101dc57806312065fe0146102075780631910bdc2146102325780631b50ad091461026f575b600080fd5b34801561019257600080fd5b5061019b6105c6565b6040516101a891906117dd565b60405180910390f35b3480156101bd57600080fd5b506101c66105ea565b6040516101d39190611b1f565b60405180910390f35b3480156101e857600080fd5b506101f161089a565b6040516101fe9190611b50565b60405180910390f35b34801561021357600080fd5b5061021c6108a0565b6040516102299190611b50565b60405180910390f35b34801561023e57600080fd5b5061025960048036038101906102549190611bab565b6108aa565b6040516102669190611b50565b60405180910390f35b34801561027b57600080fd5b5061029660048036038101906102919190611c04565b6108f3565b005b3480156102a457600080fd5b506102bf60048036038101906102ba9190611c04565b610911565b6040516102cc9190611c7b565b60405180910390f35b3480156102e157600080fd5b506102ea6109bd565b6040516102f79190611b50565b60405180910390f35b34801561030c57600080fd5b5061032760048036038101906103229190611dd2565b6109c3565b005b34801561033557600080fd5b5061033e6109dd565b60405161034b9190611e36565b60405180910390f35b34801561036057600080fd5b5061037b60048036038101906103769190611eb1565b6109f0565b005b34801561038957600080fd5b50610392610b6c565b60405161039f9190611c7b565b60405180910390f35b3480156103b457600080fd5b506103bd610bfa565b005b3480156103cb57600080fd5b506103d4610cee565b005b3480156103e257600080fd5b506103fd60048036038101906103f89190611f9f565b610f20565b60405161040b92919061203d565b60405180910390f35b34801561042057600080fd5b50610429610fe9565b005b34801561043757600080fd5b506104406110c5565b60405161044d9190611c7b565b60405180910390f35b34801561046257600080fd5b5061046b611153565b604051610478919061207c565b60405180910390f35b34801561048d57600080fd5b5061049661116a565b6040516104a39190611e36565b60405180910390f35b3480156104b857600080fd5b506104c161117d565b6040516104ce919061207c565b60405180910390f35b3480156104e357600080fd5b506104fe60048036038101906104f99190611bab565b611190565b60405161050b9190611b50565b60405180910390f35b34801561052057600080fd5b506105296111a8565b6040516105369190611b50565b60405180910390f35b34801561054b57600080fd5b5061056660048036038101906105619190611dd2565b6111ae565b005b34801561057457600080fd5b5061057d6111c8565b60405161058a91906120a6565b60405180910390f35b61059b6111db565b005b3480156105a957600080fd5b506105c460048036038101906105bf9190611bab565b6113df565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105f2611673565b60405180610120016040528060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600060149054906101000a900460ff16600181111561065c5761065b611819565b5b81526020016001805461066e906120f0565b80601f016020809104026020016040519081016040528092919081815260200182805461069a906120f0565b80156106e75780601f106106bc576101008083540402835291602001916106e7565b820191906000526020600020905b8154815290600101906020018083116106ca57829003601f168201915b50505050508152602001600280546106fe906120f0565b80601f016020809104026020016040519081016040528092919081815260200182805461072a906120f0565b80156107775780601f1061074c57610100808354040283529160200191610777565b820191906000526020600020905b81548152906001019060200180831161075a57829003601f168201915b505050505081526020016003805480602002602001604051908101604052809291908181526020016000905b8282101561084f5783829060005260206000200180546107c2906120f0565b80601f01602080910402602001604051908101604052809291908181526020018280546107ee906120f0565b801561083b5780601f106108105761010080835404028352916020019161083b565b820191906000526020600020905b81548152906001019060200180831161081e57829003601f168201915b5050505050815260200190600101906107a3565b505050508152602001600454815260200160055481526020016006548152602001600860009054906101000a900460ff16600281111561089257610891611819565b5b815250905090565b60055481565b6000600654905090565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109088160055461164790919063ffffffff16565b60058190555050565b6003818154811061092157600080fd5b90600052602060002001600091509050805461093c906120f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610968906120f0565b80156109b55780601f1061098a576101008083540402835291602001916109b5565b820191906000526020600020905b81548152906001019060200180831161099857829003601f168201915b505050505081565b60045481565b80600190805190602001906109d99291906116f9565b5050565b600a60009054906101000a900460ff1681565b6000610a0a60405180602001604052806000815250610f20565b50905080610a44576040517f311f87a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600a60006101000a81548160ff0219169083151502179055506001600a60016101000a81548160ff02191690831515021790555060055460075442610a8b9190612151565b1115610af8576002600860006101000a81548160ff02191690836002811115610ab757610ab6611819565b5b02179055507f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d30604051610aeb9190612194565b60405180910390a1610b67565b60045460065410610b66576000600860006101000a81548160ff02191690836002811115610b2957610b28611819565b5b02179055507f5369558c667e962b633128a01c31764d053da51f61d17370d327ed17f77deccc30604051610b5d9190612194565b60405180910390a15b5b505050565b60018054610b79906120f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba5906120f0565b8015610bf25780601f10610bc757610100808354040283529160200191610bf2565b820191906000526020600020905b815481529060010190602001808311610bd557829003601f168201915b505050505081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c8a57336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610c819190612194565b60405180910390fd5b600060065411610cd157306040517f6db510f5000000000000000000000000000000000000000000000000000000008152600401610cc89190612194565b60405180910390fd5b6001600a60016101000a81548160ff021916908315150217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d7e57336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610d759190612194565b60405180910390fd5b600a60009054906101000a900460ff16610dcf57306040517f8019f726000000000000000000000000000000000000000000000000000000008152600401610dc69190612194565b60405180910390fd5b60006006549050600060068190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610e25906121e0565b60006040518083038185875af1925050503d8060008114610e62576040519150601f19603f3d011682016040523d82523d6000602084013e610e67565b606091505b505090508015610eea576000600a60016101000a81548160ff0219169083151502179055507fba5e837743d81ad0e6deb16089dbb65b549fdda8ad802fd8d4822884d70dc8b260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630604051610edd929190612254565b60405180910390a1610f1c565b6040517f11456ffb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60006060600060045460065410159050600060016002811115610f4657610f45611819565b5b600860009054906101000a900460ff166002811115610f6857610f67611819565b5b149050600060055460075442610f7e9190612151565b119050600080471190508380610fa35750818015610f995750825b8015610fa25750805b5b9550856040518060400160405280600381526020017f30783000000000000000000000000000000000000000000000000000000000008152509550955050505050915091565b600280811115610ffc57610ffb611819565b5b600860009054906101000a900460ff16600281111561101e5761101d611819565b5b141561106157306040517fd6d7e5c10000000000000000000000000000000000000000000000000000000081526004016110589190612194565b60405180910390fd5b6002600860006101000a81548160ff0219169083600281111561108757611086611819565b5b02179055507f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d306040516110bb9190612194565b60405180910390a1565b600280546110d2906120f0565b80601f01602080910402602001604051908101604052809291908181526020018280546110fe906120f0565b801561114b5780601f106111205761010080835404028352916020019161114b565b820191906000526020600020905b81548152906001019060200180831161112e57829003601f168201915b505050505081565b6000600860009054906101000a900460ff16905090565b600a60019054906101000a900460ff1681565b600860009054906101000a900460ff1681565b60096020528060005260406000206000915090505481565b60065481565b80600290805190602001906111c49291906116f9565b5050565b600060149054906101000a900460ff1681565b60018060028111156111f0576111ef611819565b5b600860009054906101000a900460ff16600281111561121257611211611819565b5b14611249576040517f0300809900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156112da57336040517f911018950000000000000000000000000000000000000000000000000000000081526004016112d19190612194565b60405180910390fd5b61132c34600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461164790919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113843460065461164790919063ffffffff16565b6006819055503373ffffffffffffffffffffffffffffffffffffffff167fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca2674923551208346006546040516113d492919061227d565b60405180910390a250565b600a60019054906101000a900460ff1661143057306040517fb1881e160000000000000000000000000000000000000000000000000000000081526004016114279190612194565b60405180910390fd5b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116114b457336040517fc43858590000000000000000000000000000000000000000000000000000000081526004016114ab9190612194565b60405180910390fd5b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600654101561158457306040517f6db510f500000000000000000000000000000000000000000000000000000000815260040161157b9190612194565b60405180910390fd5b6115998160065461165d90919063ffffffff16565b60068190555060008273ffffffffffffffffffffffffffffffffffffffff16826040516115c5906121e0565b60006040518083038185875af1925050503d8060008114611602576040519150601f19603f3d011682016040523d82523d6000602084013e611607565b606091505b5050905080611642576040517f92e9f8f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000818361165591906122a6565b905092915050565b6000818361166b9190612151565b905092915050565b604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600060018111156116b0576116af611819565b5b8152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600060028111156116f3576116f2611819565b5b81525090565b828054611705906120f0565b90600052602060002090601f016020900481019282611727576000855561176e565b82601f1061174057805160ff191683800117855561176e565b8280016001018555821561176e579182015b8281111561176d578251825591602001919060010190611752565b5b50905061177b919061177f565b5090565b5b80821115611798576000816000905550600101611780565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117c78261179c565b9050919050565b6117d7816117bc565b82525050565b60006020820190506117f260008301846117ce565b92915050565b60006118038261179c565b9050919050565b611813816117f8565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061185957611858611819565b5b50565b600081905061186a82611848565b919050565b600061187a8261185c565b9050919050565b61188a8161186f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118ca5780820151818401526020810190506118af565b838111156118d9576000848401525b50505050565b6000601f19601f8301169050919050565b60006118fb82611890565b611905818561189b565b93506119158185602086016118ac565b61191e816118df565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061196183836118f0565b905092915050565b6000602082019050919050565b600061198182611929565b61198b8185611934565b93508360208202850161199d85611945565b8060005b858110156119d957848403895281516119ba8582611955565b94506119c583611969565b925060208a019950506001810190506119a1565b50829750879550505050505092915050565b6000819050919050565b6119fe816119eb565b82525050565b60038110611a1557611a14611819565b5b50565b6000819050611a2682611a04565b919050565b6000611a3682611a18565b9050919050565b611a4681611a2b565b82525050565b600061012083016000830151611a65600086018261180a565b506020830151611a786020860182611881565b5060408301518482036040860152611a9082826118f0565b91505060608301518482036060860152611aaa82826118f0565b91505060808301518482036080860152611ac48282611976565b91505060a0830151611ad960a08601826119f5565b5060c0830151611aec60c08601826119f5565b5060e0830151611aff60e08601826119f5565b50610100830151611b14610100860182611a3d565b508091505092915050565b60006020820190508181036000830152611b398184611a4c565b905092915050565b611b4a816119eb565b82525050565b6000602082019050611b656000830184611b41565b92915050565b6000604051905090565b600080fd5b600080fd5b611b88816117f8565b8114611b9357600080fd5b50565b600081359050611ba581611b7f565b92915050565b600060208284031215611bc157611bc0611b75565b5b6000611bcf84828501611b96565b91505092915050565b611be1816119eb565b8114611bec57600080fd5b50565b600081359050611bfe81611bd8565b92915050565b600060208284031215611c1a57611c19611b75565b5b6000611c2884828501611bef565b91505092915050565b600082825260208201905092915050565b6000611c4d82611890565b611c578185611c31565b9350611c678185602086016118ac565b611c70816118df565b840191505092915050565b60006020820190508181036000830152611c958184611c42565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611cdf826118df565b810181811067ffffffffffffffff82111715611cfe57611cfd611ca7565b5b80604052505050565b6000611d11611b6b565b9050611d1d8282611cd6565b919050565b600067ffffffffffffffff821115611d3d57611d3c611ca7565b5b611d46826118df565b9050602081019050919050565b82818337600083830152505050565b6000611d75611d7084611d22565b611d07565b905082815260208101848484011115611d9157611d90611ca2565b5b611d9c848285611d53565b509392505050565b600082601f830112611db957611db8611c9d565b5b8135611dc9848260208601611d62565b91505092915050565b600060208284031215611de857611de7611b75565b5b600082013567ffffffffffffffff811115611e0657611e05611b7a565b5b611e1284828501611da4565b91505092915050565b60008115159050919050565b611e3081611e1b565b82525050565b6000602082019050611e4b6000830184611e27565b92915050565b600080fd5b600080fd5b60008083601f840112611e7157611e70611c9d565b5b8235905067ffffffffffffffff811115611e8e57611e8d611e51565b5b602083019150836001820283011115611eaa57611ea9611e56565b5b9250929050565b60008060208385031215611ec857611ec7611b75565b5b600083013567ffffffffffffffff811115611ee657611ee5611b7a565b5b611ef285828601611e5b565b92509250509250929050565b600067ffffffffffffffff821115611f1957611f18611ca7565b5b611f22826118df565b9050602081019050919050565b6000611f42611f3d84611efe565b611d07565b905082815260208101848484011115611f5e57611f5d611ca2565b5b611f69848285611d53565b509392505050565b600082601f830112611f8657611f85611c9d565b5b8135611f96848260208601611f2f565b91505092915050565b600060208284031215611fb557611fb4611b75565b5b600082013567ffffffffffffffff811115611fd357611fd2611b7a565b5b611fdf84828501611f71565b91505092915050565b600081519050919050565b600082825260208201905092915050565b600061200f82611fe8565b6120198185611ff3565b93506120298185602086016118ac565b612032816118df565b840191505092915050565b60006040820190506120526000830185611e27565b81810360208301526120648184612004565b90509392505050565b61207681611a2b565b82525050565b6000602082019050612091600083018461206d565b92915050565b6120a08161186f565b82525050565b60006020820190506120bb6000830184612097565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061210857607f821691505b6020821081141561211c5761211b6120c1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061215c826119eb565b9150612167836119eb565b92508282101561217a57612179612122565b5b828203905092915050565b61218e816117f8565b82525050565b60006020820190506121a96000830184612185565b92915050565b600081905092915050565b50565b60006121ca6000836121af565b91506121d5826121ba565b600082019050919050565b60006121eb826121bd565b9150819050919050565b6000819050919050565b600061221a6122156122108461179c565b6121f5565b61179c565b9050919050565b600061222c826121ff565b9050919050565b600061223e82612221565b9050919050565b61224e81612233565b82525050565b60006040820190506122696000830185612245565b6122766020830184612185565b9392505050565b60006040820190506122926000830185611b41565b61229f6020830184611b41565b9392505050565b60006122b1826119eb565b91506122bc836119eb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156122f1576122f0612122565b5b82820190509291505056fea2646970667358221220d933432822acb0d7c792158d9456fed7ff3363d2d957170f338f3d6b49560e8d64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106101815760003560e01c806363bd1d4a116100d1578063c19d93fb1161008a578063e735b48a11610064578063e735b48a1461053f578063ed44c6ab14610568578063ed88c68e14610593578063fa89401a1461059d57610181565b8063c19d93fb146104ac578063cc6cb19a146104d7578063ce845d1d1461051457610181565b806363bd1d4a146103bf5780636e04ff0d146103d657806371aac7f9146104145780637284e4161461042b5780637fb3761e14610456578063baf9ec5e1461048157610181565b806320822abc1161013e5780634298b0cd116101185780634298b0cd146103295780634585e33b146103545780634a79d50c1461037d57806359c656df146103a857610181565b806320822abc146102985780632636b945146102d557806337fb13b01461030057610181565b806302d05d3f146101865780630c611f24146101b15780630fb5a6b4146101dc57806312065fe0146102075780631910bdc2146102325780631b50ad091461026f575b600080fd5b34801561019257600080fd5b5061019b6105c6565b6040516101a891906117dd565b60405180910390f35b3480156101bd57600080fd5b506101c66105ea565b6040516101d39190611b1f565b60405180910390f35b3480156101e857600080fd5b506101f161089a565b6040516101fe9190611b50565b60405180910390f35b34801561021357600080fd5b5061021c6108a0565b6040516102299190611b50565b60405180910390f35b34801561023e57600080fd5b5061025960048036038101906102549190611bab565b6108aa565b6040516102669190611b50565b60405180910390f35b34801561027b57600080fd5b5061029660048036038101906102919190611c04565b6108f3565b005b3480156102a457600080fd5b506102bf60048036038101906102ba9190611c04565b610911565b6040516102cc9190611c7b565b60405180910390f35b3480156102e157600080fd5b506102ea6109bd565b6040516102f79190611b50565b60405180910390f35b34801561030c57600080fd5b5061032760048036038101906103229190611dd2565b6109c3565b005b34801561033557600080fd5b5061033e6109dd565b60405161034b9190611e36565b60405180910390f35b34801561036057600080fd5b5061037b60048036038101906103769190611eb1565b6109f0565b005b34801561038957600080fd5b50610392610b6c565b60405161039f9190611c7b565b60405180910390f35b3480156103b457600080fd5b506103bd610bfa565b005b3480156103cb57600080fd5b506103d4610cee565b005b3480156103e257600080fd5b506103fd60048036038101906103f89190611f9f565b610f20565b60405161040b92919061203d565b60405180910390f35b34801561042057600080fd5b50610429610fe9565b005b34801561043757600080fd5b506104406110c5565b60405161044d9190611c7b565b60405180910390f35b34801561046257600080fd5b5061046b611153565b604051610478919061207c565b60405180910390f35b34801561048d57600080fd5b5061049661116a565b6040516104a39190611e36565b60405180910390f35b3480156104b857600080fd5b506104c161117d565b6040516104ce919061207c565b60405180910390f35b3480156104e357600080fd5b506104fe60048036038101906104f99190611bab565b611190565b60405161050b9190611b50565b60405180910390f35b34801561052057600080fd5b506105296111a8565b6040516105369190611b50565b60405180910390f35b34801561054b57600080fd5b5061056660048036038101906105619190611dd2565b6111ae565b005b34801561057457600080fd5b5061057d6111c8565b60405161058a91906120a6565b60405180910390f35b61059b6111db565b005b3480156105a957600080fd5b506105c460048036038101906105bf9190611bab565b6113df565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105f2611673565b60405180610120016040528060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600060149054906101000a900460ff16600181111561065c5761065b611819565b5b81526020016001805461066e906120f0565b80601f016020809104026020016040519081016040528092919081815260200182805461069a906120f0565b80156106e75780601f106106bc576101008083540402835291602001916106e7565b820191906000526020600020905b8154815290600101906020018083116106ca57829003601f168201915b50505050508152602001600280546106fe906120f0565b80601f016020809104026020016040519081016040528092919081815260200182805461072a906120f0565b80156107775780601f1061074c57610100808354040283529160200191610777565b820191906000526020600020905b81548152906001019060200180831161075a57829003601f168201915b505050505081526020016003805480602002602001604051908101604052809291908181526020016000905b8282101561084f5783829060005260206000200180546107c2906120f0565b80601f01602080910402602001604051908101604052809291908181526020018280546107ee906120f0565b801561083b5780601f106108105761010080835404028352916020019161083b565b820191906000526020600020905b81548152906001019060200180831161081e57829003601f168201915b5050505050815260200190600101906107a3565b505050508152602001600454815260200160055481526020016006548152602001600860009054906101000a900460ff16600281111561089257610891611819565b5b815250905090565b60055481565b6000600654905090565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109088160055461164790919063ffffffff16565b60058190555050565b6003818154811061092157600080fd5b90600052602060002001600091509050805461093c906120f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610968906120f0565b80156109b55780601f1061098a576101008083540402835291602001916109b5565b820191906000526020600020905b81548152906001019060200180831161099857829003601f168201915b505050505081565b60045481565b80600190805190602001906109d99291906116f9565b5050565b600a60009054906101000a900460ff1681565b6000610a0a60405180602001604052806000815250610f20565b50905080610a44576040517f311f87a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600a60006101000a81548160ff0219169083151502179055506001600a60016101000a81548160ff02191690831515021790555060055460075442610a8b9190612151565b1115610af8576002600860006101000a81548160ff02191690836002811115610ab757610ab6611819565b5b02179055507f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d30604051610aeb9190612194565b60405180910390a1610b67565b60045460065410610b66576000600860006101000a81548160ff02191690836002811115610b2957610b28611819565b5b02179055507f5369558c667e962b633128a01c31764d053da51f61d17370d327ed17f77deccc30604051610b5d9190612194565b60405180910390a15b5b505050565b60018054610b79906120f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba5906120f0565b8015610bf25780601f10610bc757610100808354040283529160200191610bf2565b820191906000526020600020905b815481529060010190602001808311610bd557829003601f168201915b505050505081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c8a57336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610c819190612194565b60405180910390fd5b600060065411610cd157306040517f6db510f5000000000000000000000000000000000000000000000000000000008152600401610cc89190612194565b60405180910390fd5b6001600a60016101000a81548160ff021916908315150217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d7e57336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610d759190612194565b60405180910390fd5b600a60009054906101000a900460ff16610dcf57306040517f8019f726000000000000000000000000000000000000000000000000000000008152600401610dc69190612194565b60405180910390fd5b60006006549050600060068190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610e25906121e0565b60006040518083038185875af1925050503d8060008114610e62576040519150601f19603f3d011682016040523d82523d6000602084013e610e67565b606091505b505090508015610eea576000600a60016101000a81548160ff0219169083151502179055507fba5e837743d81ad0e6deb16089dbb65b549fdda8ad802fd8d4822884d70dc8b260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630604051610edd929190612254565b60405180910390a1610f1c565b6040517f11456ffb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60006060600060045460065410159050600060016002811115610f4657610f45611819565b5b600860009054906101000a900460ff166002811115610f6857610f67611819565b5b149050600060055460075442610f7e9190612151565b119050600080471190508380610fa35750818015610f995750825b8015610fa25750805b5b9550856040518060400160405280600381526020017f30783000000000000000000000000000000000000000000000000000000000008152509550955050505050915091565b600280811115610ffc57610ffb611819565b5b600860009054906101000a900460ff16600281111561101e5761101d611819565b5b141561106157306040517fd6d7e5c10000000000000000000000000000000000000000000000000000000081526004016110589190612194565b60405180910390fd5b6002600860006101000a81548160ff0219169083600281111561108757611086611819565b5b02179055507f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d306040516110bb9190612194565b60405180910390a1565b600280546110d2906120f0565b80601f01602080910402602001604051908101604052809291908181526020018280546110fe906120f0565b801561114b5780601f106111205761010080835404028352916020019161114b565b820191906000526020600020905b81548152906001019060200180831161112e57829003601f168201915b505050505081565b6000600860009054906101000a900460ff16905090565b600a60019054906101000a900460ff1681565b600860009054906101000a900460ff1681565b60096020528060005260406000206000915090505481565b60065481565b80600290805190602001906111c49291906116f9565b5050565b600060149054906101000a900460ff1681565b60018060028111156111f0576111ef611819565b5b600860009054906101000a900460ff16600281111561121257611211611819565b5b14611249576040517f0300809900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156112da57336040517f911018950000000000000000000000000000000000000000000000000000000081526004016112d19190612194565b60405180910390fd5b61132c34600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461164790919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113843460065461164790919063ffffffff16565b6006819055503373ffffffffffffffffffffffffffffffffffffffff167fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca2674923551208346006546040516113d492919061227d565b60405180910390a250565b600a60019054906101000a900460ff1661143057306040517fb1881e160000000000000000000000000000000000000000000000000000000081526004016114279190612194565b60405180910390fd5b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116114b457336040517fc43858590000000000000000000000000000000000000000000000000000000081526004016114ab9190612194565b60405180910390fd5b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600654101561158457306040517f6db510f500000000000000000000000000000000000000000000000000000000815260040161157b9190612194565b60405180910390fd5b6115998160065461165d90919063ffffffff16565b60068190555060008273ffffffffffffffffffffffffffffffffffffffff16826040516115c5906121e0565b60006040518083038185875af1925050503d8060008114611602576040519150601f19603f3d011682016040523d82523d6000602084013e611607565b606091505b5050905080611642576040517f92e9f8f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000818361165591906122a6565b905092915050565b6000818361166b9190612151565b905092915050565b604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600060018111156116b0576116af611819565b5b8152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600060028111156116f3576116f2611819565b5b81525090565b828054611705906120f0565b90600052602060002090601f016020900481019282611727576000855561176e565b82601f1061174057805160ff191683800117855561176e565b8280016001018555821561176e579182015b8281111561176d578251825591602001919060010190611752565b5b50905061177b919061177f565b5090565b5b80821115611798576000816000905550600101611780565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117c78261179c565b9050919050565b6117d7816117bc565b82525050565b60006020820190506117f260008301846117ce565b92915050565b60006118038261179c565b9050919050565b611813816117f8565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061185957611858611819565b5b50565b600081905061186a82611848565b919050565b600061187a8261185c565b9050919050565b61188a8161186f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118ca5780820151818401526020810190506118af565b838111156118d9576000848401525b50505050565b6000601f19601f8301169050919050565b60006118fb82611890565b611905818561189b565b93506119158185602086016118ac565b61191e816118df565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061196183836118f0565b905092915050565b6000602082019050919050565b600061198182611929565b61198b8185611934565b93508360208202850161199d85611945565b8060005b858110156119d957848403895281516119ba8582611955565b94506119c583611969565b925060208a019950506001810190506119a1565b50829750879550505050505092915050565b6000819050919050565b6119fe816119eb565b82525050565b60038110611a1557611a14611819565b5b50565b6000819050611a2682611a04565b919050565b6000611a3682611a18565b9050919050565b611a4681611a2b565b82525050565b600061012083016000830151611a65600086018261180a565b506020830151611a786020860182611881565b5060408301518482036040860152611a9082826118f0565b91505060608301518482036060860152611aaa82826118f0565b91505060808301518482036080860152611ac48282611976565b91505060a0830151611ad960a08601826119f5565b5060c0830151611aec60c08601826119f5565b5060e0830151611aff60e08601826119f5565b50610100830151611b14610100860182611a3d565b508091505092915050565b60006020820190508181036000830152611b398184611a4c565b905092915050565b611b4a816119eb565b82525050565b6000602082019050611b656000830184611b41565b92915050565b6000604051905090565b600080fd5b600080fd5b611b88816117f8565b8114611b9357600080fd5b50565b600081359050611ba581611b7f565b92915050565b600060208284031215611bc157611bc0611b75565b5b6000611bcf84828501611b96565b91505092915050565b611be1816119eb565b8114611bec57600080fd5b50565b600081359050611bfe81611bd8565b92915050565b600060208284031215611c1a57611c19611b75565b5b6000611c2884828501611bef565b91505092915050565b600082825260208201905092915050565b6000611c4d82611890565b611c578185611c31565b9350611c678185602086016118ac565b611c70816118df565b840191505092915050565b60006020820190508181036000830152611c958184611c42565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611cdf826118df565b810181811067ffffffffffffffff82111715611cfe57611cfd611ca7565b5b80604052505050565b6000611d11611b6b565b9050611d1d8282611cd6565b919050565b600067ffffffffffffffff821115611d3d57611d3c611ca7565b5b611d46826118df565b9050602081019050919050565b82818337600083830152505050565b6000611d75611d7084611d22565b611d07565b905082815260208101848484011115611d9157611d90611ca2565b5b611d9c848285611d53565b509392505050565b600082601f830112611db957611db8611c9d565b5b8135611dc9848260208601611d62565b91505092915050565b600060208284031215611de857611de7611b75565b5b600082013567ffffffffffffffff811115611e0657611e05611b7a565b5b611e1284828501611da4565b91505092915050565b60008115159050919050565b611e3081611e1b565b82525050565b6000602082019050611e4b6000830184611e27565b92915050565b600080fd5b600080fd5b60008083601f840112611e7157611e70611c9d565b5b8235905067ffffffffffffffff811115611e8e57611e8d611e51565b5b602083019150836001820283011115611eaa57611ea9611e56565b5b9250929050565b60008060208385031215611ec857611ec7611b75565b5b600083013567ffffffffffffffff811115611ee657611ee5611b7a565b5b611ef285828601611e5b565b92509250509250929050565b600067ffffffffffffffff821115611f1957611f18611ca7565b5b611f22826118df565b9050602081019050919050565b6000611f42611f3d84611efe565b611d07565b905082815260208101848484011115611f5e57611f5d611ca2565b5b611f69848285611d53565b509392505050565b600082601f830112611f8657611f85611c9d565b5b8135611f96848260208601611f2f565b91505092915050565b600060208284031215611fb557611fb4611b75565b5b600082013567ffffffffffffffff811115611fd357611fd2611b7a565b5b611fdf84828501611f71565b91505092915050565b600081519050919050565b600082825260208201905092915050565b600061200f82611fe8565b6120198185611ff3565b93506120298185602086016118ac565b612032816118df565b840191505092915050565b60006040820190506120526000830185611e27565b81810360208301526120648184612004565b90509392505050565b61207681611a2b565b82525050565b6000602082019050612091600083018461206d565b92915050565b6120a08161186f565b82525050565b60006020820190506120bb6000830184612097565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061210857607f821691505b6020821081141561211c5761211b6120c1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061215c826119eb565b9150612167836119eb565b92508282101561217a57612179612122565b5b828203905092915050565b61218e816117f8565b82525050565b60006020820190506121a96000830184612185565b92915050565b600081905092915050565b50565b60006121ca6000836121af565b91506121d5826121ba565b600082019050919050565b60006121eb826121bd565b9150819050919050565b6000819050919050565b600061221a6122156122108461179c565b6121f5565b61179c565b9050919050565b600061222c826121ff565b9050919050565b600061223e82612221565b9050919050565b61224e81612233565b82525050565b60006040820190506122696000830185612245565b6122766020830184612185565b9392505050565b60006040820190506122926000830185611b41565b61229f6020830184611b41565b9392505050565b60006122b1826119eb565b91506122bc836119eb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156122f1576122f0612122565b5b82820190509291505056fea2646970667358221220d933432822acb0d7c792158d9456fed7ff3363d2d957170f338f3d6b49560e8d64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "checkUpkeep(bytes)": {
        "details": "this is the function chainlink keepers calls chekupkeep returns true to trigger the action after the interval has passed"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 388,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "creator",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      },
      {
        "astId": 391,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "creatorType",
        "offset": 20,
        "slot": "0",
        "type": "t_enum(CreatorType)386"
      },
      {
        "astId": 393,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "title",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 395,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "description",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 398,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "tags",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 400,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "goalAmount",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 402,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "duration",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 404,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "currentBalance",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 406,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "s_lastTimeStamp",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 411,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "state",
        "offset": 0,
        "slot": "8",
        "type": "t_enum(State)383"
      },
      {
        "astId": 415,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "donations",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 417,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "nowPayable",
        "offset": 0,
        "slot": "10",
        "type": "t_bool"
      },
      {
        "astId": 419,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "nowRefunding",
        "offset": 1,
        "slot": "10",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(CreatorType)386": {
        "encoding": "inplace",
        "label": "enum Campaign.CreatorType",
        "numberOfBytes": "1"
      },
      "t_enum(State)383": {
        "encoding": "inplace",
        "label": "enum Campaign.State",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}