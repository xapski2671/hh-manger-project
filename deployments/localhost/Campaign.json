{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_creatorType",
          "type": "uint64"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_tags",
          "type": "string[]"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "Campaign__AlreadyExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Campaign__DonatorIsCreator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donatorAddress",
          "type": "address"
        }
      ],
      "name": "Campaign__NoDonationsHere",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Campaign__NotCreator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Campaign__NotInState",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "Campaign__NotRefundable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Campaign__RefundFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Campaign__UpkeepNotNeeded",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignExpired",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignSuccessful",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CreatorPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "currentBalance",
          "type": "uint256"
        }
      ],
      "name": "FundingRecieved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "allowRefunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creatorType",
      "outputs": [
        {
          "internalType": "enum Campaign.CreatorType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "donations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "duration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCampaignDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "enum Campaign.CreatorType",
              "name": "creatorType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "tags",
              "type": "string[]"
            },
            {
              "internalType": "uint256",
              "name": "goalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentBalance",
              "type": "uint256"
            },
            {
              "internalType": "enum Campaign.State",
              "name": "currentState",
              "type": "uint8"
            }
          ],
          "internalType": "struct Campaign.CampaignObject",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCampaignState",
      "outputs": [
        {
          "internalType": "enum Campaign.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "getDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "goalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nowPayable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nowRefunding",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Campaign.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tags",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "title",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newDescription",
          "type": "string"
        }
      ],
      "name": "updateDescription",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_addedTime",
          "type": "uint256"
        }
      ],
      "name": "updateDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newTitle",
          "type": "string"
        }
      ],
      "name": "updateTitle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9d5a202e9f6796d79e218c8990f61bbcc0703c3dd9e9daddf6b515549a89b008",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "2080393",
    "logsBloom": "0x
    "blockHash": "0x860dc329283f6c3f5a6c0d7257256ddafe6e0d4021b23d8445e4657b1c58b460",
    "transactionHash": "0x9d5a202e9f6796d79e218c8990f61bbcc0703c3dd9e9daddf6b515549a89b008",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "2080393",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    1,
    "Help Jane Lynn",
    "help Jane Lynn reach her goal",
    [
      "movie",
      "acting",
      "fundraise"
    ],
    "3000000000000000000",
    "345600"
  ],
  "numDeployments": 1,
  "solcInputHash": "2442e532ce1037c64bbb80bc525fbf78",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_creatorType\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_tags\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"Campaign__AlreadyExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Campaign__DonatorIsCreator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donatorAddress\",\"type\":\"address\"}],\"name\":\"Campaign__NoDonationsHere\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Campaign__NotCreator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Campaign__NotInState\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"Campaign__NotRefundable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Campaign__RefundFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Campaign__UpkeepNotNeeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CreatorPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"}],\"name\":\"FundingRecieved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allowRefunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorType\",\"outputs\":[{\"internalType\":\"enum Campaign.CreatorType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"donations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaignDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"enum Campaign.CreatorType\",\"name\":\"creatorType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"tags\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"enum Campaign.State\",\"name\":\"currentState\",\"type\":\"uint8\"}],\"internalType\":\"struct Campaign.CampaignObject\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaignState\",\"outputs\":[{\"internalType\":\"enum Campaign.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"getDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nowPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nowRefunding\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum Campaign.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tags\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"title\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newDescription\",\"type\":\"string\"}],\"name\":\"updateDescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_addedTime\",\"type\":\"uint256\"}],\"name\":\"updateDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newTitle\",\"type\":\"string\"}],\"name\":\"updateTitle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"this is the function chainlink keepers calls chekupkeep returns true to trigger the action after the interval has passed\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Campaign.sol\":\"Campaign\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Campaign.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\n\\r\\n// errors\\r\\nerror Campaign__NotInState();\\r\\nerror Campaign__NotCreator(address _address);\\r\\nerror Campaign__DonatorIsCreator(address _address);\\r\\nerror Campaign__PayoutFailed();\\r\\nerror Campaign__NoDonationsHere(address _donatorAddress);\\r\\nerror Campaign__RefundFailed();\\r\\nerror Campaign__UpkeepNotNeeded();\\r\\nerror Campaign__NotWithrawable(address _campaignAddress);\\r\\nerror Campaign__AlreadyExpired(address _campaignAddress);\\r\\nerror Campaign__NotRefundable(address _campaignAddress);\\r\\n\\r\\ncontract Campaign is KeeperCompatibleInterface {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  // enums\\r\\n  enum State {\\r\\n    Successful,\\r\\n    Fundraising,\\r\\n    Expired\\r\\n  }\\r\\n\\r\\n  enum CreatorType {\\r\\n    Sole,\\r\\n    Team\\r\\n  }\\r\\n\\r\\n\\r\\n  // state variables\\r\\n  address payable public creator;\\r\\n  CreatorType public creatorType;\\r\\n  string public title;\\r\\n  string public description;\\r\\n  string[] public tags;\\r\\n  uint256 public goalAmount;\\r\\n  uint256 public duration;\\r\\n  uint256 public currentBalance;\\r\\n  uint256 private s_lastTimeStamp;\\r\\n  State public state = State.Fundraising; // default state\\r\\n  mapping (address => uint256) public donations;\\r\\n  bool public nowPayable;\\r\\n  bool public nowRefunding;\\r\\n\\r\\n\\r\\n  struct CampaignObject {\\r\\n    address creator;\\r\\n    CreatorType creatorType;\\r\\n    string title;\\r\\n    string description;\\r\\n    string[] tags;\\r\\n    uint256 goalAmount;\\r\\n    uint256 duration;\\r\\n    uint256 currentBalance;\\r\\n    State currentState;\\r\\n  }\\r\\n\\r\\n\\r\\n  // events\\r\\n  event FundingRecieved (\\r\\n    address indexed contributor,\\r\\n    uint256 amount,\\r\\n    uint256 currentBalance\\r\\n  );\\r\\n  event CreatorPaid(address creator, address campaignAddress);\\r\\n  event CampaignSuccessful(address campaignAddress);\\r\\n  event CampaignExpired(address campaignAddress);\\r\\n\\r\\n\\r\\n  // modifiers\\r\\n  modifier inState(State _state) {\\r\\n    if (state != _state){revert Campaign__NotInState();}\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  modifier isCreator() {\\r\\n    if(msg.sender != creator){revert Campaign__NotCreator(msg.sender);}\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  constructor (\\r\\n    address _creator,\\r\\n    uint64 _creatorType,\\r\\n    string memory _title,\\r\\n    string memory _description,\\r\\n    string[] memory _tags,\\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration\\r\\n  ) {\\r\\n    creator = payable(_creator);\\r\\n    creatorType = CreatorType(_creatorType);\\r\\n    title = _title;\\r\\n    description = _description;\\r\\n    tags = _tags;\\r\\n    goalAmount = _goalAmount;\\r\\n    duration = _duration;\\r\\n    s_lastTimeStamp = block.timestamp;\\r\\n    currentBalance = 0;\\r\\n    nowPayable = false;\\r\\n    nowRefunding = false;\\r\\n  }\\r\\n\\r\\n  function donate() external inState(State.Fundraising) payable {\\r\\n    if (msg.sender == creator){revert Campaign__DonatorIsCreator(msg.sender);}\\r\\n    donations[msg.sender] = donations[msg.sender].add(msg.value);\\r\\n    currentBalance = currentBalance.add(msg.value);\\r\\n    emit FundingRecieved(msg.sender, msg.value, currentBalance);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev this is the function chainlink keepers calls\\r\\n    chekupkeep returns true to trigger the action after the interval has passed\\r\\n   */\\r\\n  function checkUpkeep(bytes memory /**checkData */) public view override\\r\\n  returns (bool upkeepNeeded, bytes memory /**performData */) \\r\\n  {\\r\\n    bool goalReached = currentBalance >= goalAmount;\\r\\n    bool isOpen = state == State.Fundraising;\\r\\n    bool timePassed = ((block.timestamp - s_lastTimeStamp) > duration);\\r\\n    bool hasBalance = address(this).balance > 0;\\r\\n    upkeepNeeded = (goalReached || timePassed && isOpen && hasBalance) ;\\r\\n    return (upkeepNeeded, \\\"0x0\\\");\\r\\n  }\\r\\n\\r\\n  function performUpkeep(bytes calldata /**performData */) external override {\\r\\n    (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n    if(!upkeepNeeded){revert Campaign__UpkeepNotNeeded();}\\r\\n    if((block.timestamp - s_lastTimeStamp) > duration){\\r\\n      state = State.Expired;\\r\\n      // allow creator withdraw funds\\r\\n      nowPayable = true;\\r\\n      nowRefunding = true; \\r\\n    }\\r\\n    else if(currentBalance >= goalAmount){\\r\\n      state = State.Successful;\\r\\n      nowPayable = true;\\r\\n      nowRefunding = true;\\r\\n      emit CampaignSuccessful(address(this));\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function payout() internal isCreator {\\r\\n    if(!nowPayable){revert Campaign__NotWithrawable(address(this));}\\r\\n    uint256 totalRaised = currentBalance;\\r\\n    currentBalance = 0;\\r\\n    (bool success, ) = creator.call{value: totalRaised}(\\\"\\\");\\r\\n    if(success){emit CreatorPaid(creator, address(this));}\\r\\n    else{revert Campaign__PayoutFailed();}\\r\\n  }\\r\\n\\r\\n  function refund(address _donator) public isCreator {\\r\\n    if(!nowRefunding){revert Campaign__NotRefundable(address(this));}\\r\\n    if(donations[_donator] <= 0){revert Campaign__NoDonationsHere(msg.sender);}\\r\\n    uint256 amountToRefund = donations[_donator];\\r\\n    donations[_donator] = 0;\\r\\n    currentBalance = currentBalance.sub(amountToRefund);\\r\\n    (bool success, ) = payable(_donator).call{value: amountToRefund}(\\\"\\\");\\r\\n    if(!success){revert Campaign__RefundFailed();} // TODO: test if it returns the money to mapping\\r\\n  }\\r\\n\\r\\n  function endCampaign() public {\\r\\n    if(state == State.Expired){revert Campaign__AlreadyExpired(address(this));}\\r\\n    state = State.Expired;\\r\\n  }\\r\\n\\r\\n  // update functions\\r\\n  function updateDuration(uint256 _addedTime) public {\\r\\n    duration = duration.add(_addedTime);\\r\\n  }\\r\\n\\r\\n  function updateTitle(string memory _newTitle) public {\\r\\n    title = _newTitle;\\r\\n  }\\r\\n\\r\\n  function updateDescription(string memory _newDescription) public {\\r\\n    description = _newDescription;\\r\\n  }\\r\\n  \\r\\n  function allowRefunds() public {\\r\\n    nowRefunding = true;\\r\\n  }\\r\\n\\r\\n  // getter functions\\r\\n  function getBalance() public view returns(uint256) {\\r\\n    return currentBalance;\\r\\n  }\\r\\n\\r\\n  function getCampaignState() public view returns(State) {\\r\\n    return state;\\r\\n  }\\r\\n\\r\\n  function getDonations(address _donator) public view returns(uint256) {\\r\\n    return donations[_donator];\\r\\n  }\\r\\n\\r\\n  function getCampaignDetails() public view returns(CampaignObject memory) {\\r\\n    return CampaignObject(\\r\\n      creator,\\r\\n      creatorType,\\r\\n      title,\\r\\n      description,\\r\\n      tags,\\r\\n      goalAmount,\\r\\n      duration,\\r\\n      currentBalance,\\r\\n      state\\r\\n    );\\r\\n  }\\r\\n}\",\"keccak256\":\"0x7b29e1eb8cd736b521e77458c77ff35efd2994a9e11718d53ab966dfa042e353\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526001600860006101000a81548160ff021916908360028111156200002d576200002c62000321565b5b02179055503480156200003f57600080fd5b50604051620027d3380380620027d38339818101604052810190620000659190620006ce565b866000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508567ffffffffffffffff166001811115620000c557620000c462000321565b5b600060146101000a81548160ff02191690836001811115620000ec57620000eb62000321565b5b02179055508460019080519060200190620001099291906200019c565b508360029080519060200190620001229291906200019c565b5082600390805190602001906200013b9291906200022d565b5081600481905550806005819055504260078190555060006006819055506000600a60006101000a81548160ff0219169083151502179055506000600a60016101000a81548160ff0219169083151502179055505050505050505062000843565b828054620001aa906200080d565b90600052602060002090601f016020900481019282620001ce57600085556200021a565b82601f10620001e957805160ff19168380011785556200021a565b828001600101855582156200021a579182015b8281111562000219578251825591602001919060010190620001fc565b5b50905062000229919062000294565b5090565b82805482825590600052602060002090810192821562000281579160200282015b82811115620002805782518290805190602001906200026f9291906200019c565b50916020019190600101906200024e565b5b509050620002909190620002b3565b5090565b5b80821115620002af57600081600090555060010162000295565b5090565b5b80821115620002d75760008181620002cd9190620002db565b50600101620002b4565b5090565b508054620002e9906200080d565b6000825580601f10620002fd57506200031e565b601f0160209004906000526020600020908101906200031d919062000294565b5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003918262000364565b9050919050565b620003a38162000384565b8114620003af57600080fd5b50565b600081519050620003c38162000398565b92915050565b600067ffffffffffffffff82169050919050565b620003e881620003c9565b8114620003f457600080fd5b50565b6000815190506200040881620003dd565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620004638262000418565b810181811067ffffffffffffffff8211171562000485576200048462000429565b5b80604052505050565b60006200049a62000350565b9050620004a8828262000458565b919050565b600067ffffffffffffffff821115620004cb57620004ca62000429565b5b620004d68262000418565b9050602081019050919050565b60005b8381101562000503578082015181840152602081019050620004e6565b8381111562000513576000848401525b50505050565b6000620005306200052a84620004ad565b6200048e565b9050828152602081018484840111156200054f576200054e62000413565b5b6200055c848285620004e3565b509392505050565b600082601f8301126200057c576200057b6200040e565b5b81516200058e84826020860162000519565b91505092915050565b600067ffffffffffffffff821115620005b557620005b462000429565b5b602082029050602081019050919050565b600080fd5b6000620005e2620005dc8462000597565b6200048e565b90508083825260208201905060208402830185811115620006085762000607620005c6565b5b835b818110156200065657805167ffffffffffffffff8111156200063157620006306200040e565b5b80860162000640898262000564565b855260208501945050506020810190506200060a565b5050509392505050565b600082601f8301126200067857620006776200040e565b5b81516200068a848260208601620005cb565b91505092915050565b6000819050919050565b620006a88162000693565b8114620006b457600080fd5b50565b600081519050620006c8816200069d565b92915050565b600080600080600080600060e0888a031215620006f057620006ef6200035a565b5b6000620007008a828b01620003b2565b9750506020620007138a828b01620003f7565b965050604088015167ffffffffffffffff8111156200073757620007366200035f565b5b620007458a828b0162000564565b955050606088015167ffffffffffffffff8111156200076957620007686200035f565b5b620007778a828b0162000564565b945050608088015167ffffffffffffffff8111156200079b576200079a6200035f565b5b620007a98a828b0162000660565b93505060a0620007bc8a828b01620006b7565b92505060c0620007cf8a828b01620006b7565b91505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200082657607f821691505b602082108114156200083d576200083c620007de565b5b50919050565b611f8080620008536000396000f3fe6080604052600436106101665760003560e01c806359c656df116100d1578063c19d93fb1161008a578063e735b48a11610064578063e735b48a1461050d578063ed44c6ab14610536578063ed88c68e14610561578063fa89401a1461056b57610166565b8063c19d93fb1461047a578063cc6cb19a146104a5578063ce845d1d146104e257610166565b806359c656df1461038d5780636e04ff0d146103a457806371aac7f9146103e25780637284e416146103f95780637fb3761e14610424578063baf9ec5e1461044f57610166565b806320822abc1161012357806320822abc1461027d5780632636b945146102ba57806337fb13b0146102e55780634298b0cd1461030e5780634585e33b146103395780634a79d50c1461036257610166565b806302d05d3f1461016b5780630c611f24146101965780630fb5a6b4146101c157806312065fe0146101ec5780631910bdc2146102175780631b50ad0914610254575b600080fd5b34801561017757600080fd5b50610180610594565b60405161018d91906114b3565b60405180910390f35b3480156101a257600080fd5b506101ab6105b8565b6040516101b891906117f5565b60405180910390f35b3480156101cd57600080fd5b506101d6610868565b6040516101e39190611826565b60405180910390f35b3480156101f857600080fd5b5061020161086e565b60405161020e9190611826565b60405180910390f35b34801561022357600080fd5b5061023e60048036038101906102399190611881565b610878565b60405161024b9190611826565b60405180910390f35b34801561026057600080fd5b5061027b600480360381019061027691906118da565b6108c1565b005b34801561028957600080fd5b506102a4600480360381019061029f91906118da565b6108df565b6040516102b19190611951565b60405180910390f35b3480156102c657600080fd5b506102cf61098b565b6040516102dc9190611826565b60405180910390f35b3480156102f157600080fd5b5061030c60048036038101906103079190611aa8565b610991565b005b34801561031a57600080fd5b506103236109ab565b6040516103309190611b0c565b60405180910390f35b34801561034557600080fd5b50610360600480360381019061035b9190611b87565b6109be565b005b34801561036e57600080fd5b50610377610b39565b6040516103849190611951565b60405180910390f35b34801561039957600080fd5b506103a2610bc7565b005b3480156103b057600080fd5b506103cb60048036038101906103c69190611c75565b610be4565b6040516103d9929190611d13565b60405180910390f35b3480156103ee57600080fd5b506103f7610cad565b005b34801561040557600080fd5b5061040e610d52565b60405161041b9190611951565b60405180910390f35b34801561043057600080fd5b50610439610de0565b6040516104469190611d52565b60405180910390f35b34801561045b57600080fd5b50610464610df7565b6040516104719190611b0c565b60405180910390f35b34801561048657600080fd5b5061048f610e0a565b60405161049c9190611d52565b60405180910390f35b3480156104b157600080fd5b506104cc60048036038101906104c79190611881565b610e1d565b6040516104d99190611826565b60405180910390f35b3480156104ee57600080fd5b506104f7610e35565b6040516105049190611826565b60405180910390f35b34801561051957600080fd5b50610534600480360381019061052f9190611aa8565b610e3b565b005b34801561054257600080fd5b5061054b610e55565b6040516105589190611d7c565b60405180910390f35b610569610e68565b005b34801561057757600080fd5b50610592600480360381019061058d9190611881565b61106c565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105c0611349565b60405180610120016040528060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600060149054906101000a900460ff16600181111561062a576106296114ef565b5b81526020016001805461063c90611dc6565b80601f016020809104026020016040519081016040528092919081815260200182805461066890611dc6565b80156106b55780601f1061068a576101008083540402835291602001916106b5565b820191906000526020600020905b81548152906001019060200180831161069857829003601f168201915b50505050508152602001600280546106cc90611dc6565b80601f01602080910402602001604051908101604052809291908181526020018280546106f890611dc6565b80156107455780601f1061071a57610100808354040283529160200191610745565b820191906000526020600020905b81548152906001019060200180831161072857829003601f168201915b505050505081526020016003805480602002602001604051908101604052809291908181526020016000905b8282101561081d57838290600052602060002001805461079090611dc6565b80601f01602080910402602001604051908101604052809291908181526020018280546107bc90611dc6565b80156108095780601f106107de57610100808354040283529160200191610809565b820191906000526020600020905b8154815290600101906020018083116107ec57829003601f168201915b505050505081526020019060010190610771565b505050508152602001600454815260200160055481526020016006548152602001600860009054906101000a900460ff1660028111156108605761085f6114ef565b5b815250905090565b60055481565b6000600654905090565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6108d68160055461131d90919063ffffffff16565b60058190555050565b600381815481106108ef57600080fd5b90600052602060002001600091509050805461090a90611dc6565b80601f016020809104026020016040519081016040528092919081815260200182805461093690611dc6565b80156109835780601f1061095857610100808354040283529160200191610983565b820191906000526020600020905b81548152906001019060200180831161096657829003601f168201915b505050505081565b60045481565b80600190805190602001906109a79291906113cf565b5050565b600a60009054906101000a900460ff1681565b60006109d860405180602001604052806000815250610be4565b50905080610a12576040517f311f87a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055460075442610a239190611e27565b1115610a8f576002600860006101000a81548160ff02191690836002811115610a4f57610a4e6114ef565b5b02179055506001600a60006101000a81548160ff0219169083151502179055506001600a60016101000a81548160ff021916908315150217905550610b34565b60045460065410610b33576000600860006101000a81548160ff02191690836002811115610ac057610abf6114ef565b5b02179055506001600a60006101000a81548160ff0219169083151502179055506001600a60016101000a81548160ff0219169083151502179055507f5369558c667e962b633128a01c31764d053da51f61d17370d327ed17f77deccc30604051610b2a9190611e6a565b60405180910390a15b5b505050565b60018054610b4690611dc6565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7290611dc6565b8015610bbf5780601f10610b9457610100808354040283529160200191610bbf565b820191906000526020600020905b815481529060010190602001808311610ba257829003601f168201915b505050505081565b6001600a60016101000a81548160ff021916908315150217905550565b60006060600060045460065410159050600060016002811115610c0a57610c096114ef565b5b600860009054906101000a900460ff166002811115610c2c57610c2b6114ef565b5b149050600060055460075442610c429190611e27565b119050600080471190508380610c675750818015610c5d5750825b8015610c665750805b5b9550856040518060400160405280600381526020017f30783000000000000000000000000000000000000000000000000000000000008152509550955050505050915091565b600280811115610cc057610cbf6114ef565b5b600860009054906101000a900460ff166002811115610ce257610ce16114ef565b5b1415610d2557306040517fd6d7e5c1000000000000000000000000000000000000000000000000000000008152600401610d1c9190611e6a565b60405180910390fd5b6002600860006101000a81548160ff02191690836002811115610d4b57610d4a6114ef565b5b0217905550565b60028054610d5f90611dc6565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8b90611dc6565b8015610dd85780601f10610dad57610100808354040283529160200191610dd8565b820191906000526020600020905b815481529060010190602001808311610dbb57829003601f168201915b505050505081565b6000600860009054906101000a900460ff16905090565b600a60019054906101000a900460ff1681565b600860009054906101000a900460ff1681565b60096020528060005260406000206000915090505481565b60065481565b8060029080519060200190610e519291906113cf565b5050565b600060149054906101000a900460ff1681565b6001806002811115610e7d57610e7c6114ef565b5b600860009054906101000a900460ff166002811115610e9f57610e9e6114ef565b5b14610ed6576040517f0300809900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610f6757336040517f91101895000000000000000000000000000000000000000000000000000000008152600401610f5e9190611e6a565b60405180910390fd5b610fb934600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461131d90919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110113460065461131d90919063ffffffff16565b6006819055503373ffffffffffffffffffffffffffffffffffffffff167fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca267492355120834600654604051611061929190611e85565b60405180910390a250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110fc57336040517fef54c8170000000000000000000000000000000000000000000000000000000081526004016110f39190611e6a565b60405180910390fd5b600a60019054906101000a900460ff1661114d57306040517fb1881e160000000000000000000000000000000000000000000000000000000081526004016111449190611e6a565b60405180910390fd5b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116111d157336040517fc43858590000000000000000000000000000000000000000000000000000000081526004016111c89190611e6a565b60405180910390fd5b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061126f8160065461133390919063ffffffff16565b60068190555060008273ffffffffffffffffffffffffffffffffffffffff168260405161129b90611edf565b60006040518083038185875af1925050503d80600081146112d8576040519150601f19603f3d011682016040523d82523d6000602084013e6112dd565b606091505b5050905080611318576040517f92e9f8f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000818361132b9190611ef4565b905092915050565b600081836113419190611e27565b905092915050565b604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160006001811115611386576113856114ef565b5b8152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600060028111156113c9576113c86114ef565b5b81525090565b8280546113db90611dc6565b90600052602060002090601f0160209004810192826113fd5760008555611444565b82601f1061141657805160ff1916838001178555611444565b82800160010185558215611444579182015b82811115611443578251825591602001919060010190611428565b5b5090506114519190611455565b5090565b5b8082111561146e576000816000905550600101611456565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061149d82611472565b9050919050565b6114ad81611492565b82525050565b60006020820190506114c860008301846114a4565b92915050565b60006114d982611472565b9050919050565b6114e9816114ce565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061152f5761152e6114ef565b5b50565b60008190506115408261151e565b919050565b600061155082611532565b9050919050565b61156081611545565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115a0578082015181840152602081019050611585565b838111156115af576000848401525b50505050565b6000601f19601f8301169050919050565b60006115d182611566565b6115db8185611571565b93506115eb818560208601611582565b6115f4816115b5565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061163783836115c6565b905092915050565b6000602082019050919050565b6000611657826115ff565b611661818561160a565b9350836020820285016116738561161b565b8060005b858110156116af5784840389528151611690858261162b565b945061169b8361163f565b925060208a01995050600181019050611677565b50829750879550505050505092915050565b6000819050919050565b6116d4816116c1565b82525050565b600381106116eb576116ea6114ef565b5b50565b60008190506116fc826116da565b919050565b600061170c826116ee565b9050919050565b61171c81611701565b82525050565b60006101208301600083015161173b60008601826114e0565b50602083015161174e6020860182611557565b506040830151848203604086015261176682826115c6565b9150506060830151848203606086015261178082826115c6565b9150506080830151848203608086015261179a828261164c565b91505060a08301516117af60a08601826116cb565b5060c08301516117c260c08601826116cb565b5060e08301516117d560e08601826116cb565b506101008301516117ea610100860182611713565b508091505092915050565b6000602082019050818103600083015261180f8184611722565b905092915050565b611820816116c1565b82525050565b600060208201905061183b6000830184611817565b92915050565b6000604051905090565b600080fd5b600080fd5b61185e816114ce565b811461186957600080fd5b50565b60008135905061187b81611855565b92915050565b6000602082840312156118975761189661184b565b5b60006118a58482850161186c565b91505092915050565b6118b7816116c1565b81146118c257600080fd5b50565b6000813590506118d4816118ae565b92915050565b6000602082840312156118f0576118ef61184b565b5b60006118fe848285016118c5565b91505092915050565b600082825260208201905092915050565b600061192382611566565b61192d8185611907565b935061193d818560208601611582565b611946816115b5565b840191505092915050565b6000602082019050818103600083015261196b8184611918565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119b5826115b5565b810181811067ffffffffffffffff821117156119d4576119d361197d565b5b80604052505050565b60006119e7611841565b90506119f382826119ac565b919050565b600067ffffffffffffffff821115611a1357611a1261197d565b5b611a1c826115b5565b9050602081019050919050565b82818337600083830152505050565b6000611a4b611a46846119f8565b6119dd565b905082815260208101848484011115611a6757611a66611978565b5b611a72848285611a29565b509392505050565b600082601f830112611a8f57611a8e611973565b5b8135611a9f848260208601611a38565b91505092915050565b600060208284031215611abe57611abd61184b565b5b600082013567ffffffffffffffff811115611adc57611adb611850565b5b611ae884828501611a7a565b91505092915050565b60008115159050919050565b611b0681611af1565b82525050565b6000602082019050611b216000830184611afd565b92915050565b600080fd5b600080fd5b60008083601f840112611b4757611b46611973565b5b8235905067ffffffffffffffff811115611b6457611b63611b27565b5b602083019150836001820283011115611b8057611b7f611b2c565b5b9250929050565b60008060208385031215611b9e57611b9d61184b565b5b600083013567ffffffffffffffff811115611bbc57611bbb611850565b5b611bc885828601611b31565b92509250509250929050565b600067ffffffffffffffff821115611bef57611bee61197d565b5b611bf8826115b5565b9050602081019050919050565b6000611c18611c1384611bd4565b6119dd565b905082815260208101848484011115611c3457611c33611978565b5b611c3f848285611a29565b509392505050565b600082601f830112611c5c57611c5b611973565b5b8135611c6c848260208601611c05565b91505092915050565b600060208284031215611c8b57611c8a61184b565b5b600082013567ffffffffffffffff811115611ca957611ca8611850565b5b611cb584828501611c47565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000611ce582611cbe565b611cef8185611cc9565b9350611cff818560208601611582565b611d08816115b5565b840191505092915050565b6000604082019050611d286000830185611afd565b8181036020830152611d3a8184611cda565b90509392505050565b611d4c81611701565b82525050565b6000602082019050611d676000830184611d43565b92915050565b611d7681611545565b82525050565b6000602082019050611d916000830184611d6d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611dde57607f821691505b60208210811415611df257611df1611d97565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e32826116c1565b9150611e3d836116c1565b925082821015611e5057611e4f611df8565b5b828203905092915050565b611e64816114ce565b82525050565b6000602082019050611e7f6000830184611e5b565b92915050565b6000604082019050611e9a6000830185611817565b611ea76020830184611817565b9392505050565b600081905092915050565b50565b6000611ec9600083611eae565b9150611ed482611eb9565b600082019050919050565b6000611eea82611ebc565b9150819050919050565b6000611eff826116c1565b9150611f0a836116c1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f3f57611f3e611df8565b5b82820190509291505056fea26469706673582212204868b0cacf811e8bfaf6d678f9e09645929ebedbfa0a1d36b7ac7f4495fd30e764736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106101665760003560e01c806359c656df116100d1578063c19d93fb1161008a578063e735b48a11610064578063e735b48a1461050d578063ed44c6ab14610536578063ed88c68e14610561578063fa89401a1461056b57610166565b8063c19d93fb1461047a578063cc6cb19a146104a5578063ce845d1d146104e257610166565b806359c656df1461038d5780636e04ff0d146103a457806371aac7f9146103e25780637284e416146103f95780637fb3761e14610424578063baf9ec5e1461044f57610166565b806320822abc1161012357806320822abc1461027d5780632636b945146102ba57806337fb13b0146102e55780634298b0cd1461030e5780634585e33b146103395780634a79d50c1461036257610166565b806302d05d3f1461016b5780630c611f24146101965780630fb5a6b4146101c157806312065fe0146101ec5780631910bdc2146102175780631b50ad0914610254575b600080fd5b34801561017757600080fd5b50610180610594565b60405161018d91906114b3565b60405180910390f35b3480156101a257600080fd5b506101ab6105b8565b6040516101b891906117f5565b60405180910390f35b3480156101cd57600080fd5b506101d6610868565b6040516101e39190611826565b60405180910390f35b3480156101f857600080fd5b5061020161086e565b60405161020e9190611826565b60405180910390f35b34801561022357600080fd5b5061023e60048036038101906102399190611881565b610878565b60405161024b9190611826565b60405180910390f35b34801561026057600080fd5b5061027b600480360381019061027691906118da565b6108c1565b005b34801561028957600080fd5b506102a4600480360381019061029f91906118da565b6108df565b6040516102b19190611951565b60405180910390f35b3480156102c657600080fd5b506102cf61098b565b6040516102dc9190611826565b60405180910390f35b3480156102f157600080fd5b5061030c60048036038101906103079190611aa8565b610991565b005b34801561031a57600080fd5b506103236109ab565b6040516103309190611b0c565b60405180910390f35b34801561034557600080fd5b50610360600480360381019061035b9190611b87565b6109be565b005b34801561036e57600080fd5b50610377610b39565b6040516103849190611951565b60405180910390f35b34801561039957600080fd5b506103a2610bc7565b005b3480156103b057600080fd5b506103cb60048036038101906103c69190611c75565b610be4565b6040516103d9929190611d13565b60405180910390f35b3480156103ee57600080fd5b506103f7610cad565b005b34801561040557600080fd5b5061040e610d52565b60405161041b9190611951565b60405180910390f35b34801561043057600080fd5b50610439610de0565b6040516104469190611d52565b60405180910390f35b34801561045b57600080fd5b50610464610df7565b6040516104719190611b0c565b60405180910390f35b34801561048657600080fd5b5061048f610e0a565b60405161049c9190611d52565b60405180910390f35b3480156104b157600080fd5b506104cc60048036038101906104c79190611881565b610e1d565b6040516104d99190611826565b60405180910390f35b3480156104ee57600080fd5b506104f7610e35565b6040516105049190611826565b60405180910390f35b34801561051957600080fd5b50610534600480360381019061052f9190611aa8565b610e3b565b005b34801561054257600080fd5b5061054b610e55565b6040516105589190611d7c565b60405180910390f35b610569610e68565b005b34801561057757600080fd5b50610592600480360381019061058d9190611881565b61106c565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105c0611349565b60405180610120016040528060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600060149054906101000a900460ff16600181111561062a576106296114ef565b5b81526020016001805461063c90611dc6565b80601f016020809104026020016040519081016040528092919081815260200182805461066890611dc6565b80156106b55780601f1061068a576101008083540402835291602001916106b5565b820191906000526020600020905b81548152906001019060200180831161069857829003601f168201915b50505050508152602001600280546106cc90611dc6565b80601f01602080910402602001604051908101604052809291908181526020018280546106f890611dc6565b80156107455780601f1061071a57610100808354040283529160200191610745565b820191906000526020600020905b81548152906001019060200180831161072857829003601f168201915b505050505081526020016003805480602002602001604051908101604052809291908181526020016000905b8282101561081d57838290600052602060002001805461079090611dc6565b80601f01602080910402602001604051908101604052809291908181526020018280546107bc90611dc6565b80156108095780601f106107de57610100808354040283529160200191610809565b820191906000526020600020905b8154815290600101906020018083116107ec57829003601f168201915b505050505081526020019060010190610771565b505050508152602001600454815260200160055481526020016006548152602001600860009054906101000a900460ff1660028111156108605761085f6114ef565b5b815250905090565b60055481565b6000600654905090565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6108d68160055461131d90919063ffffffff16565b60058190555050565b600381815481106108ef57600080fd5b90600052602060002001600091509050805461090a90611dc6565b80601f016020809104026020016040519081016040528092919081815260200182805461093690611dc6565b80156109835780601f1061095857610100808354040283529160200191610983565b820191906000526020600020905b81548152906001019060200180831161096657829003601f168201915b505050505081565b60045481565b80600190805190602001906109a79291906113cf565b5050565b600a60009054906101000a900460ff1681565b60006109d860405180602001604052806000815250610be4565b50905080610a12576040517f311f87a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055460075442610a239190611e27565b1115610a8f576002600860006101000a81548160ff02191690836002811115610a4f57610a4e6114ef565b5b02179055506001600a60006101000a81548160ff0219169083151502179055506001600a60016101000a81548160ff021916908315150217905550610b34565b60045460065410610b33576000600860006101000a81548160ff02191690836002811115610ac057610abf6114ef565b5b02179055506001600a60006101000a81548160ff0219169083151502179055506001600a60016101000a81548160ff0219169083151502179055507f5369558c667e962b633128a01c31764d053da51f61d17370d327ed17f77deccc30604051610b2a9190611e6a565b60405180910390a15b5b505050565b60018054610b4690611dc6565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7290611dc6565b8015610bbf5780601f10610b9457610100808354040283529160200191610bbf565b820191906000526020600020905b815481529060010190602001808311610ba257829003601f168201915b505050505081565b6001600a60016101000a81548160ff021916908315150217905550565b60006060600060045460065410159050600060016002811115610c0a57610c096114ef565b5b600860009054906101000a900460ff166002811115610c2c57610c2b6114ef565b5b149050600060055460075442610c429190611e27565b119050600080471190508380610c675750818015610c5d5750825b8015610c665750805b5b9550856040518060400160405280600381526020017f30783000000000000000000000000000000000000000000000000000000000008152509550955050505050915091565b600280811115610cc057610cbf6114ef565b5b600860009054906101000a900460ff166002811115610ce257610ce16114ef565b5b1415610d2557306040517fd6d7e5c1000000000000000000000000000000000000000000000000000000008152600401610d1c9190611e6a565b60405180910390fd5b6002600860006101000a81548160ff02191690836002811115610d4b57610d4a6114ef565b5b0217905550565b60028054610d5f90611dc6565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8b90611dc6565b8015610dd85780601f10610dad57610100808354040283529160200191610dd8565b820191906000526020600020905b815481529060010190602001808311610dbb57829003601f168201915b505050505081565b6000600860009054906101000a900460ff16905090565b600a60019054906101000a900460ff1681565b600860009054906101000a900460ff1681565b60096020528060005260406000206000915090505481565b60065481565b8060029080519060200190610e519291906113cf565b5050565b600060149054906101000a900460ff1681565b6001806002811115610e7d57610e7c6114ef565b5b600860009054906101000a900460ff166002811115610e9f57610e9e6114ef565b5b14610ed6576040517f0300809900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610f6757336040517f91101895000000000000000000000000000000000000000000000000000000008152600401610f5e9190611e6a565b60405180910390fd5b610fb934600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461131d90919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110113460065461131d90919063ffffffff16565b6006819055503373ffffffffffffffffffffffffffffffffffffffff167fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca267492355120834600654604051611061929190611e85565b60405180910390a250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110fc57336040517fef54c8170000000000000000000000000000000000000000000000000000000081526004016110f39190611e6a565b60405180910390fd5b600a60019054906101000a900460ff1661114d57306040517fb1881e160000000000000000000000000000000000000000000000000000000081526004016111449190611e6a565b60405180910390fd5b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116111d157336040517fc43858590000000000000000000000000000000000000000000000000000000081526004016111c89190611e6a565b60405180910390fd5b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061126f8160065461133390919063ffffffff16565b60068190555060008273ffffffffffffffffffffffffffffffffffffffff168260405161129b90611edf565b60006040518083038185875af1925050503d80600081146112d8576040519150601f19603f3d011682016040523d82523d6000602084013e6112dd565b606091505b5050905080611318576040517f92e9f8f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000818361132b9190611ef4565b905092915050565b600081836113419190611e27565b905092915050565b604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160006001811115611386576113856114ef565b5b8152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600060028111156113c9576113c86114ef565b5b81525090565b8280546113db90611dc6565b90600052602060002090601f0160209004810192826113fd5760008555611444565b82601f1061141657805160ff1916838001178555611444565b82800160010185558215611444579182015b82811115611443578251825591602001919060010190611428565b5b5090506114519190611455565b5090565b5b8082111561146e576000816000905550600101611456565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061149d82611472565b9050919050565b6114ad81611492565b82525050565b60006020820190506114c860008301846114a4565b92915050565b60006114d982611472565b9050919050565b6114e9816114ce565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061152f5761152e6114ef565b5b50565b60008190506115408261151e565b919050565b600061155082611532565b9050919050565b61156081611545565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115a0578082015181840152602081019050611585565b838111156115af576000848401525b50505050565b6000601f19601f8301169050919050565b60006115d182611566565b6115db8185611571565b93506115eb818560208601611582565b6115f4816115b5565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061163783836115c6565b905092915050565b6000602082019050919050565b6000611657826115ff565b611661818561160a565b9350836020820285016116738561161b565b8060005b858110156116af5784840389528151611690858261162b565b945061169b8361163f565b925060208a01995050600181019050611677565b50829750879550505050505092915050565b6000819050919050565b6116d4816116c1565b82525050565b600381106116eb576116ea6114ef565b5b50565b60008190506116fc826116da565b919050565b600061170c826116ee565b9050919050565b61171c81611701565b82525050565b60006101208301600083015161173b60008601826114e0565b50602083015161174e6020860182611557565b506040830151848203604086015261176682826115c6565b9150506060830151848203606086015261178082826115c6565b9150506080830151848203608086015261179a828261164c565b91505060a08301516117af60a08601826116cb565b5060c08301516117c260c08601826116cb565b5060e08301516117d560e08601826116cb565b506101008301516117ea610100860182611713565b508091505092915050565b6000602082019050818103600083015261180f8184611722565b905092915050565b611820816116c1565b82525050565b600060208201905061183b6000830184611817565b92915050565b6000604051905090565b600080fd5b600080fd5b61185e816114ce565b811461186957600080fd5b50565b60008135905061187b81611855565b92915050565b6000602082840312156118975761189661184b565b5b60006118a58482850161186c565b91505092915050565b6118b7816116c1565b81146118c257600080fd5b50565b6000813590506118d4816118ae565b92915050565b6000602082840312156118f0576118ef61184b565b5b60006118fe848285016118c5565b91505092915050565b600082825260208201905092915050565b600061192382611566565b61192d8185611907565b935061193d818560208601611582565b611946816115b5565b840191505092915050565b6000602082019050818103600083015261196b8184611918565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119b5826115b5565b810181811067ffffffffffffffff821117156119d4576119d361197d565b5b80604052505050565b60006119e7611841565b90506119f382826119ac565b919050565b600067ffffffffffffffff821115611a1357611a1261197d565b5b611a1c826115b5565b9050602081019050919050565b82818337600083830152505050565b6000611a4b611a46846119f8565b6119dd565b905082815260208101848484011115611a6757611a66611978565b5b611a72848285611a29565b509392505050565b600082601f830112611a8f57611a8e611973565b5b8135611a9f848260208601611a38565b91505092915050565b600060208284031215611abe57611abd61184b565b5b600082013567ffffffffffffffff811115611adc57611adb611850565b5b611ae884828501611a7a565b91505092915050565b60008115159050919050565b611b0681611af1565b82525050565b6000602082019050611b216000830184611afd565b92915050565b600080fd5b600080fd5b60008083601f840112611b4757611b46611973565b5b8235905067ffffffffffffffff811115611b6457611b63611b27565b5b602083019150836001820283011115611b8057611b7f611b2c565b5b9250929050565b60008060208385031215611b9e57611b9d61184b565b5b600083013567ffffffffffffffff811115611bbc57611bbb611850565b5b611bc885828601611b31565b92509250509250929050565b600067ffffffffffffffff821115611bef57611bee61197d565b5b611bf8826115b5565b9050602081019050919050565b6000611c18611c1384611bd4565b6119dd565b905082815260208101848484011115611c3457611c33611978565b5b611c3f848285611a29565b509392505050565b600082601f830112611c5c57611c5b611973565b5b8135611c6c848260208601611c05565b91505092915050565b600060208284031215611c8b57611c8a61184b565b5b600082013567ffffffffffffffff811115611ca957611ca8611850565b5b611cb584828501611c47565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000611ce582611cbe565b611cef8185611cc9565b9350611cff818560208601611582565b611d08816115b5565b840191505092915050565b6000604082019050611d286000830185611afd565b8181036020830152611d3a8184611cda565b90509392505050565b611d4c81611701565b82525050565b6000602082019050611d676000830184611d43565b92915050565b611d7681611545565b82525050565b6000602082019050611d916000830184611d6d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611dde57607f821691505b60208210811415611df257611df1611d97565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e32826116c1565b9150611e3d836116c1565b925082821015611e5057611e4f611df8565b5b828203905092915050565b611e64816114ce565b82525050565b6000602082019050611e7f6000830184611e5b565b92915050565b6000604082019050611e9a6000830185611817565b611ea76020830184611817565b9392505050565b600081905092915050565b50565b6000611ec9600083611eae565b9150611ed482611eb9565b600082019050919050565b6000611eea82611ebc565b9150819050919050565b6000611eff826116c1565b9150611f0a836116c1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f3f57611f3e611df8565b5b82820190509291505056fea26469706673582212204868b0cacf811e8bfaf6d678f9e09645929ebedbfa0a1d36b7ac7f4495fd30e764736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "checkUpkeep(bytes)": {
        "details": "this is the function chainlink keepers calls chekupkeep returns true to trigger the action after the interval has passed"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 384,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "creator",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      },
      {
        "astId": 387,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "creatorType",
        "offset": 20,
        "slot": "0",
        "type": "t_enum(CreatorType)382"
      },
      {
        "astId": 389,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "title",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 391,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "description",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 394,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "tags",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 396,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "goalAmount",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 398,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "duration",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 400,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "currentBalance",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 402,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "s_lastTimeStamp",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 407,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "state",
        "offset": 0,
        "slot": "8",
        "type": "t_enum(State)379"
      },
      {
        "astId": 411,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "donations",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 413,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "nowPayable",
        "offset": 0,
        "slot": "10",
        "type": "t_bool"
      },
      {
        "astId": 415,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "nowRefunding",
        "offset": 1,
        "slot": "10",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(CreatorType)382": {
        "encoding": "inplace",
        "label": "enum Campaign.CreatorType",
        "numberOfBytes": "1"
      },
      "t_enum(State)379": {
        "encoding": "inplace",
        "label": "enum Campaign.State",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}