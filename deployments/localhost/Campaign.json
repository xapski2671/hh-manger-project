{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_category",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_tags",
          "type": "string[]"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_campaignURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "Campaign__AlreadyExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "Campaign__CampaignBankrupt",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Campaign__DonatorIsCreator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donatorAddress",
          "type": "address"
        }
      ],
      "name": "Campaign__NoDonationsHere",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Campaign__NotCreator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "Campaign__NotRefundable",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignAddress",
          "type": "address"
        }
      ],
      "name": "Campaign__NotWithrawable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Campaign__PayoutFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Campaign__RefundFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Campaign__UpkeepNotNeeded",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignExpired",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignSuccessful",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CreatorPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "currentBalance",
          "type": "uint256"
        }
      ],
      "name": "FundingRecieved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "campaignURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "category",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "donations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "duration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCampaignDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "tags",
              "type": "string[]"
            },
            {
              "internalType": "uint256",
              "name": "goalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentBalance",
              "type": "uint256"
            },
            {
              "internalType": "enum Campaign.State",
              "name": "currentState",
              "type": "uint8"
            }
          ],
          "internalType": "struct Campaign.CampaignObject",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCampaignState",
      "outputs": [
        {
          "internalType": "enum Campaign.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donator",
          "type": "address"
        }
      ],
      "name": "getDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "goalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nowPayable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nowRefundable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Campaign.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tags",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "title",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newCategory",
          "type": "string"
        }
      ],
      "name": "updateCategory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newDescription",
          "type": "string"
        }
      ],
      "name": "updateDescription",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_additionalTime",
          "type": "uint256"
        }
      ],
      "name": "updateDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newGoalAmount",
          "type": "uint256"
        }
      ],
      "name": "updateGoalAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newTitle",
          "type": "string"
        }
      ],
      "name": "updateTitle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1b6ad18382ab1b56783434c6cc83ff72405f489604145e4b0c12359afa289cd3",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "2613102",
    "logsBloom": "0x
    "blockHash": "0x4449de4c040607e345b9a5faac1d6dffc1f171c78b15410a98d7b91fac0efa95",
    "transactionHash": "0x1b6ad18382ab1b56783434c6cc83ff72405f489604145e4b0c12359afa289cd3",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "2613102",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "Furry Mittens",
    "Making mittens furry.",
    "Cooking",
    [
      "cooking",
      "household",
      "culinary"
    ],
    2,
    "1296000",
    "ipfs://campaignuri"
  ],
  "numDeployments": 1,
  "solcInputHash": "efedeb2893cbcaede55c38ecff742aa9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_tags\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_campaignURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"Campaign__AlreadyExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"Campaign__CampaignBankrupt\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Campaign__DonatorIsCreator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donatorAddress\",\"type\":\"address\"}],\"name\":\"Campaign__NoDonationsHere\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Campaign__NotCreator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"Campaign__NotRefundable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignAddress\",\"type\":\"address\"}],\"name\":\"Campaign__NotWithrawable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Campaign__PayoutFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Campaign__RefundFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Campaign__UpkeepNotNeeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CreatorPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"}],\"name\":\"FundingRecieved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"campaignURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"category\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"donations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaignDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"tags\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"enum Campaign.State\",\"name\":\"currentState\",\"type\":\"uint8\"}],\"internalType\":\"struct Campaign.CampaignObject\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaignState\",\"outputs\":[{\"internalType\":\"enum Campaign.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"getDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nowPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nowRefundable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum Campaign.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tags\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"title\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newCategory\",\"type\":\"string\"}],\"name\":\"updateCategory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newDescription\",\"type\":\"string\"}],\"name\":\"updateDescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_additionalTime\",\"type\":\"uint256\"}],\"name\":\"updateDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newGoalAmount\",\"type\":\"uint256\"}],\"name\":\"updateGoalAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newTitle\",\"type\":\"string\"}],\"name\":\"updateTitle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"this is the function chainlink keepers calls chekupkeep returns true to trigger the action after the interval has passed\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Campaign.sol\":\"Campaign\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Campaign.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\n\\r\\n// errors\\r\\nerror Campaign__NotInState();\\r\\nerror Campaign__NotCreator(address _address);\\r\\nerror Campaign__DonatorIsCreator(address _address);\\r\\nerror Campaign__PayoutFailed();\\r\\nerror Campaign__NoDonationsHere(address _donatorAddress);\\r\\nerror Campaign__RefundFailed();\\r\\nerror Campaign__UpkeepNotNeeded();\\r\\nerror Campaign__NotWithrawable(address _campaignAddress);\\r\\nerror Campaign__AlreadyExpired(address _campaignAddress);\\r\\nerror Campaign__NotRefundable(address _campaignAddress);\\r\\nerror Campaign__CampaignBankrupt(address _campaignAddress);\\r\\n\\r\\n\\r\\ncontract Campaign is KeeperCompatibleInterface {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  // enums\\r\\n  enum State {\\r\\n    Fundraising,\\r\\n    Expired\\r\\n  }\\r\\n\\r\\n\\r\\n  // state variables\\r\\n  address payable public creator;\\r\\n  string public title;\\r\\n  string public description;\\r\\n  string public category;\\r\\n  string[] public tags;\\r\\n  uint256 public goalAmount;\\r\\n  uint256 public duration;\\r\\n  string public campaignURI;\\r\\n  uint256 public currentBalance;\\r\\n  uint256 private s_lastTimeStamp;\\r\\n  uint256 private maxTimeStamp;\\r\\n  State public state = State.Fundraising; // default state\\r\\n  mapping (address => uint256) public donations;\\r\\n  bool public nowPayable;\\r\\n  bool public nowRefundable;\\r\\n\\r\\n\\r\\n  struct CampaignObject {\\r\\n    address creator;\\r\\n    string title;\\r\\n    string description;\\r\\n    string category;\\r\\n    string[] tags;\\r\\n    uint256 goalAmount;\\r\\n    uint256 duration;\\r\\n    uint256 currentBalance;\\r\\n    State currentState;\\r\\n  }\\r\\n\\r\\n\\r\\n  // events\\r\\n  event FundingRecieved (\\r\\n    address indexed contributor,\\r\\n    uint256 amount,\\r\\n    uint256 currentBalance\\r\\n  );\\r\\n  event CreatorPaid(address creator, address campaignAddress);\\r\\n  event CampaignSuccessful(address campaignAddress);\\r\\n  event CampaignExpired(address campaignAddress);\\r\\n\\r\\n\\r\\n  // modifiers\\r\\n  modifier isCreator() {\\r\\n    if(msg.sender != creator){revert Campaign__NotCreator(msg.sender);}\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  constructor (\\r\\n    address _creator,\\r\\n    string memory _title,\\r\\n    string memory _description,\\r\\n    string memory _category,\\r\\n    string[] memory _tags,\\r\\n    uint256 _goalAmount,\\r\\n    uint256 _duration,\\r\\n    string memory _campaignURI\\r\\n  ) {\\r\\n    creator = payable(_creator);\\r\\n    title = _title;\\r\\n    description = _description;\\r\\n    category = _category;\\r\\n    tags = _tags;\\r\\n    goalAmount = _goalAmount;\\r\\n    s_lastTimeStamp = block.timestamp;\\r\\n    maxTimeStamp = s_lastTimeStamp + 2592000; // 30days\\r\\n    if(_duration > (maxTimeStamp.sub(s_lastTimeStamp))){\\r\\n      duration = maxTimeStamp.sub(s_lastTimeStamp);\\r\\n    }else{\\r\\n      duration = _duration;\\r\\n    }\\r\\n    campaignURI = _campaignURI;\\r\\n    currentBalance = 0;\\r\\n    nowPayable = false;\\r\\n    nowRefundable = true;\\r\\n  }\\r\\n\\r\\n  function donate() external payable {\\r\\n    if(state != State.Fundraising){revert Campaign__AlreadyExpired(address(this));}\\r\\n    if (msg.sender == creator){revert Campaign__DonatorIsCreator(msg.sender);}\\r\\n    donations[msg.sender] = donations[msg.sender].add(msg.value);\\r\\n    currentBalance = currentBalance.add(msg.value);\\r\\n    emit FundingRecieved(msg.sender, msg.value, currentBalance);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev this is the function chainlink keepers calls\\r\\n    chekupkeep returns true to trigger the action after the interval has passed\\r\\n   */\\r\\n  function checkUpkeep(bytes memory /**checkData */) public view override\\r\\n  returns (bool upkeepNeeded, bytes memory /**performData */) \\r\\n  {\\r\\n    bool isOpen = state == State.Fundraising;\\r\\n    bool timePassed = ((block.timestamp - s_lastTimeStamp) > duration);\\r\\n    bool hasBalance = address(this).balance > 0;\\r\\n    upkeepNeeded = (timePassed && isOpen && hasBalance) ;\\r\\n    return (upkeepNeeded, \\\"0x0\\\");\\r\\n  }\\r\\n\\r\\n  function performUpkeep(bytes calldata /**performData */) external override {\\r\\n    (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n    if(!upkeepNeeded){revert Campaign__UpkeepNotNeeded();}\\r\\n\\r\\n    // allow creator withdraw funds\\r\\n    nowPayable = true;\\r\\n    nowRefundable = false;\\r\\n    state = State.Expired;\\r\\n    emit CampaignExpired(address(this));\\r\\n    if(currentBalance >= goalAmount){\\r\\n      emit CampaignSuccessful(address(this));\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function payout() public isCreator {\\r\\n    if(!nowPayable){revert Campaign__NotWithrawable(address(this));}\\r\\n    uint256 totalRaised = currentBalance;\\r\\n    currentBalance = 0;\\r\\n    (bool success, ) = creator.call{value: totalRaised}(\\\"\\\");\\r\\n    if(success){\\r\\n      nowRefundable = false;\\r\\n      emit CreatorPaid(creator, address(this));\\r\\n    }\\r\\n    else{revert Campaign__PayoutFailed();}\\r\\n  }\\r\\n\\r\\n  function refund() public {\\r\\n    if(!nowRefundable){revert Campaign__NotRefundable(address(this));}\\r\\n    if(donations[msg.sender] <= 0){revert Campaign__NoDonationsHere(msg.sender);}\\r\\n    uint256 amountToRefund = donations[msg.sender];\\r\\n    donations[msg.sender] = 0;\\r\\n    if(currentBalance < amountToRefund){revert Campaign__CampaignBankrupt(address(this));}\\r\\n    currentBalance = currentBalance.sub(amountToRefund);\\r\\n    (bool success, ) = payable(msg.sender).call{value: amountToRefund}(\\\"\\\");\\r\\n    if(!success){revert Campaign__RefundFailed();} // TODO: test if it returns value (the money) to mapping\\r\\n  }\\r\\n\\r\\n  function endCampaign() public isCreator {\\r\\n    if(state == State.Expired){revert Campaign__AlreadyExpired(address(this));}\\r\\n    state = State.Expired;\\r\\n    nowRefundable = false;\\r\\n    if(currentBalance > 0){nowPayable = true;}\\r\\n    emit CampaignExpired(address(this));\\r\\n  }\\r\\n\\r\\n  // update functions\\r\\n  function updateTitle(string memory _newTitle) public isCreator {\\r\\n    title = _newTitle;\\r\\n  }\\r\\n\\r\\n  function updateDescription(string memory _newDescription) public isCreator {\\r\\n    description = _newDescription;\\r\\n  }\\r\\n\\r\\n  function updateCategory(string memory _newCategory) public isCreator {\\r\\n    category = _newCategory;\\r\\n  }\\r\\n\\r\\n  function updateGoalAmount(uint256 _newGoalAmount) public isCreator {\\r\\n    goalAmount = _newGoalAmount;\\r\\n  }\\r\\n\\r\\n  function updateDuration(uint256 _additionalTime) public isCreator {\\r\\n    if(_additionalTime + duration > (maxTimeStamp.sub(s_lastTimeStamp))){\\r\\n      duration = maxTimeStamp.sub(s_lastTimeStamp); // 30days\\r\\n    }\\r\\n    else{\\r\\n      duration += _additionalTime;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  // getter functions\\r\\n  function getCreator() public view returns(address) {\\r\\n    return creator;\\r\\n  }\\r\\n\\r\\n  function getBalance() public view returns(uint256) {\\r\\n    return currentBalance;\\r\\n  }\\r\\n\\r\\n  function getCampaignState() public view returns(State) {\\r\\n    return state;\\r\\n  }\\r\\n\\r\\n  function getDonations(address _donator) public view returns(uint256) {\\r\\n    return donations[_donator];\\r\\n  }\\r\\n\\r\\n  function getCampaignDetails() public view returns(CampaignObject memory) {\\r\\n    return CampaignObject(\\r\\n      creator,\\r\\n      title,\\r\\n      description,\\r\\n      category,\\r\\n      tags,\\r\\n      goalAmount,\\r\\n      duration,\\r\\n      currentBalance,\\r\\n      state\\r\\n    );\\r\\n  }\\r\\n}\",\"keccak256\":\"0x8b75013fe769e385a3e8cb6d2e8554be611fc86ccc42ff30f88ae42443a15e7d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526000600b60006101000a81548160ff021916908360018111156200002d576200002c6200038a565b5b02179055503480156200003f57600080fd5b506040516200316a3803806200316a8339818101604052810190620000659190620006f2565b876000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660019080519060200190620000bd92919062000205565b508560029080519060200190620000d692919062000205565b508460039080519060200190620000ef92919062000205565b5083600490805190602001906200010892919062000296565b50826005819055504260098190555062278d006009546200012a919062000885565b600a819055506200014e600954600a54620001ed60201b62001b6a1790919060201c565b821115620001805762000174600954600a54620001ed60201b62001b6a1790919060201c565b60068190555062000188565b816006819055505b8060079080519060200190620001a092919062000205565b5060006008819055506000600d60006101000a81548160ff0219169083151502179055506001600d60016101000a81548160ff021916908315150217905550505050505050505062000982565b60008183620001fd9190620008e2565b905092915050565b82805462000213906200094c565b90600052602060002090601f01602090048101928262000237576000855562000283565b82601f106200025257805160ff191683800117855562000283565b8280016001018555821562000283579182015b828111156200028257825182559160200191906001019062000265565b5b509050620002929190620002fd565b5090565b828054828255906000526020600020908101928215620002ea579160200282015b82811115620002e9578251829080519060200190620002d892919062000205565b5091602001919060010190620002b7565b5b509050620002f991906200031c565b5090565b5b8082111562000318576000816000905550600101620002fe565b5090565b5b8082111562000340576000818162000336919062000344565b506001016200031d565b5090565b50805462000352906200094c565b6000825580601f1062000366575062000387565b601f016020900490600052602060002090810190620003869190620002fd565b5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003fa82620003cd565b9050919050565b6200040c81620003ed565b81146200041857600080fd5b50565b6000815190506200042c8162000401565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000487826200043c565b810181811067ffffffffffffffff82111715620004a957620004a86200044d565b5b80604052505050565b6000620004be620003b9565b9050620004cc82826200047c565b919050565b600067ffffffffffffffff821115620004ef57620004ee6200044d565b5b620004fa826200043c565b9050602081019050919050565b60005b83811015620005275780820151818401526020810190506200050a565b8381111562000537576000848401525b50505050565b6000620005546200054e84620004d1565b620004b2565b90508281526020810184848401111562000573576200057262000437565b5b6200058084828562000507565b509392505050565b600082601f830112620005a0576200059f62000432565b5b8151620005b28482602086016200053d565b91505092915050565b600067ffffffffffffffff821115620005d957620005d86200044d565b5b602082029050602081019050919050565b600080fd5b6000620006066200060084620005bb565b620004b2565b905080838252602082019050602084028301858111156200062c576200062b620005ea565b5b835b818110156200067a57805167ffffffffffffffff81111562000655576200065462000432565b5b80860162000664898262000588565b855260208501945050506020810190506200062e565b5050509392505050565b600082601f8301126200069c576200069b62000432565b5b8151620006ae848260208601620005ef565b91505092915050565b6000819050919050565b620006cc81620006b7565b8114620006d857600080fd5b50565b600081519050620006ec81620006c1565b92915050565b600080600080600080600080610100898b031215620007165762000715620003c3565b5b6000620007268b828c016200041b565b985050602089015167ffffffffffffffff8111156200074a5762000749620003c8565b5b620007588b828c0162000588565b975050604089015167ffffffffffffffff8111156200077c576200077b620003c8565b5b6200078a8b828c0162000588565b965050606089015167ffffffffffffffff811115620007ae57620007ad620003c8565b5b620007bc8b828c0162000588565b955050608089015167ffffffffffffffff811115620007e057620007df620003c8565b5b620007ee8b828c0162000684565b94505060a0620008018b828c01620006db565b93505060c0620008148b828c01620006db565b92505060e089015167ffffffffffffffff811115620008385762000837620003c8565b5b620008468b828c0162000588565b9150509295985092959890939650565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200089282620006b7565b91506200089f83620006b7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620008d757620008d662000856565b5b828201905092915050565b6000620008ef82620006b7565b9150620008fc83620006b7565b92508282101562000912576200091162000856565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200096557607f821691505b602082108114156200097c576200097b6200091d565b5b50919050565b6127d880620009926000396000f3fe6080604052600436106101c25760003560e01c8063590e1ae3116100f7578063cc6cb19a11610095578063ead1b1bf11610064578063ead1b1bf146105ff578063ed88c68e14610628578063ef430aa614610632578063fc116acd1461065d576101c2565b8063cc6cb19a14610543578063ce845d1d14610580578063db912e37146105ab578063e735b48a146105d6576101c2565b806371aac7f9116100d157806371aac7f9146104ab5780637284e416146104c25780637fb3761e146104ed578063c19d93fb14610518576101c2565b8063590e1ae31461043f57806363bd1d4a146104565780636e04ff0d1461046d576101c2565b80631b50ad091161016457806337fb13b01161013e57806337fb13b0146103975780634298b0cd146103c05780634585e33b146103eb5780634a79d50c14610414576101c2565b80631b50ad091461030657806320822abc1461032f5780632636b9451461036c576101c2565b80630ee2cb10116101a05780630ee2cb10146102485780630fb5a6b41461027357806312065fe01461029e5780631910bdc2146102c9576101c2565b806302d05d3f146101c75780630c611f24146101f25780630edd9cc21461021d575b600080fd5b3480156101d357600080fd5b506101dc610686565b6040516101e99190611cee565b60405180910390f35b3480156101fe57600080fd5b506102076106aa565b6040516102149190611fef565b60405180910390f35b34801561022957600080fd5b506102326109c3565b60405161023f919061202c565b60405180910390f35b34801561025457600080fd5b5061025d6109d6565b60405161026a9190612056565b60405180910390f35b34801561027f57600080fd5b506102886109ff565b6040516102959190612080565b60405180910390f35b3480156102aa57600080fd5b506102b3610a05565b6040516102c09190612080565b60405180910390f35b3480156102d557600080fd5b506102f060048036038101906102eb91906120db565b610a0f565b6040516102fd9190612080565b60405180910390f35b34801561031257600080fd5b5061032d60048036038101906103289190612134565b610a58565b005b34801561033b57600080fd5b5061035660048036038101906103519190612134565b610b52565b60405161036391906121ab565b60405180910390f35b34801561037857600080fd5b50610381610bfe565b60405161038e9190612080565b60405180910390f35b3480156103a357600080fd5b506103be60048036038101906103b99190612302565b610c04565b005b3480156103cc57600080fd5b506103d5610cae565b6040516103e2919061202c565b60405180910390f35b3480156103f757600080fd5b50610412600480360381019061040d91906123ab565b610cc1565b005b34801561042057600080fd5b50610429610df5565b60405161043691906121ab565b60405180910390f35b34801561044b57600080fd5b50610454610e83565b005b34801561046257600080fd5b5061046b6110ea565b005b34801561047957600080fd5b50610494600480360381019061048f9190612499565b61131c565b6040516104a2929190612537565b60405180910390f35b3480156104b757600080fd5b506104c06113cf565b005b3480156104ce57600080fd5b506104d761157d565b6040516104e491906121ab565b60405180910390f35b3480156104f957600080fd5b5061050261160b565b60405161050f9190612576565b60405180910390f35b34801561052457600080fd5b5061052d611622565b60405161053a9190612576565b60405180910390f35b34801561054f57600080fd5b5061056a600480360381019061056591906120db565b611635565b6040516105779190612080565b60405180910390f35b34801561058c57600080fd5b5061059561164d565b6040516105a29190612080565b60405180910390f35b3480156105b757600080fd5b506105c0611653565b6040516105cd91906121ab565b60405180910390f35b3480156105e257600080fd5b506105fd60048036038101906105f89190612302565b6116e1565b005b34801561060b57600080fd5b5061062660048036038101906106219190612134565b61178b565b005b610630611825565b005b34801561063e57600080fd5b50610647611a32565b60405161065491906121ab565b60405180910390f35b34801561066957600080fd5b50610684600480360381019061067f9190612302565b611ac0565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106b2611b96565b60405180610120016040528060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018054610707906125c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610733906125c0565b80156107805780601f1061075557610100808354040283529160200191610780565b820191906000526020600020905b81548152906001019060200180831161076357829003601f168201915b5050505050815260200160028054610797906125c0565b80601f01602080910402602001604051908101604052809291908181526020018280546107c3906125c0565b80156108105780601f106107e557610100808354040283529160200191610810565b820191906000526020600020905b8154815290600101906020018083116107f357829003601f168201915b5050505050815260200160038054610827906125c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610853906125c0565b80156108a05780601f10610875576101008083540402835291602001916108a0565b820191906000526020600020905b81548152906001019060200180831161088357829003601f168201915b505050505081526020016004805480602002602001604051908101604052809291908181526020016000905b828210156109785783829060005260206000200180546108eb906125c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610917906125c0565b80156109645780601f1061093957610100808354040283529160200191610964565b820191906000526020600020905b81548152906001019060200180831161094757829003601f168201915b5050505050815260200190600101906108cc565b505050508152602001600554815260200160065481526020016008548152602001600b60009054906101000a900460ff1660018111156109bb576109ba611e9e565b5b815250905090565b600d60019054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b6000600854905090565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ae857336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610adf9190612056565b60405180910390fd5b610aff600954600a54611b6a90919063ffffffff16565b60065482610b0d9190612621565b1115610b3557610b2a600954600a54611b6a90919063ffffffff16565b600681905550610b4f565b8060066000828254610b479190612621565b925050819055505b50565b60048181548110610b6257600080fd5b906000526020600020016000915090508054610b7d906125c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba9906125c0565b8015610bf65780601f10610bcb57610100808354040283529160200191610bf6565b820191906000526020600020905b815481529060010190602001808311610bd957829003601f168201915b505050505081565b60055481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c9457336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610c8b9190612056565b60405180910390fd5b8060019080519060200190610caa929190611c0a565b5050565b600d60009054906101000a900460ff1681565b6000610cdb6040518060200160405280600081525061131c565b50905080610d15576040517f311f87a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600d60006101000a81548160ff0219169083151502179055506000600d60016101000a81548160ff0219169083151502179055506001600b60006101000a81548160ff02191690836001811115610d7157610d70611e9e565b5b02179055507f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d30604051610da59190612056565b60405180910390a160055460085410610df0577f5369558c667e962b633128a01c31764d053da51f61d17370d327ed17f77deccc30604051610de79190612056565b60405180910390a15b505050565b60018054610e02906125c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2e906125c0565b8015610e7b5780601f10610e5057610100808354040283529160200191610e7b565b820191906000526020600020905b815481529060010190602001808311610e5e57829003601f168201915b505050505081565b600d60019054906101000a900460ff16610ed457306040517fb1881e16000000000000000000000000000000000000000000000000000000008152600401610ecb9190612056565b60405180910390fd5b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610f5857336040517fc4385859000000000000000000000000000000000000000000000000000000008152600401610f4f9190612056565b60405180910390fd5b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600854101561102857306040517f6db510f500000000000000000000000000000000000000000000000000000000815260040161101f9190612056565b60405180910390fd5b61103d81600854611b6a90919063ffffffff16565b60088190555060003373ffffffffffffffffffffffffffffffffffffffff1682604051611069906126a8565b60006040518083038185875af1925050503d80600081146110a6576040519150601f19603f3d011682016040523d82523d6000602084013e6110ab565b606091505b50509050806110e6576040517f92e9f8f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461117a57336040517fef54c8170000000000000000000000000000000000000000000000000000000081526004016111719190612056565b60405180910390fd5b600d60009054906101000a900460ff166111cb57306040517f8019f7260000000000000000000000000000000000000000000000000000000081526004016111c29190612056565b60405180910390fd5b60006008549050600060088190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051611221906126a8565b60006040518083038185875af1925050503d806000811461125e576040519150601f19603f3d011682016040523d82523d6000602084013e611263565b606091505b5050905080156112e6576000600d60016101000a81548160ff0219169083151502179055507fba5e837743d81ad0e6deb16089dbb65b549fdda8ad802fd8d4822884d70dc8b260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040516112d992919061271c565b60405180910390a1611318565b6040517f11456ffb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60006060600080600181111561133557611334611e9e565b5b600b60009054906101000a900460ff16600181111561135757611356611e9e565b5b14905060006006546009544261136d9190612745565b119050600080471190508180156113815750825b801561138a5750805b9450846040518060400160405280600381526020017f307830000000000000000000000000000000000000000000000000000000000081525094509450505050915091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461145f57336040517fef54c8170000000000000000000000000000000000000000000000000000000081526004016114569190612056565b60405180910390fd5b60018081111561147257611471611e9e565b5b600b60009054906101000a900460ff16600181111561149457611493611e9e565b5b14156114d757306040517fd6d7e5c10000000000000000000000000000000000000000000000000000000081526004016114ce9190612056565b60405180910390fd5b6001600b60006101000a81548160ff021916908360018111156114fd576114fc611e9e565b5b02179055506000600d60016101000a81548160ff02191690831515021790555060006008541115611544576001600d60006101000a81548160ff0219169083151502179055505b7f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d306040516115739190612056565b60405180910390a1565b6002805461158a906125c0565b80601f01602080910402602001604051908101604052809291908181526020018280546115b6906125c0565b80156116035780601f106115d857610100808354040283529160200191611603565b820191906000526020600020905b8154815290600101906020018083116115e657829003601f168201915b505050505081565b6000600b60009054906101000a900460ff16905090565b600b60009054906101000a900460ff1681565b600c6020528060005260406000206000915090505481565b60085481565b60078054611660906125c0565b80601f016020809104026020016040519081016040528092919081815260200182805461168c906125c0565b80156116d95780601f106116ae576101008083540402835291602001916116d9565b820191906000526020600020905b8154815290600101906020018083116116bc57829003601f168201915b505050505081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461177157336040517fef54c8170000000000000000000000000000000000000000000000000000000081526004016117689190612056565b60405180910390fd5b8060029080519060200190611787929190611c0a565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461181b57336040517fef54c8170000000000000000000000000000000000000000000000000000000081526004016118129190612056565b60405180910390fd5b8060058190555050565b6000600181111561183957611838611e9e565b5b600b60009054906101000a900460ff16600181111561185b5761185a611e9e565b5b1461189d57306040517fd6d7e5c10000000000000000000000000000000000000000000000000000000081526004016118949190612056565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561192e57336040517f911018950000000000000000000000000000000000000000000000000000000081526004016119259190612056565b60405180910390fd5b61198034600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b8090919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506119d834600854611b8090919063ffffffff16565b6008819055503373ffffffffffffffffffffffffffffffffffffffff167fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca267492355120834600854604051611a28929190612779565b60405180910390a2565b60038054611a3f906125c0565b80601f0160208091040260200160405190810160405280929190818152602001828054611a6b906125c0565b8015611ab85780601f10611a8d57610100808354040283529160200191611ab8565b820191906000526020600020905b815481529060010190602001808311611a9b57829003601f168201915b505050505081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611b5057336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401611b479190612056565b60405180910390fd5b8060039080519060200190611b66929190611c0a565b5050565b60008183611b789190612745565b905092915050565b60008183611b8e9190612621565b905092915050565b604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000815260200160006001811115611c0457611c03611e9e565b5b81525090565b828054611c16906125c0565b90600052602060002090601f016020900481019282611c385760008555611c7f565b82601f10611c5157805160ff1916838001178555611c7f565b82800160010185558215611c7f579182015b82811115611c7e578251825591602001919060010190611c63565b5b509050611c8c9190611c90565b5090565b5b80821115611ca9576000816000905550600101611c91565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cd882611cad565b9050919050565b611ce881611ccd565b82525050565b6000602082019050611d036000830184611cdf565b92915050565b6000611d1482611cad565b9050919050565b611d2481611d09565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d64578082015181840152602081019050611d49565b83811115611d73576000848401525b50505050565b6000601f19601f8301169050919050565b6000611d9582611d2a565b611d9f8185611d35565b9350611daf818560208601611d46565b611db881611d79565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611dfb8383611d8a565b905092915050565b6000602082019050919050565b6000611e1b82611dc3565b611e258185611dce565b935083602082028501611e3785611ddf565b8060005b85811015611e735784840389528151611e548582611def565b9450611e5f83611e03565b925060208a01995050600181019050611e3b565b50829750879550505050505092915050565b6000819050919050565b611e9881611e85565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611ede57611edd611e9e565b5b50565b6000819050611eef82611ecd565b919050565b6000611eff82611ee1565b9050919050565b611f0f81611ef4565b82525050565b600061012083016000830151611f2e6000860182611d1b565b5060208301518482036020860152611f468282611d8a565b91505060408301518482036040860152611f608282611d8a565b91505060608301518482036060860152611f7a8282611d8a565b91505060808301518482036080860152611f948282611e10565b91505060a0830151611fa960a0860182611e8f565b5060c0830151611fbc60c0860182611e8f565b5060e0830151611fcf60e0860182611e8f565b50610100830151611fe4610100860182611f06565b508091505092915050565b600060208201905081810360008301526120098184611f15565b905092915050565b60008115159050919050565b61202681612011565b82525050565b6000602082019050612041600083018461201d565b92915050565b61205081611d09565b82525050565b600060208201905061206b6000830184612047565b92915050565b61207a81611e85565b82525050565b60006020820190506120956000830184612071565b92915050565b6000604051905090565b600080fd5b600080fd5b6120b881611d09565b81146120c357600080fd5b50565b6000813590506120d5816120af565b92915050565b6000602082840312156120f1576120f06120a5565b5b60006120ff848285016120c6565b91505092915050565b61211181611e85565b811461211c57600080fd5b50565b60008135905061212e81612108565b92915050565b60006020828403121561214a576121496120a5565b5b60006121588482850161211f565b91505092915050565b600082825260208201905092915050565b600061217d82611d2a565b6121878185612161565b9350612197818560208601611d46565b6121a081611d79565b840191505092915050565b600060208201905081810360008301526121c58184612172565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61220f82611d79565b810181811067ffffffffffffffff8211171561222e5761222d6121d7565b5b80604052505050565b600061224161209b565b905061224d8282612206565b919050565b600067ffffffffffffffff82111561226d5761226c6121d7565b5b61227682611d79565b9050602081019050919050565b82818337600083830152505050565b60006122a56122a084612252565b612237565b9050828152602081018484840111156122c1576122c06121d2565b5b6122cc848285612283565b509392505050565b600082601f8301126122e9576122e86121cd565b5b81356122f9848260208601612292565b91505092915050565b600060208284031215612318576123176120a5565b5b600082013567ffffffffffffffff811115612336576123356120aa565b5b612342848285016122d4565b91505092915050565b600080fd5b600080fd5b60008083601f84011261236b5761236a6121cd565b5b8235905067ffffffffffffffff8111156123885761238761234b565b5b6020830191508360018202830111156123a4576123a3612350565b5b9250929050565b600080602083850312156123c2576123c16120a5565b5b600083013567ffffffffffffffff8111156123e0576123df6120aa565b5b6123ec85828601612355565b92509250509250929050565b600067ffffffffffffffff821115612413576124126121d7565b5b61241c82611d79565b9050602081019050919050565b600061243c612437846123f8565b612237565b905082815260208101848484011115612458576124576121d2565b5b612463848285612283565b509392505050565b600082601f8301126124805761247f6121cd565b5b8135612490848260208601612429565b91505092915050565b6000602082840312156124af576124ae6120a5565b5b600082013567ffffffffffffffff8111156124cd576124cc6120aa565b5b6124d98482850161246b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000612509826124e2565b61251381856124ed565b9350612523818560208601611d46565b61252c81611d79565b840191505092915050565b600060408201905061254c600083018561201d565b818103602083015261255e81846124fe565b90509392505050565b61257081611ef4565b82525050565b600060208201905061258b6000830184612567565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806125d857607f821691505b602082108114156125ec576125eb612591565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061262c82611e85565b915061263783611e85565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561266c5761266b6125f2565b5b828201905092915050565b600081905092915050565b50565b6000612692600083612677565b915061269d82612682565b600082019050919050565b60006126b382612685565b9150819050919050565b6000819050919050565b60006126e26126dd6126d884611cad565b6126bd565b611cad565b9050919050565b60006126f4826126c7565b9050919050565b6000612706826126e9565b9050919050565b612716816126fb565b82525050565b6000604082019050612731600083018561270d565b61273e6020830184612047565b9392505050565b600061275082611e85565b915061275b83611e85565b92508282101561276e5761276d6125f2565b5b828203905092915050565b600060408201905061278e6000830185612071565b61279b6020830184612071565b939250505056fea2646970667358221220c9ed5c130b80fc63399a0fdc7002d4b550fb0cc220256ef61f479fe22795c5c864736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106101c25760003560e01c8063590e1ae3116100f7578063cc6cb19a11610095578063ead1b1bf11610064578063ead1b1bf146105ff578063ed88c68e14610628578063ef430aa614610632578063fc116acd1461065d576101c2565b8063cc6cb19a14610543578063ce845d1d14610580578063db912e37146105ab578063e735b48a146105d6576101c2565b806371aac7f9116100d157806371aac7f9146104ab5780637284e416146104c25780637fb3761e146104ed578063c19d93fb14610518576101c2565b8063590e1ae31461043f57806363bd1d4a146104565780636e04ff0d1461046d576101c2565b80631b50ad091161016457806337fb13b01161013e57806337fb13b0146103975780634298b0cd146103c05780634585e33b146103eb5780634a79d50c14610414576101c2565b80631b50ad091461030657806320822abc1461032f5780632636b9451461036c576101c2565b80630ee2cb10116101a05780630ee2cb10146102485780630fb5a6b41461027357806312065fe01461029e5780631910bdc2146102c9576101c2565b806302d05d3f146101c75780630c611f24146101f25780630edd9cc21461021d575b600080fd5b3480156101d357600080fd5b506101dc610686565b6040516101e99190611cee565b60405180910390f35b3480156101fe57600080fd5b506102076106aa565b6040516102149190611fef565b60405180910390f35b34801561022957600080fd5b506102326109c3565b60405161023f919061202c565b60405180910390f35b34801561025457600080fd5b5061025d6109d6565b60405161026a9190612056565b60405180910390f35b34801561027f57600080fd5b506102886109ff565b6040516102959190612080565b60405180910390f35b3480156102aa57600080fd5b506102b3610a05565b6040516102c09190612080565b60405180910390f35b3480156102d557600080fd5b506102f060048036038101906102eb91906120db565b610a0f565b6040516102fd9190612080565b60405180910390f35b34801561031257600080fd5b5061032d60048036038101906103289190612134565b610a58565b005b34801561033b57600080fd5b5061035660048036038101906103519190612134565b610b52565b60405161036391906121ab565b60405180910390f35b34801561037857600080fd5b50610381610bfe565b60405161038e9190612080565b60405180910390f35b3480156103a357600080fd5b506103be60048036038101906103b99190612302565b610c04565b005b3480156103cc57600080fd5b506103d5610cae565b6040516103e2919061202c565b60405180910390f35b3480156103f757600080fd5b50610412600480360381019061040d91906123ab565b610cc1565b005b34801561042057600080fd5b50610429610df5565b60405161043691906121ab565b60405180910390f35b34801561044b57600080fd5b50610454610e83565b005b34801561046257600080fd5b5061046b6110ea565b005b34801561047957600080fd5b50610494600480360381019061048f9190612499565b61131c565b6040516104a2929190612537565b60405180910390f35b3480156104b757600080fd5b506104c06113cf565b005b3480156104ce57600080fd5b506104d761157d565b6040516104e491906121ab565b60405180910390f35b3480156104f957600080fd5b5061050261160b565b60405161050f9190612576565b60405180910390f35b34801561052457600080fd5b5061052d611622565b60405161053a9190612576565b60405180910390f35b34801561054f57600080fd5b5061056a600480360381019061056591906120db565b611635565b6040516105779190612080565b60405180910390f35b34801561058c57600080fd5b5061059561164d565b6040516105a29190612080565b60405180910390f35b3480156105b757600080fd5b506105c0611653565b6040516105cd91906121ab565b60405180910390f35b3480156105e257600080fd5b506105fd60048036038101906105f89190612302565b6116e1565b005b34801561060b57600080fd5b5061062660048036038101906106219190612134565b61178b565b005b610630611825565b005b34801561063e57600080fd5b50610647611a32565b60405161065491906121ab565b60405180910390f35b34801561066957600080fd5b50610684600480360381019061067f9190612302565b611ac0565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106b2611b96565b60405180610120016040528060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018054610707906125c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610733906125c0565b80156107805780601f1061075557610100808354040283529160200191610780565b820191906000526020600020905b81548152906001019060200180831161076357829003601f168201915b5050505050815260200160028054610797906125c0565b80601f01602080910402602001604051908101604052809291908181526020018280546107c3906125c0565b80156108105780601f106107e557610100808354040283529160200191610810565b820191906000526020600020905b8154815290600101906020018083116107f357829003601f168201915b5050505050815260200160038054610827906125c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610853906125c0565b80156108a05780601f10610875576101008083540402835291602001916108a0565b820191906000526020600020905b81548152906001019060200180831161088357829003601f168201915b505050505081526020016004805480602002602001604051908101604052809291908181526020016000905b828210156109785783829060005260206000200180546108eb906125c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610917906125c0565b80156109645780601f1061093957610100808354040283529160200191610964565b820191906000526020600020905b81548152906001019060200180831161094757829003601f168201915b5050505050815260200190600101906108cc565b505050508152602001600554815260200160065481526020016008548152602001600b60009054906101000a900460ff1660018111156109bb576109ba611e9e565b5b815250905090565b600d60019054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b6000600854905090565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ae857336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610adf9190612056565b60405180910390fd5b610aff600954600a54611b6a90919063ffffffff16565b60065482610b0d9190612621565b1115610b3557610b2a600954600a54611b6a90919063ffffffff16565b600681905550610b4f565b8060066000828254610b479190612621565b925050819055505b50565b60048181548110610b6257600080fd5b906000526020600020016000915090508054610b7d906125c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba9906125c0565b8015610bf65780601f10610bcb57610100808354040283529160200191610bf6565b820191906000526020600020905b815481529060010190602001808311610bd957829003601f168201915b505050505081565b60055481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c9457336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401610c8b9190612056565b60405180910390fd5b8060019080519060200190610caa929190611c0a565b5050565b600d60009054906101000a900460ff1681565b6000610cdb6040518060200160405280600081525061131c565b50905080610d15576040517f311f87a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600d60006101000a81548160ff0219169083151502179055506000600d60016101000a81548160ff0219169083151502179055506001600b60006101000a81548160ff02191690836001811115610d7157610d70611e9e565b5b02179055507f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d30604051610da59190612056565b60405180910390a160055460085410610df0577f5369558c667e962b633128a01c31764d053da51f61d17370d327ed17f77deccc30604051610de79190612056565b60405180910390a15b505050565b60018054610e02906125c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2e906125c0565b8015610e7b5780601f10610e5057610100808354040283529160200191610e7b565b820191906000526020600020905b815481529060010190602001808311610e5e57829003601f168201915b505050505081565b600d60019054906101000a900460ff16610ed457306040517fb1881e16000000000000000000000000000000000000000000000000000000008152600401610ecb9190612056565b60405180910390fd5b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610f5857336040517fc4385859000000000000000000000000000000000000000000000000000000008152600401610f4f9190612056565b60405180910390fd5b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600854101561102857306040517f6db510f500000000000000000000000000000000000000000000000000000000815260040161101f9190612056565b60405180910390fd5b61103d81600854611b6a90919063ffffffff16565b60088190555060003373ffffffffffffffffffffffffffffffffffffffff1682604051611069906126a8565b60006040518083038185875af1925050503d80600081146110a6576040519150601f19603f3d011682016040523d82523d6000602084013e6110ab565b606091505b50509050806110e6576040517f92e9f8f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461117a57336040517fef54c8170000000000000000000000000000000000000000000000000000000081526004016111719190612056565b60405180910390fd5b600d60009054906101000a900460ff166111cb57306040517f8019f7260000000000000000000000000000000000000000000000000000000081526004016111c29190612056565b60405180910390fd5b60006008549050600060088190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051611221906126a8565b60006040518083038185875af1925050503d806000811461125e576040519150601f19603f3d011682016040523d82523d6000602084013e611263565b606091505b5050905080156112e6576000600d60016101000a81548160ff0219169083151502179055507fba5e837743d81ad0e6deb16089dbb65b549fdda8ad802fd8d4822884d70dc8b260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040516112d992919061271c565b60405180910390a1611318565b6040517f11456ffb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60006060600080600181111561133557611334611e9e565b5b600b60009054906101000a900460ff16600181111561135757611356611e9e565b5b14905060006006546009544261136d9190612745565b119050600080471190508180156113815750825b801561138a5750805b9450846040518060400160405280600381526020017f307830000000000000000000000000000000000000000000000000000000000081525094509450505050915091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461145f57336040517fef54c8170000000000000000000000000000000000000000000000000000000081526004016114569190612056565b60405180910390fd5b60018081111561147257611471611e9e565b5b600b60009054906101000a900460ff16600181111561149457611493611e9e565b5b14156114d757306040517fd6d7e5c10000000000000000000000000000000000000000000000000000000081526004016114ce9190612056565b60405180910390fd5b6001600b60006101000a81548160ff021916908360018111156114fd576114fc611e9e565b5b02179055506000600d60016101000a81548160ff02191690831515021790555060006008541115611544576001600d60006101000a81548160ff0219169083151502179055505b7f5cf8cd2bd40f758a95257bed666285eb82801f1bf9223b8ec1481e510ba2e82d306040516115739190612056565b60405180910390a1565b6002805461158a906125c0565b80601f01602080910402602001604051908101604052809291908181526020018280546115b6906125c0565b80156116035780601f106115d857610100808354040283529160200191611603565b820191906000526020600020905b8154815290600101906020018083116115e657829003601f168201915b505050505081565b6000600b60009054906101000a900460ff16905090565b600b60009054906101000a900460ff1681565b600c6020528060005260406000206000915090505481565b60085481565b60078054611660906125c0565b80601f016020809104026020016040519081016040528092919081815260200182805461168c906125c0565b80156116d95780601f106116ae576101008083540402835291602001916116d9565b820191906000526020600020905b8154815290600101906020018083116116bc57829003601f168201915b505050505081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461177157336040517fef54c8170000000000000000000000000000000000000000000000000000000081526004016117689190612056565b60405180910390fd5b8060029080519060200190611787929190611c0a565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461181b57336040517fef54c8170000000000000000000000000000000000000000000000000000000081526004016118129190612056565b60405180910390fd5b8060058190555050565b6000600181111561183957611838611e9e565b5b600b60009054906101000a900460ff16600181111561185b5761185a611e9e565b5b1461189d57306040517fd6d7e5c10000000000000000000000000000000000000000000000000000000081526004016118949190612056565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561192e57336040517f911018950000000000000000000000000000000000000000000000000000000081526004016119259190612056565b60405180910390fd5b61198034600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b8090919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506119d834600854611b8090919063ffffffff16565b6008819055503373ffffffffffffffffffffffffffffffffffffffff167fe76ad748537a48e778fef43dda4a6bd1b50cd62385f9f21a9ca267492355120834600854604051611a28929190612779565b60405180910390a2565b60038054611a3f906125c0565b80601f0160208091040260200160405190810160405280929190818152602001828054611a6b906125c0565b8015611ab85780601f10611a8d57610100808354040283529160200191611ab8565b820191906000526020600020905b815481529060010190602001808311611a9b57829003601f168201915b505050505081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611b5057336040517fef54c817000000000000000000000000000000000000000000000000000000008152600401611b479190612056565b60405180910390fd5b8060039080519060200190611b66929190611c0a565b5050565b60008183611b789190612745565b905092915050565b60008183611b8e9190612621565b905092915050565b604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000815260200160006001811115611c0457611c03611e9e565b5b81525090565b828054611c16906125c0565b90600052602060002090601f016020900481019282611c385760008555611c7f565b82601f10611c5157805160ff1916838001178555611c7f565b82800160010185558215611c7f579182015b82811115611c7e578251825591602001919060010190611c63565b5b509050611c8c9190611c90565b5090565b5b80821115611ca9576000816000905550600101611c91565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cd882611cad565b9050919050565b611ce881611ccd565b82525050565b6000602082019050611d036000830184611cdf565b92915050565b6000611d1482611cad565b9050919050565b611d2481611d09565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d64578082015181840152602081019050611d49565b83811115611d73576000848401525b50505050565b6000601f19601f8301169050919050565b6000611d9582611d2a565b611d9f8185611d35565b9350611daf818560208601611d46565b611db881611d79565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611dfb8383611d8a565b905092915050565b6000602082019050919050565b6000611e1b82611dc3565b611e258185611dce565b935083602082028501611e3785611ddf565b8060005b85811015611e735784840389528151611e548582611def565b9450611e5f83611e03565b925060208a01995050600181019050611e3b565b50829750879550505050505092915050565b6000819050919050565b611e9881611e85565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611ede57611edd611e9e565b5b50565b6000819050611eef82611ecd565b919050565b6000611eff82611ee1565b9050919050565b611f0f81611ef4565b82525050565b600061012083016000830151611f2e6000860182611d1b565b5060208301518482036020860152611f468282611d8a565b91505060408301518482036040860152611f608282611d8a565b91505060608301518482036060860152611f7a8282611d8a565b91505060808301518482036080860152611f948282611e10565b91505060a0830151611fa960a0860182611e8f565b5060c0830151611fbc60c0860182611e8f565b5060e0830151611fcf60e0860182611e8f565b50610100830151611fe4610100860182611f06565b508091505092915050565b600060208201905081810360008301526120098184611f15565b905092915050565b60008115159050919050565b61202681612011565b82525050565b6000602082019050612041600083018461201d565b92915050565b61205081611d09565b82525050565b600060208201905061206b6000830184612047565b92915050565b61207a81611e85565b82525050565b60006020820190506120956000830184612071565b92915050565b6000604051905090565b600080fd5b600080fd5b6120b881611d09565b81146120c357600080fd5b50565b6000813590506120d5816120af565b92915050565b6000602082840312156120f1576120f06120a5565b5b60006120ff848285016120c6565b91505092915050565b61211181611e85565b811461211c57600080fd5b50565b60008135905061212e81612108565b92915050565b60006020828403121561214a576121496120a5565b5b60006121588482850161211f565b91505092915050565b600082825260208201905092915050565b600061217d82611d2a565b6121878185612161565b9350612197818560208601611d46565b6121a081611d79565b840191505092915050565b600060208201905081810360008301526121c58184612172565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61220f82611d79565b810181811067ffffffffffffffff8211171561222e5761222d6121d7565b5b80604052505050565b600061224161209b565b905061224d8282612206565b919050565b600067ffffffffffffffff82111561226d5761226c6121d7565b5b61227682611d79565b9050602081019050919050565b82818337600083830152505050565b60006122a56122a084612252565b612237565b9050828152602081018484840111156122c1576122c06121d2565b5b6122cc848285612283565b509392505050565b600082601f8301126122e9576122e86121cd565b5b81356122f9848260208601612292565b91505092915050565b600060208284031215612318576123176120a5565b5b600082013567ffffffffffffffff811115612336576123356120aa565b5b612342848285016122d4565b91505092915050565b600080fd5b600080fd5b60008083601f84011261236b5761236a6121cd565b5b8235905067ffffffffffffffff8111156123885761238761234b565b5b6020830191508360018202830111156123a4576123a3612350565b5b9250929050565b600080602083850312156123c2576123c16120a5565b5b600083013567ffffffffffffffff8111156123e0576123df6120aa565b5b6123ec85828601612355565b92509250509250929050565b600067ffffffffffffffff821115612413576124126121d7565b5b61241c82611d79565b9050602081019050919050565b600061243c612437846123f8565b612237565b905082815260208101848484011115612458576124576121d2565b5b612463848285612283565b509392505050565b600082601f8301126124805761247f6121cd565b5b8135612490848260208601612429565b91505092915050565b6000602082840312156124af576124ae6120a5565b5b600082013567ffffffffffffffff8111156124cd576124cc6120aa565b5b6124d98482850161246b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000612509826124e2565b61251381856124ed565b9350612523818560208601611d46565b61252c81611d79565b840191505092915050565b600060408201905061254c600083018561201d565b818103602083015261255e81846124fe565b90509392505050565b61257081611ef4565b82525050565b600060208201905061258b6000830184612567565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806125d857607f821691505b602082108114156125ec576125eb612591565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061262c82611e85565b915061263783611e85565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561266c5761266b6125f2565b5b828201905092915050565b600081905092915050565b50565b6000612692600083612677565b915061269d82612682565b600082019050919050565b60006126b382612685565b9150819050919050565b6000819050919050565b60006126e26126dd6126d884611cad565b6126bd565b611cad565b9050919050565b60006126f4826126c7565b9050919050565b6000612706826126e9565b9050919050565b612716816126fb565b82525050565b6000604082019050612731600083018561270d565b61273e6020830184612047565b9392505050565b600061275082611e85565b915061275b83611e85565b92508282101561276e5761276d6125f2565b5b828203905092915050565b600060408201905061278e6000830185612071565b61279b6020830184612071565b939250505056fea2646970667358221220c9ed5c130b80fc63399a0fdc7002d4b550fb0cc220256ef61f479fe22795c5c864736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "checkUpkeep(bytes)": {
        "details": "this is the function chainlink keepers calls chekupkeep returns true to trigger the action after the interval has passed"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 384,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "creator",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      },
      {
        "astId": 386,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "title",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 388,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "description",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 390,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "category",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 393,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "tags",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 395,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "goalAmount",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 397,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "duration",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 399,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "campaignURI",
        "offset": 0,
        "slot": "7",
        "type": "t_string_storage"
      },
      {
        "astId": 401,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "currentBalance",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 403,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "s_lastTimeStamp",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 405,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "maxTimeStamp",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 410,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "state",
        "offset": 0,
        "slot": "11",
        "type": "t_enum(State)382"
      },
      {
        "astId": 414,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "donations",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 416,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "nowPayable",
        "offset": 0,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 418,
        "contract": "contracts/Campaign.sol:Campaign",
        "label": "nowRefundable",
        "offset": 1,
        "slot": "13",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(State)382": {
        "encoding": "inplace",
        "label": "enum Campaign.State",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}